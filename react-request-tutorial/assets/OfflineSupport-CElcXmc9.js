var P=Object.defineProperty;var q=(u,t,a)=>t in u?P(u,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):u[t]=a;var b=(u,t,a)=>q(u,typeof t!="symbol"?t+"":t,a);import{r as d,j as e}from"./index-C7SuDyTR.js";import{C as M}from"./ComponentTemplate-BzrYXZsv.js";class F{constructor(){b(this,"storage",new Map);b(this,"cache",new Map);b(this,"syncQueue",[]);b(this,"networkStatus",{online:navigator.onLine});b(this,"syncInProgress",!1);b(this,"listeners",new Set);b(this,"storageKey","offline_requests");b(this,"cacheKey","offline_cache");this.initializeStorage(),this.setupNetworkListeners(),this.setupPeriodicSync()}initializeStorage(){try{const t=localStorage.getItem(this.storageKey);t&&JSON.parse(t).forEach(l=>{this.storage.set(l.id,l),l.status==="pending"&&this.syncQueue.push(l)});const a=localStorage.getItem(this.cacheKey);a&&JSON.parse(a).forEach(l=>{l.expiry>Date.now()&&this.cache.set(l.key,l)})}catch(t){console.error("Failed to initialize offline storage:",t)}}setupNetworkListeners(){if(window.addEventListener("online",this.handleOnline.bind(this)),window.addEventListener("offline",this.handleOffline.bind(this)),"connection"in navigator){const t=navigator.connection;t==null||t.addEventListener("change",this.handleConnectionChange.bind(this)),this.updateNetworkStatus()}}setupPeriodicSync(){setInterval(()=>{this.networkStatus.online&&this.syncQueue.length>0&&this.syncPendingRequests()},3e4)}handleOnline(){this.networkStatus.online=!0,this.updateNetworkStatus(),this.notifyListeners(),this.syncPendingRequests()}handleOffline(){this.networkStatus.online=!1,this.updateNetworkStatus(),this.notifyListeners()}handleConnectionChange(){this.updateNetworkStatus(),this.notifyListeners()}updateNetworkStatus(){if("connection"in navigator){const t=navigator.connection;this.networkStatus={online:navigator.onLine,effectiveType:t==null?void 0:t.effectiveType,downlink:t==null?void 0:t.downlink,rtt:t==null?void 0:t.rtt}}else this.networkStatus={online:navigator.onLine}}notifyListeners(){this.listeners.forEach(t=>t(this.networkStatus))}addNetworkListener(t){return this.listeners.add(t),()=>this.listeners.delete(t)}getSyncQueueStatus(){return{total:this.syncQueue.length,pending:this.syncQueue.filter(t=>t.status==="pending").length,syncing:this.syncQueue.filter(t=>t.status==="syncing").length,failed:this.syncQueue.filter(t=>t.status==="failed").length}}getCacheStats(){return{size:this.cache.size,totalSize:Array.from(this.cache.values()).reduce((t,a)=>t+JSON.stringify(a.data).length,0)}}async request(t){const{url:a,method:n,headers:l={},body:p,priority:f="medium",cacheFirst:w=!1,cacheTTL:j=3e5}=t,h=this.getCacheKey(a,n,p);if(w||!this.networkStatus.online){const c=this.getFromCache(h);if(c)return{data:c.data,fromCache:!0}}if(this.networkStatus.online)try{const c=await this.executeRequest({url:a,method:n,headers:l,body:p});if(n.toLowerCase()==="get"&&c.ok){const m=await c.json();return this.setCache(h,m,j,c.headers.get("etag"),c.headers.get("last-modified")),{data:m,fromCache:!1}}return{data:await c.json(),fromCache:!1}}catch(c){const m=this.getFromCache(h);if(m)return{data:m.data,fromCache:!0,error:c};throw c}if(n.toLowerCase()!=="get"){const c=this.generateId(),m={id:c,url:a,method:n,headers:l,body:p,timestamp:Date.now(),retryCount:0,priority:f,status:"pending"};return this.storage.set(c,m),this.syncQueue.push(m),this.persistStorage(),{requestId:c,queued:!0}}const y=this.getFromCache(h);if(y)return{data:y.data,fromCache:!0};throw new Error("No cached data available for offline request")}getMockData(t,a,n){if(t.includes("/api/users")){if(a.toLowerCase()==="get")return{users:[{id:1,name:"Alice Johnson",email:"alice@example.com",status:"active"},{id:2,name:"Bob Smith",email:"bob@example.com",status:"active"},{id:3,name:"Charlie Brown",email:"charlie@example.com",status:"inactive"}],total:3,page:1};if(a.toLowerCase()==="post")return{id:Date.now(),...n,status:"active",createdAt:new Date().toISOString()}}return t.includes("/api/posts")&&a.toLowerCase()==="get"?{posts:[{id:1,title:"离线支持最佳实践",content:"如何在Web应用中实现可靠的离线功能...",author:"Alice Johnson",publishedAt:"2024-01-15T10:00:00Z"},{id:2,title:"Service Worker详解",content:"深入理解Service Worker的工作原理...",author:"Bob Smith",publishedAt:"2024-01-14T15:30:00Z"}],total:2,page:1}:{message:"Mock data for "+t,timestamp:Date.now()}}async executeRequest(t){await new Promise(n=>setTimeout(n,Math.random()*500+100));const a=this.getMockData(t.url,t.method,t.body);return new Response(JSON.stringify(a),{status:200,statusText:"OK",headers:{"Content-Type":"application/json",etag:`"${Date.now()}"`,"last-modified":new Date().toUTCString()}})}getCacheKey(t,a,n){const l=n?JSON.stringify(n):"";return`${a.toUpperCase()}_${t}_${l}`}getFromCache(t){const a=this.cache.get(t);return a&&a.expiry>Date.now()?a:(a&&this.cache.delete(t),null)}setCache(t,a,n,l,p){const f={key:t,data:a,timestamp:Date.now(),expiry:Date.now()+n,etag:l||void 0,lastModified:p||void 0};this.cache.set(t,f),this.persistCache()}generateId(){return Math.random().toString(36).substr(2,9)}persistStorage(){try{const t=Array.from(this.storage.values());localStorage.setItem(this.storageKey,JSON.stringify(t))}catch(t){console.error("Failed to persist storage:",t)}}persistCache(){try{const t=Array.from(this.cache.values());localStorage.setItem(this.cacheKey,JSON.stringify(t))}catch(t){console.error("Failed to persist cache:",t)}}async syncPendingRequests(){if(!(this.syncInProgress||!this.networkStatus.online)){this.syncInProgress=!0;try{const t={high:3,medium:2,low:1};this.syncQueue.sort((a,n)=>t[n.priority]-t[a.priority]);for(const a of this.syncQueue.slice())if(a.status==="pending")try{a.status="syncing",await this.executeRequest({url:a.url,method:a.method,headers:a.headers,body:a.body}),a.status="synced",this.removeFromSyncQueue(a.id)}catch{a.status="failed",a.retryCount++,a.retryCount>=3&&this.removeFromSyncQueue(a.id)}this.persistStorage()}finally{this.syncInProgress=!1}}}removeFromSyncQueue(t){this.syncQueue=this.syncQueue.filter(a=>a.id!==t),this.storage.delete(t)}clearCache(){this.cache.clear(),localStorage.removeItem(this.cacheKey)}clearSyncQueue(){this.syncQueue=[],this.storage.clear(),localStorage.removeItem(this.storageKey)}getNetworkStatus(){return{...this.networkStatus}}getAllStoredRequests(){return Array.from(this.storage.values())}}const R=({className:u=""})=>{const[t]=d.useState(()=>new F),[a,n]=d.useState(t.getNetworkStatus()),[l,p]=d.useState({total:0,pending:0,syncing:0,failed:0}),[f,w]=d.useState({size:0,totalSize:0}),[j,h]=d.useState([]),[y,c]=d.useState(!1),[m,C]=d.useState([]),[v,x]=d.useState([]);d.useEffect(()=>{const s=t.addNetworkListener(o=>{n(o),g(`网络状态变化: ${o.online?"在线":"离线"}`)}),i=setInterval(()=>{p(t.getSyncQueueStatus()),w(t.getCacheStats()),x(t.getAllStoredRequests())},1e3);return()=>{s(),clearInterval(i)}},[t]);const g=s=>{const i=new Date().toLocaleTimeString();C(o=>[`[${i}] ${s}`,...o.slice(0,9)])},S=async s=>{c(!0);try{const i=await t.request(s);i.queued?(g(`请求已排队: ${s.method} ${s.url}`),h(o=>[{id:i.requestId,method:s.method,url:s.url,status:"queued",timestamp:Date.now()},...o.slice(0,9)])):(g(`请求完成: ${s.method} ${s.url} (${i.fromCache?"缓存":"网络"})`),h(o=>[{id:Date.now().toString(),method:s.method,url:s.url,status:"completed",fromCache:i.fromCache,data:i.data,timestamp:Date.now()},...o.slice(0,9)]))}catch(i){g(`请求失败: ${s.method} ${s.url} - ${i}`),h(o=>[{id:Date.now().toString(),method:s.method,url:s.url,status:"failed",error:i instanceof Error?i.message:String(i),timestamp:Date.now()},...o.slice(0,9)])}finally{c(!1)}},$=()=>{h([]),C([]),g("历史记录已清空")},D=()=>{t.clearCache(),g("缓存已清空")},I=()=>{t.clearSyncQueue(),g("同步队列已清空")},E=s=>{if(s===0)return"0 B";const i=1024,o=["B","KB","MB","GB"],N=Math.floor(Math.log(s)/Math.log(i));return parseFloat((s/Math.pow(i,N)).toFixed(2))+" "+o[N]},T=s=>s?"🟢":"🔴",k=s=>({GET:"text-blue-600",POST:"text-green-600",PUT:"text-yellow-600",DELETE:"text-red-600"})[s.toUpperCase()]||"text-gray-600",r=s=>({completed:"text-green-600",queued:"text-yellow-600",failed:"text-red-600",pending:"text-blue-600",syncing:"text-purple-600",synced:"text-green-600"})[s]||"text-gray-600";return e.jsxs("div",{className:`space-y-6 ${u}`,children:[e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsxs("h3",{className:"text-lg font-semibold mb-4 flex items-center",children:[T(a.online)," 网络状态"]}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:[e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-blue-600",children:a.online?"在线":"离线"}),e.jsx("div",{className:"text-sm text-gray-500",children:"连接状态"})]}),a.effectiveType&&e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-green-600",children:a.effectiveType}),e.jsx("div",{className:"text-sm text-gray-500",children:"网络类型"})]}),a.downlink&&e.jsxs("div",{className:"text-center",children:[e.jsxs("div",{className:"text-2xl font-bold text-purple-600",children:[a.downlink.toFixed(1)," Mbps"]}),e.jsx("div",{className:"text-sm text-gray-500",children:"下行速度"})]}),a.rtt&&e.jsxs("div",{className:"text-center",children:[e.jsxs("div",{className:"text-2xl font-bold text-orange-600",children:[a.rtt," ms"]}),e.jsx("div",{className:"text-sm text-gray-500",children:"延迟"})]})]})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"📋 同步队列状态"}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:[e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-blue-600",children:l.total}),e.jsx("div",{className:"text-sm text-gray-500",children:"总计"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-yellow-600",children:l.pending}),e.jsx("div",{className:"text-sm text-gray-500",children:"待处理"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-purple-600",children:l.syncing}),e.jsx("div",{className:"text-sm text-gray-500",children:"同步中"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-red-600",children:l.failed}),e.jsx("div",{className:"text-sm text-gray-500",children:"失败"})]})]})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"💾 缓存统计"}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-green-600",children:f.size}),e.jsx("div",{className:"text-sm text-gray-500",children:"缓存项数"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-blue-600",children:E(f.totalSize)}),e.jsx("div",{className:"text-sm text-gray-500",children:"总大小"})]})]})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"🧪 测试操作"}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-3 gap-4",children:[e.jsx("button",{onClick:()=>S({url:"/api/users",method:"GET",cacheFirst:!0}),disabled:y,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50",children:"获取用户列表"}),e.jsx("button",{onClick:()=>S({url:"/api/posts",method:"GET",cacheFirst:!1}),disabled:y,className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50",children:"获取文章列表"}),e.jsx("button",{onClick:()=>S({url:"/api/users",method:"POST",body:{name:`用户${Date.now()}`,email:`user${Date.now()}@example.com`},priority:"high"}),disabled:y,className:"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 disabled:opacity-50",children:"创建用户"}),e.jsx("button",{onClick:D,className:"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600",children:"清空缓存"}),e.jsx("button",{onClick:I,className:"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600",children:"清空队列"}),e.jsx("button",{onClick:$,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600",children:"清空历史"})]})]}),v.length>0&&e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"📦 存储的请求"}),e.jsx("div",{className:"space-y-2",children:v.map(s=>e.jsxs("div",{className:"flex items-center justify-between p-3 bg-gray-50 rounded",children:[e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsx("span",{className:`font-medium ${k(s.method)}`,children:s.method}),e.jsx("span",{className:"text-gray-600",children:s.url}),e.jsx("span",{className:`text-sm ${r(s.status)}`,children:s.status})]}),e.jsxs("div",{className:"text-sm text-gray-500",children:["重试: ",s.retryCount,"/3"]})]},s.id))})]}),j.length>0&&e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"📜 请求历史"}),e.jsx("div",{className:"space-y-2",children:j.map(s=>e.jsxs("div",{className:"flex items-center justify-between p-3 bg-gray-50 rounded",children:[e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsx("span",{className:`font-medium ${k(s.method)}`,children:s.method}),e.jsx("span",{className:"text-gray-600",children:s.url}),e.jsx("span",{className:`text-sm ${r(s.status)}`,children:s.status}),s.fromCache&&e.jsx("span",{className:"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded",children:"缓存"})]}),e.jsx("div",{className:"text-sm text-gray-500",children:new Date(s.timestamp).toLocaleTimeString()})]},s.id))})]}),m.length>0&&e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"📝 操作日志"}),e.jsx("div",{className:"bg-gray-900 text-green-400 p-4 rounded font-mono text-sm max-h-64 overflow-y-auto",children:m.map((s,i)=>e.jsx("div",{className:"mb-1",children:s},i))})]}),e.jsxs("div",{className:"bg-blue-50 rounded-lg p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4 text-blue-800",children:"✨ 功能特性"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium text-blue-700 mb-2",children:"离线支持"}),e.jsxs("ul",{className:"space-y-1 text-blue-600",children:[e.jsx("li",{children:"• 自动检测网络状态"}),e.jsx("li",{children:"• 离线请求队列管理"}),e.jsx("li",{children:"• 网络恢复时自动同步"}),e.jsx("li",{children:"• 请求优先级控制"})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium text-blue-700 mb-2",children:"缓存机制"}),e.jsxs("ul",{className:"space-y-1 text-blue-600",children:[e.jsx("li",{children:"• 智能缓存策略"}),e.jsx("li",{children:"• TTL过期控制"}),e.jsx("li",{children:"• ETag和Last-Modified支持"}),e.jsx("li",{children:"• 缓存优先模式"})]})]})]})]})]})},O=({className:u=""})=>{const[t]=d.useState(()=>new F),[a,n]=d.useState(t.getNetworkStatus()),[l,p]=d.useState({size:0,totalSize:0}),[f,w]=d.useState([]),[j,h]=d.useState(!1),[y,c]=d.useState([]),[m,C]=d.useState("cache-first"),v=[{id:"cache-first",name:"缓存优先",strategy:"cache-first",description:"优先使用缓存，缓存不存在时请求网络",config:{url:"/api/users",method:"GET",cacheFirst:!0,cacheTTL:3e5}},{id:"network-first",name:"网络优先",strategy:"network-first",description:"优先请求网络，失败时使用缓存",config:{url:"/api/posts",method:"GET",cacheFirst:!1,cacheTTL:3e5}},{id:"cache-only",name:"仅缓存",strategy:"cache-only",description:"仅使用缓存，不发起网络请求",config:{url:"/api/users",method:"GET",cacheFirst:!0,cacheTTL:3e5}},{id:"network-only",name:"仅网络",strategy:"network-only",description:"仅发起网络请求，不使用缓存",config:{url:"/api/posts",method:"GET",cacheFirst:!1,cacheTTL:0}}];d.useEffect(()=>{const r=t.addNetworkListener(i=>{n(i),x(`网络状态变化: ${i.online?"在线":"离线"}`)}),s=setInterval(()=>{p(t.getCacheStats())},1e3);return()=>{r(),clearInterval(s)}},[t]);const x=r=>{const s=new Date().toLocaleTimeString();c(i=>[`[${s}] ${r}`,...i.slice(0,9)])},g=async r=>{h(!0);const s=Date.now();try{let i;if(r.strategy==="cache-only")try{if(i=await t.request({...r.config,cacheFirst:!0}),!i.fromCache)throw new Error("Cache-only strategy should not make network requests")}catch{throw new Error("No cached data available")}else r.strategy==="network-only"?(t.clearCache(),i=await t.request({...r.config,cacheFirst:!1,cacheTTL:0})):i=await t.request(r.config);const o=Date.now()-s,N={id:r.id,strategy:r.name,duration:o,fromCache:i.fromCache||!1,success:!0,timestamp:Date.now()};w(L=>[N,...L.slice(0,9)]),x(`${r.name}测试完成: ${o}ms (${i.fromCache?"缓存":"网络"})`)}catch(i){const o=Date.now()-s,N={id:r.id,strategy:r.name,duration:o,fromCache:!1,success:!1,error:i instanceof Error?i.message:String(i),timestamp:Date.now()};w(L=>[N,...L.slice(0,9)]),x(`${r.name}测试失败: ${i}`)}finally{h(!1)}},S=async()=>{h(!0),x("开始运行所有缓存策略测试");for(const r of v)await g(r),await new Promise(s=>setTimeout(s,500));x("所有测试完成"),h(!1)},$=()=>{w([]),c([]),x("测试结果已清空")},D=()=>{t.clearCache(),x("缓存已清空")},I=async()=>{h(!0),x("开始预加载缓存数据");try{await t.request({url:"/api/users",method:"GET",cacheFirst:!1,cacheTTL:3e5}),await t.request({url:"/api/posts",method:"GET",cacheFirst:!1,cacheTTL:3e5}),x("缓存预加载完成")}catch(r){x(`缓存预加载失败: ${r}`)}finally{h(!1)}},E=r=>{if(r===0)return"0 B";const s=1024,i=["B","KB","MB","GB"],o=Math.floor(Math.log(r)/Math.log(s));return parseFloat((r/Math.pow(s,o)).toFixed(2))+" "+i[o]},T=r=>({缓存优先:"text-blue-600",网络优先:"text-green-600",仅缓存:"text-purple-600",仅网络:"text-orange-600"})[r]||"text-gray-600",k=r=>r<100?"text-green-600":r<500?"text-yellow-600":"text-red-600";return e.jsxs("div",{className:`space-y-6 ${u}`,children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsxs("h3",{className:"text-lg font-semibold mb-4 flex items-center",children:[a.online?"🟢":"🔴"," 网络状态"]}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"连接状态:"}),e.jsx("span",{className:a.online?"text-green-600":"text-red-600",children:a.online?"在线":"离线"})]}),a.effectiveType&&e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"网络类型:"}),e.jsx("span",{className:"text-blue-600",children:a.effectiveType})]}),a.downlink&&e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"下行速度:"}),e.jsxs("span",{className:"text-purple-600",children:[a.downlink.toFixed(1)," Mbps"]})]})]})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"💾 缓存统计"}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"缓存项数:"}),e.jsx("span",{className:"text-blue-600 font-medium",children:l.size})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"总大小:"}),e.jsx("span",{className:"text-green-600 font-medium",children:E(l.totalSize)})]})]})]})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"📋 缓存策略"}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:v.map(r=>e.jsxs("div",{className:`p-4 border rounded-lg cursor-pointer transition-colors ${m===r.id?"border-blue-500 bg-blue-50":"border-gray-200 hover:border-gray-300"}`,onClick:()=>C(r.id),children:[e.jsxs("div",{className:"flex items-center justify-between mb-2",children:[e.jsx("h4",{className:`font-medium ${T(r.name)}`,children:r.name}),e.jsx("button",{onClick:s=>{s.stopPropagation(),g(r)},disabled:j,className:"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50",children:"测试"})]}),e.jsx("p",{className:"text-sm text-gray-600",children:r.description})]},r.id))})]}),e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"🧪 测试操作"}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:[e.jsx("button",{onClick:S,disabled:j,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50",children:"运行所有测试"}),e.jsx("button",{onClick:I,disabled:j,className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50",children:"预加载缓存"}),e.jsx("button",{onClick:D,className:"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600",children:"清空缓存"}),e.jsx("button",{onClick:$,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600",children:"清空结果"})]})]}),f.length>0&&e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"📊 测试结果"}),e.jsx("div",{className:"overflow-x-auto",children:e.jsxs("table",{className:"w-full text-sm",children:[e.jsx("thead",{children:e.jsxs("tr",{className:"border-b",children:[e.jsx("th",{className:"text-left py-2",children:"策略"}),e.jsx("th",{className:"text-left py-2",children:"耗时"}),e.jsx("th",{className:"text-left py-2",children:"来源"}),e.jsx("th",{className:"text-left py-2",children:"状态"}),e.jsx("th",{className:"text-left py-2",children:"时间"})]})}),e.jsx("tbody",{children:f.map((r,s)=>e.jsxs("tr",{className:"border-b",children:[e.jsx("td",{className:`py-2 ${T(r.strategy)}`,children:r.strategy}),e.jsxs("td",{className:`py-2 ${k(r.duration)}`,children:[r.duration,"ms"]}),e.jsx("td",{className:"py-2",children:e.jsx("span",{className:`px-2 py-1 rounded text-xs ${r.fromCache?"bg-blue-100 text-blue-800":"bg-green-100 text-green-800"}`,children:r.fromCache?"缓存":"网络"})}),e.jsx("td",{className:"py-2",children:e.jsx("span",{className:`px-2 py-1 rounded text-xs ${r.success?"bg-green-100 text-green-800":"bg-red-100 text-red-800"}`,children:r.success?"成功":"失败"})}),e.jsx("td",{className:"py-2 text-gray-500",children:new Date(r.timestamp).toLocaleTimeString()})]},s))})]})})]}),y.length>0&&e.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"📝 操作日志"}),e.jsx("div",{className:"bg-gray-900 text-green-400 p-4 rounded font-mono text-sm max-h-64 overflow-y-auto",children:y.map((r,s)=>e.jsx("div",{className:"mb-1",children:r},s))})]}),e.jsxs("div",{className:"bg-blue-50 rounded-lg p-6",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4 text-blue-800",children:"📈 策略对比"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6 text-sm",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium text-blue-700 mb-2",children:"性能特点"}),e.jsxs("ul",{className:"space-y-1 text-blue-600",children:[e.jsxs("li",{children:["• ",e.jsx("strong",{children:"缓存优先"}),": 响应最快，但可能数据过期"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"网络优先"}),": 数据最新，但响应较慢"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"仅缓存"}),": 离线可用，但依赖预加载"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"仅网络"}),": 数据实时，但离线不可用"]})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium text-blue-700 mb-2",children:"适用场景"}),e.jsxs("ul",{className:"space-y-1 text-blue-600",children:[e.jsxs("li",{children:["• ",e.jsx("strong",{children:"缓存优先"}),": 静态内容、用户配置"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"网络优先"}),": 动态数据、实时信息"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"仅缓存"}),": 离线应用、基础数据"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"仅网络"}),": 敏感操作、实时交易"]})]})]})]})]})]})},Q=[{title:"核心概念",items:["网络状态检测：实时监听在线/离线状态变化","请求队列：离线时存储请求，网络恢复后自动同步","智能缓存：支持多种缓存策略和TTL控制","优先级管理：根据请求重要性确定同步顺序"]},{title:"主要优势",items:["用户体验：离线状态下仍可使用应用核心功能","数据一致性：网络恢复后自动同步离线操作","性能优化：缓存机制减少网络请求，提升响应速度","容错能力：网络异常时提供降级方案"]},{title:"适用场景",items:["移动应用：网络信号不稳定的移动端应用","PWA应用：需要离线功能的渐进式Web应用","表单应用：重要数据录入，防止网络中断丢失","内容应用：新闻、文档等内容的离线阅读"]},{title:"注意事项",items:["存储限制：注意浏览器存储空间限制","数据冲突：处理离线期间的数据冲突问题","安全考虑：敏感数据的缓存和同步策略","性能影响：大量缓存数据对内存的影响"]}],B=[{title:"基础离线支持演示",component:e.jsx(R,{}),description:"演示离线支持的核心功能，包括网络状态监听、请求队列管理、缓存统计等。",observationPoints:["观察网络状态变化时的自动检测和处理","离线时请求会被存储到队列中，网络恢复后自动同步","缓存数据在离线时可以正常访问","同步队列显示待处理、同步中、失败的请求数量"],keyPoints:["网络状态监听使用navigator.onLine和connection API","离线请求存储在localStorage中持久化","缓存支持TTL过期控制和ETag验证","同步队列按优先级排序处理"],commonTraps:["忘记处理网络状态变化事件","缓存数据过期时间设置不合理","离线请求重试次数过多导致性能问题","未考虑存储空间限制"],solutions:["使用addEventListener监听online/offline事件","根据数据特性设置合适的TTL时间","设置最大重试次数和指数退避策略","定期清理过期缓存和失败请求"],importantTips:["网络状态检测不仅包括在线/离线，还包括连接质量","缓存策略应根据数据的实时性要求选择","离线请求同步时要处理可能的数据冲突"]},{title:"缓存策略对比演示",component:e.jsx(O,{}),description:"对比不同缓存策略的性能和适用场景，包括缓存优先、网络优先、仅缓存、仅网络等策略。",observationPoints:["缓存优先策略响应最快，但可能返回过期数据","网络优先策略数据最新，但响应时间较长","仅缓存策略适合离线场景，但依赖预加载","仅网络策略保证数据实时性，但离线不可用"],keyPoints:["不同策略适用于不同的数据类型和场景","缓存命中率直接影响应用性能","TTL设置需要平衡数据新鲜度和性能","网络质量影响策略选择"],commonTraps:["所有数据使用相同的缓存策略","缓存时间设置过长导致数据过期","未考虑缓存失效的处理","忽略网络质量对策略的影响"],solutions:["根据数据特性选择合适的缓存策略","设置合理的TTL时间和刷新机制","实现缓存失效时的降级方案","根据网络状态动态调整策略"],importantTips:["静态内容适合缓存优先，动态数据适合网络优先","关键操作应使用网络优先或仅网络策略","预加载策略可以提升离线体验"]}],z={concepts:["离线支持是现代Web应用的重要特性，通过缓存、队列等技术实现","网络状态检测包括在线/离线状态和连接质量信息","请求队列管理离线期间的操作，网络恢复后自动同步","缓存策略决定数据获取的优先级和性能表现","优先级管理确保重要操作优先同步"],steps:["设计离线支持架构，确定需要离线功能的模块","实现网络状态监听，处理在线/离线状态变化","建立请求队列系统，存储离线期间的操作","实现智能缓存机制，支持多种缓存策略","开发同步逻辑，处理网络恢复后的数据同步","添加冲突解决机制，处理离线期间的数据冲突","优化性能，控制缓存大小和同步频率","测试各种网络场景，确保功能稳定性"],tips:["使用Service Worker可以实现更强大的离线功能","IndexedDB比localStorage更适合存储大量离线数据","实现增量同步可以减少网络流量","考虑使用背景同步API处理离线操作","为用户提供清晰的离线状态指示","实现数据压缩可以节省存储空间","使用乐观更新提升用户体验"]},A={questions:[{question:"如何检测网络状态变化？",answer:"使用navigator.onLine属性检测基本在线状态，监听window的online/offline事件处理状态变化。使用navigator.connection API获取详细的网络信息如连接类型、速度等。还可以通过定期发送心跳请求验证网络连通性。"},{question:"离线请求队列如何设计？",answer:"设计包含请求ID、URL、方法、参数、时间戳、重试次数、优先级等字段的队列结构。使用localStorage或IndexedDB持久化存储。按优先级排序，网络恢复后依次执行。设置最大重试次数和指数退避策略。"},{question:"缓存策略有哪些类型？",answer:"主要包括：1) 缓存优先(Cache First) - 优先使用缓存，适合静态内容；2) 网络优先(Network First) - 优先请求网络，适合动态数据；3) 仅缓存(Cache Only) - 只使用缓存，适合离线场景；4) 仅网络(Network Only) - 只请求网络，适合实时数据。"},{question:"如何处理离线期间的数据冲突？",answer:"实现冲突检测机制，比较时间戳、版本号或ETag。提供冲突解决策略：自动合并、用户选择、最后写入获胜等。使用乐观锁或悲观锁控制并发。记录操作日志便于回滚和审计。"},{question:"离线支持的性能优化方法？",answer:"1) 智能预加载关键数据；2) 压缩缓存数据减少存储空间；3) 增量同步减少网络传输；4) 后台同步避免阻塞用户操作；5) 定期清理过期缓存；6) 使用Web Workers处理大量数据；7) 实现请求去重避免重复操作。"}],keyPoints:["网络状态检测是离线支持的基础","请求队列需要持久化存储和优先级管理","缓存策略应根据数据特性选择","数据冲突解决是离线支持的难点","性能优化关注存储空间和同步效率","用户体验需要清晰的状态提示"]},K={dos:["根据数据特性选择合适的缓存策略","实现渐进式离线功能，优先支持核心功能","提供清晰的网络状态和同步进度提示","设置合理的缓存TTL和存储限制","实现数据冲突检测和解决机制","使用乐观更新提升用户体验","定期清理过期数据和失败请求","测试各种网络场景确保稳定性"],donts:["不要缓存敏感数据如密码、令牌","不要忽略存储空间限制","不要在离线时执行关键业务操作","不要使用过长的缓存时间","不要忽略数据一致性问题","不要阻塞主线程进行大量数据处理","不要忘记处理网络状态变化","不要过度依赖离线功能"],patterns:["缓存优先模式：静态资源和配置数据","网络优先模式：动态内容和实时数据","后备缓存模式：网络失败时使用缓存","预缓存模式：应用启动时预加载关键数据","增量同步模式：只同步变更的数据","乐观更新模式：立即更新UI，后台同步","队列重试模式：失败请求的重试机制","冲突解决模式：处理并发修改冲突"]},U=()=>e.jsx(M,{title:"离线支持",description:"实现Web应用的离线功能，包括网络状态检测、请求队列管理、智能缓存策略等，确保应用在网络不稳定或离线环境下的可用性。",overview:Q,examples:B,tutorial:z,interview:A,bestPractices:K});export{U as default};
