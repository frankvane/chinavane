var O=Object.defineProperty;var q=(c,e,t)=>e in c?O(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var m=(c,e,t)=>q(c,typeof e!="symbol"?e+"":e,t);import{j as s,r as o}from"./index-Bi_r7QuH.js";import{C as J}from"./ComponentTemplate-C5EWLtXX.js";class v{constructor(){m(this,"storage",new Map)}get(e){return this.storage.get(e)||null}set(e,t){this.storage.set(e,t)}remove(e){this.storage.delete(e)}clear(){this.storage.clear()}keys(){return Array.from(this.storage.keys())}size(){return this.storage.size}}class L{constructor(e="app_"){m(this,"prefix");this.prefix=e}get(e){try{const t=localStorage.getItem(this.prefix+e);return t?JSON.parse(t):null}catch{return null}}set(e,t){try{localStorage.setItem(this.prefix+e,JSON.stringify(t))}catch(r){console.warn("LocalStorage set failed:",r)}}remove(e){localStorage.removeItem(this.prefix+e)}clear(){this.keys().forEach(t=>this.remove(t))}keys(){const e=[];for(let t=0;t<localStorage.length;t++){const r=localStorage.key(t);r&&r.startsWith(this.prefix)&&e.push(r.substring(this.prefix.length))}return e}size(){return this.keys().length}}class R{constructor(e="app_"){m(this,"prefix");this.prefix=e}get(e){try{const t=sessionStorage.getItem(this.prefix+e);return t?JSON.parse(t):null}catch{return null}}set(e,t){try{sessionStorage.setItem(this.prefix+e,JSON.stringify(t))}catch(r){console.warn("SessionStorage set failed:",r)}}remove(e){sessionStorage.removeItem(this.prefix+e)}clear(){this.keys().forEach(t=>this.remove(t))}keys(){const e=[];for(let t=0;t<sessionStorage.length;t++){const r=sessionStorage.key(t);r&&r.startsWith(this.prefix)&&e.push(r.substring(this.prefix.length))}return e}size(){return this.keys().length}}class T{constructor(e="AppDB",t="data",r=1){m(this,"dbName");m(this,"storeName");m(this,"version");m(this,"db",null);this.dbName=e,this.storeName=t,this.version=r}async openDB(){return this.db?this.db:new Promise((e,t)=>{const r=indexedDB.open(this.dbName,this.version);r.onerror=()=>t(r.error),r.onsuccess=()=>{this.db=r.result,e(this.db)},r.onupgradeneeded=i=>{const l=i.target.result;l.objectStoreNames.contains(this.storeName)||l.createObjectStore(this.storeName)}})}async get(e){const t=await this.openDB();return new Promise((r,i)=>{const d=t.transaction([this.storeName],"readonly").objectStore(this.storeName).get(e);d.onerror=()=>i(d.error),d.onsuccess=()=>r(d.result||null)})}async set(e,t){const r=await this.openDB();return new Promise((i,l)=>{const g=r.transaction([this.storeName],"readwrite").objectStore(this.storeName).put(t,e);g.onerror=()=>l(g.error),g.onsuccess=()=>i()})}async remove(e){const t=await this.openDB();return new Promise((r,i)=>{const d=t.transaction([this.storeName],"readwrite").objectStore(this.storeName).delete(e);d.onerror=()=>i(d.error),d.onsuccess=()=>r()})}async clear(){const e=await this.openDB();return new Promise((t,r)=>{const n=e.transaction([this.storeName],"readwrite").objectStore(this.storeName).clear();n.onerror=()=>r(n.error),n.onsuccess=()=>t()})}async keys(){const e=await this.openDB();return new Promise((t,r)=>{const n=e.transaction([this.storeName],"readonly").objectStore(this.storeName).getAllKeys();n.onerror=()=>r(n.error),n.onsuccess=()=>t(n.result)})}async size(){const e=await this.openDB();return new Promise((t,r)=>{const n=e.transaction([this.storeName],"readonly").objectStore(this.storeName).count();n.onerror=()=>r(n.error),n.onsuccess=()=>t(n.result)})}}class A{constructor(e){m(this,"config");m(this,"stats",{reads:0,writes:0,hits:0,misses:0,errors:0});this.config=e}async store(e,t,r){try{const i={data:this.serialize(t),timestamp:Date.now(),ttl:(r==null?void 0:r.ttl)||this.config.ttl,size:this.calculateSize(t),metadata:r==null?void 0:r.metadata};if(this.config.maxSize&&i.size>this.config.maxSize)throw new Error(`Data size (${i.size}) exceeds maximum allowed size (${this.config.maxSize})`);let l=i;this.config.encryption&&(l={...i,data:this.config.encryption.encrypt(JSON.stringify(i.data))}),await this.config.adapter.set(e,l),this.stats.writes++}catch(i){throw this.stats.errors++,i}}async retrieve(e){try{this.stats.reads++;const t=await this.config.adapter.get(e);if(!t)return this.stats.misses++,null;if(this.isExpired(t))return await this.remove(e),this.stats.misses++,null;let r=t.data;return this.config.encryption&&(r=JSON.parse(this.config.encryption.decrypt(r))),this.stats.hits++,this.deserialize(r)}catch(t){throw this.stats.errors++,t}}async remove(e){try{await this.config.adapter.remove(e)}catch(t){throw this.stats.errors++,t}}async clear(){try{await this.config.adapter.clear()}catch(e){throw this.stats.errors++,e}}async keys(){try{return await this.config.adapter.keys()}catch(e){throw this.stats.errors++,e}}async size(){try{return await this.config.adapter.size()}catch(e){throw this.stats.errors++,e}}async has(e){return await this.retrieve(e)!==null}async getItemInfo(e){try{return await this.config.adapter.get(e)||null}catch{return this.stats.errors++,null}}async cleanup(){try{const e=await this.keys();let t=0;for(const r of e){const i=await this.config.adapter.get(r);i&&this.isExpired(i)&&(await this.remove(r),t++)}return t}catch(e){throw this.stats.errors++,e}}getStats(){const e=this.stats.hits+this.stats.misses;return{...this.stats,hitRate:e>0?this.stats.hits/e*100:0}}resetStats(){this.stats={reads:0,writes:0,hits:0,misses:0,errors:0}}serialize(e){return this.config.serializer?this.config.serializer.serialize(e):e}deserialize(e){return this.config.serializer?this.config.serializer.deserialize(e):e}calculateSize(e){try{return JSON.stringify(e).length*2}catch{return 1e3}}isExpired(e){return e.ttl?Date.now()-e.timestamp>e.ttl:!1}}const $=()=>{const[c,e]=o.useState("localStorage"),[t,r]=o.useState(null),[i,l]=o.useState(""),[n,d]=o.useState(""),[g,S]=o.useState("60000"),[y,k]=o.useState(""),[j,w]=o.useState(null),[x,z]=o.useState({reads:0,writes:0,hits:0,misses:0,errors:0,hitRate:0}),[b,D]=o.useState([]),[p,f]=o.useState(!1),N=o.useCallback(a=>{switch(a){case"memory":return new v;case"localStorage":return new L("demo_");case"sessionStorage":return new R("demo_");case"indexedDB":return new T("DemoDB","demo");default:return new v}},[]);o.useEffect(()=>{const a=N(c),u=new A({adapter:a,ttl:6e4});r(u),h(u)},[c,N]);const h=o.useCallback(async a=>{try{z(a.getStats());const u=await a.keys();D(u)}catch(u){console.error("Update display failed:",u)}},[]),C=o.useCallback(async()=>{if(!(!t||!i||!n)){f(!0);try{let a;try{a=JSON.parse(n)}catch{a=n}await t.store(i,a,{ttl:parseInt(g)||void 0,metadata:{createdAt:new Date().toISOString()}}),await h(t),l(""),d("")}catch(a){alert(`存储失败: ${a instanceof Error?a.message:"未知错误"}`)}finally{f(!1)}}},[t,i,n,g,h]),P=o.useCallback(async()=>{if(!(!t||!y)){f(!0);try{const a=await t.retrieve(y);w(a),await h(t)}catch(a){alert(`获取失败: ${a instanceof Error?a.message:"未知错误"}`),w(null)}finally{f(!1)}}},[t,y,h]),B=o.useCallback(async a=>{if(t)try{await t.remove(a),await h(t)}catch(u){alert(`删除失败: ${u instanceof Error?u.message:"未知错误"}`)}},[t,h]),E=o.useCallback(async()=>{if(t)try{await t.clear(),await h(t),w(null)}catch(a){alert(`清空失败: ${a instanceof Error?a.message:"未知错误"}`)}},[t,h]),I=o.useCallback(async()=>{if(t)try{const a=await t.cleanup();alert(`清理了 ${a} 个过期项`),await h(t)}catch(a){alert(`清理失败: ${a instanceof Error?a.message:"未知错误"}`)}},[t,h]);return s.jsx("div",{className:"space-y-4",children:s.jsxs("div",{className:"bg-white p-6 rounded-lg border",children:[s.jsx("h3",{className:"text-lg font-semibold mb-4",children:"基础持久化操作"}),s.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[s.jsxs("div",{className:"space-y-4",children:[s.jsxs("div",{children:[s.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"存储类型"}),s.jsxs("select",{value:c,onChange:a=>e(a.target.value),className:"w-full p-2 border border-gray-300 rounded-md",children:[s.jsx("option",{value:"memory",children:"内存存储"}),s.jsx("option",{value:"localStorage",children:"LocalStorage"}),s.jsx("option",{value:"sessionStorage",children:"SessionStorage"}),s.jsx("option",{value:"indexedDB",children:"IndexedDB"})]})]}),s.jsxs("div",{children:[s.jsx("h4",{className:"font-medium text-gray-900 mb-2",children:"存储数据"}),s.jsxs("div",{className:"space-y-2",children:[s.jsx("input",{type:"text",value:i,onChange:a=>l(a.target.value),placeholder:"存储键",className:"w-full p-2 border border-gray-300 rounded-md"}),s.jsx("textarea",{value:n,onChange:a=>d(a.target.value),placeholder:"存储值（支持JSON格式）",className:"w-full p-2 border border-gray-300 rounded-md h-20"}),s.jsx("input",{type:"number",value:g,onChange:a=>S(a.target.value),placeholder:"TTL（毫秒）",className:"w-full p-2 border border-gray-300 rounded-md"}),s.jsx("button",{onClick:C,disabled:p||!i||!n,className:"w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400",children:p?"存储中...":"存储数据"})]})]}),s.jsxs("div",{children:[s.jsx("h4",{className:"font-medium text-gray-900 mb-2",children:"获取数据"}),s.jsxs("div",{className:"space-y-2",children:[s.jsx("input",{type:"text",value:y,onChange:a=>k(a.target.value),placeholder:"要获取的键",className:"w-full p-2 border border-gray-300 rounded-md"}),s.jsx("button",{onClick:P,disabled:p||!y,className:"w-full px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:bg-gray-400",children:p?"获取中...":"获取数据"}),j!==null&&s.jsxs("div",{className:"p-3 bg-gray-100 rounded-md",children:[s.jsx("div",{className:"text-sm font-medium text-gray-700 mb-1",children:"获取结果:"}),s.jsx("pre",{className:"text-sm text-gray-900 whitespace-pre-wrap",children:JSON.stringify(j,null,2)})]})]})]})]}),s.jsxs("div",{className:"space-y-4",children:[s.jsxs("div",{children:[s.jsxs("div",{className:"flex justify-between items-center mb-2",children:[s.jsx("h4",{className:"font-medium text-gray-900",children:"存储统计"}),s.jsxs("div",{className:"flex space-x-2",children:[s.jsx("button",{onClick:I,className:"px-3 py-1 text-sm bg-yellow-600 text-white rounded hover:bg-yellow-700",children:"清理过期"}),s.jsx("button",{onClick:E,className:"px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700",children:"清空存储"})]})]}),s.jsxs("div",{className:"bg-gray-50 p-4 rounded-md space-y-2",children:[s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"存储项数量:"}),s.jsx("span",{className:"text-sm font-medium",children:b.length})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"读取次数:"}),s.jsx("span",{className:"text-sm font-medium",children:x.reads})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"写入次数:"}),s.jsx("span",{className:"text-sm font-medium",children:x.writes})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"命中次数:"}),s.jsx("span",{className:"text-sm font-medium text-green-600",children:x.hits})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"未命中次数:"}),s.jsx("span",{className:"text-sm font-medium text-red-600",children:x.misses})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"错误次数:"}),s.jsx("span",{className:"text-sm font-medium text-orange-600",children:x.errors})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"命中率:"}),s.jsxs("span",{className:"text-sm font-medium",children:[x.hitRate.toFixed(2),"%"]})]})]})]}),s.jsxs("div",{children:[s.jsx("h4",{className:"font-medium text-gray-900 mb-2",children:"存储项列表"}),s.jsx("div",{className:"bg-gray-50 p-4 rounded-md max-h-64 overflow-y-auto",children:b.length===0?s.jsx("div",{className:"text-sm text-gray-500 text-center py-4",children:"暂无存储项"}):s.jsx("div",{className:"space-y-2",children:b.map(a=>s.jsxs("div",{className:"flex items-center justify-between p-2 bg-white rounded border",children:[s.jsxs("div",{className:"flex-1",children:[s.jsx("div",{className:"text-sm font-medium text-gray-900",children:a}),s.jsxs("div",{className:"text-xs text-gray-500",children:["存储类型: ",c]})]}),s.jsx("button",{onClick:()=>B(a),className:"px-2 py-1 text-xs bg-red-600 text-white rounded hover:bg-red-700",children:"删除"})]},a))})})]})]})]})]})})};function W(){const c={title:"请求持久化管理器实现",language:"typescript",code:`// 请求持久化管理器
class RequestPersistenceManager {
  private config: PersistenceConfig;
  private stats = {
    reads: 0,
    writes: 0,
    hits: 0,
    misses: 0,
    errors: 0
  };

  constructor(config: PersistenceConfig) {
    this.config = config;
  }

  // 存储数据
  async store(key: string, data: any, options?: { ttl?: number; metadata?: Record<string, any> }): Promise<void> {
    try {
      const item: PersistenceItem = {
        data: this.serialize(data),
        timestamp: Date.now(),
        ttl: options?.ttl || this.config.ttl,
        size: this.calculateSize(data),
        metadata: options?.metadata
      };

      // 检查大小限制
      if (this.config.maxSize && item.size > this.config.maxSize) {
        throw new Error(\`Data size (\${item.size}) exceeds maximum allowed size (\${this.config.maxSize})\`);
      }

      // 加密（如果配置了）
      let finalData = item;
      if (this.config.encryption) {
        finalData = {
          ...item,
          data: this.config.encryption.encrypt(JSON.stringify(item.data))
        };
      }

      await this.config.adapter.set(key, finalData);
      this.stats.writes++;
    } catch (error) {
      this.stats.errors++;
      throw error;
    }
  }

  // 获取数据
  async retrieve(key: string): Promise<any> {
    try {
      this.stats.reads++;
      
      const item = await this.config.adapter.get(key) as PersistenceItem;
      if (!item) {
        this.stats.misses++;
        return null;
      }

      // 检查是否过期
      if (this.isExpired(item)) {
        await this.remove(key);
        this.stats.misses++;
        return null;
      }

      // 解密（如果配置了）
      let data = item.data;
      if (this.config.encryption) {
        data = JSON.parse(this.config.encryption.decrypt(data));
      }

      this.stats.hits++;
      return this.deserialize(data);
    } catch (error) {
      this.stats.errors++;
      throw error;
    }
  }
}`,highlights:[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74]};return s.jsx(J,{title:"请求持久化",description:"实现多种存储方式的请求数据持久化，支持内存、LocalStorage、SessionStorage和IndexedDB。",overview:s.jsx("div",{className:"space-y-4",children:s.jsxs("div",{className:"bg-blue-50 p-6 rounded-lg",children:[s.jsx("h3",{className:"text-lg font-semibold text-blue-900 mb-3",children:"🔍 核心概念"}),s.jsxs("ul",{className:"space-y-2 text-blue-800",children:[s.jsxs("li",{children:[s.jsx("strong",{children:"存储适配器:"})," 统一的存储接口，支持多种存储方式"]}),s.jsxs("li",{children:[s.jsx("strong",{children:"数据序列化:"})," 自动处理复杂数据类型的序列化和反序列化"]}),s.jsxs("li",{children:[s.jsx("strong",{children:"TTL管理:"})," 基于时间的数据过期机制"]}),s.jsxs("li",{children:[s.jsx("strong",{children:"加密支持:"})," 可选的数据加密和解密功能"]})]})]})}),examples:[{title:"基础持久化操作",component:s.jsx($,{}),description:"演示不同存储方式的基本操作，包括存储、获取、删除和统计。",codeExample:c}],tutorial:{concepts:["持久化是保存应用状态和数据的重要手段","不同存储方式有不同的特点和适用场景","统一的存储接口便于切换和管理"],steps:["选择合适的存储方式","实现存储适配器接口","配置序列化和加密选项","实现数据的存储和获取","添加TTL和清理机制"],tips:["根据数据特性选择存储方式","注意存储容量和性能限制","实现适当的错误处理机制"]},interview:{questions:[{question:"前端有哪些数据持久化方案？各有什么特点？",answer:"主要方案包括：1) Cookie：容量小(4KB)，会自动发送到服务器；2) LocalStorage：容量大(5-10MB)，持久存储；3) SessionStorage：会话级存储，标签页关闭后清除；4) IndexedDB：大容量NoSQL数据库，支持事务；5) WebSQL：已废弃；6) Cache API：用于缓存网络请求。"}],keyPoints:["选择合适的存储方案很重要","注意数据安全和隐私保护","考虑存储容量和性能限制"]},bestPractices:{dos:["根据数据特性选择合适的存储方式","实现统一的存储接口便于管理","添加数据加密保护敏感信息"],donts:["不要在客户端存储敏感数据","不要忽略存储容量限制","不要忘记处理存储异常"],patterns:["适配器模式：统一不同存储方式的接口","策略模式：根据需求选择存储策略","装饰器模式：添加加密、压缩等功能"]}})}export{W as default};
