var R=Object.defineProperty;var D=(r,l,t)=>l in r?R(r,l,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[l]=t;var v=(r,l,t)=>D(r,typeof l!="symbol"?l+"":l,t);import{r as g,j as e}from"./index-C7SuDyTR.js";import{C}from"./ComponentTemplate-BzrYXZsv.js";var x=(r=>(r.EXPONENTIAL="exponential",r.LINEAR="linear",r.FIXED="fixed",r.SMART="smart",r))(x||{});class E{constructor(){v(this,"defaultConfig",{maxRetries:3,strategy:"exponential",baseDelay:1e3,maxDelay:1e4,retryCondition:l=>{var t;return l.name==="AbortError"?!1:l.code==="NETWORK_ERROR"||((t=l.response)==null?void 0:t.status)>=500||l.code==="TIMEOUT"}})}calculateDelay(l,t){let a;switch(t.strategy){case"exponential":a=t.baseDelay*Math.pow(2,l-1);break;case"linear":a=t.baseDelay*l;break;case"fixed":a=t.baseDelay;break;case"smart":l<=2?a=t.baseDelay:a=t.baseDelay*Math.pow(1.5,l-2);break;default:a=t.baseDelay}const i=Math.random()*.1*a;return a=a+i,Math.min(a,t.maxDelay)}async executeWithRetry(l,t={}){const a={...this.defaultConfig,...t},i=[],c=Date.now();let o;for(let d=1;d<=a.maxRetries+1;d++)try{i.push(`尝试 ${d}: 开始执行`);const m=await l(),h=Date.now()-c;return i.push(`尝试 ${d}: 执行成功`),{success:!0,data:m,attempts:d,totalTime:h,retryLog:i}}catch(m){if(o=m,i.push(`尝试 ${d}: 执行失败 - ${m.message}`),d>a.maxRetries)break;if(a.retryCondition&&!a.retryCondition(m)){i.push(`尝试 ${d}: 不满足重试条件，停止重试`);break}const h=this.calculateDelay(d,a);i.push(`尝试 ${d}: 等待 ${h}ms 后重试`),a.onRetry&&a.onRetry(d,m),await new Promise(y=>setTimeout(y,h))}const b=Date.now()-c;return{success:!1,error:o,attempts:a.maxRetries+1,totalTime:b,retryLog:i}}createRetryableFetch(l={}){return async(t,a)=>{const i=()=>fetch(t,a).then(c=>{if(!c.ok){const o=new Error(`HTTP ${c.status}: ${c.statusText}`);throw o.response=c,o}return c});return this.executeWithRetry(i,l)}}}const w=new E,$=()=>{const[r,l]=g.useState({url:"https://api.example.com/data",timeout:5e3,retryConfig:{strategy:x.EXPONENTIAL,maxRetries:3,baseDelay:1e3,maxDelay:1e4}}),[t,a]=g.useState(!1),[i,c]=g.useState([]),[o,b]=g.useState(""),d=async(s=.5)=>{if(await new Promise(n=>setTimeout(n,Math.random()*1e3+500)),Math.random()<s){const n=["网络连接超时","服务器内部错误","请求被限流","认证失败","资源不存在"];throw new Error(n[Math.floor(Math.random()*n.length)])}return{data:`成功获取数据 - ${new Date().toLocaleTimeString()}`,timestamp:Date.now(),requestId:Math.random().toString(36).substr(2,9)}},m=async(s,n)=>{a(!0),b(s);const u=Date.now();try{const j=await w.executeWithRetry(()=>d(n),{...r.retryConfig,onRetry:(N,T)=>{console.log(`${s} - 第 ${N} 次重试: ${T.message}`)}}),p=Date.now(),f={testName:s,success:!0,attempts:j.attempts,totalTime:p-u,data:j.data,timestamp:new Date().toLocaleTimeString(),failureRate:`${n*100}%`};c(N=>[f,...N])}catch(j){const p=Date.now(),f={testName:s,success:!1,attempts:r.retryConfig.maxRetries+1,totalTime:p-u,error:j.toString(),timestamp:new Date().toLocaleTimeString(),failureRate:`${n*100}%`};c(N=>[f,...N])}finally{a(!1),b("")}},h=(s,n)=>{if(s.includes(".")){const[u,j]=s.split(".");l(p=>({...p,[u]:{...p[u],[j]:n}}))}else l(u=>({...u,[s]:n}))},y=()=>{c([])};return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"bg-white p-6 rounded-lg border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"高级重试配置"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"重试策略"}),e.jsxs("select",{value:r.retryConfig.strategy,onChange:s=>h("retryConfig.strategy",s.target.value),className:"w-full p-2 border border-gray-300 rounded-md",children:[e.jsx("option",{value:x.EXPONENTIAL,children:"指数退避"}),e.jsx("option",{value:x.LINEAR,children:"线性退避"}),e.jsx("option",{value:x.FIXED,children:"固定延迟"}),e.jsx("option",{value:x.SMART,children:"智能退避"})]})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"最大重试次数"}),e.jsx("input",{type:"number",min:"1",max:"10",value:r.retryConfig.maxRetries,onChange:s=>h("retryConfig.maxRetries",parseInt(s.target.value)),className:"w-full p-2 border border-gray-300 rounded-md"})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"基础延迟 (ms)"}),e.jsx("input",{type:"number",min:"100",max:"5000",step:"100",value:r.retryConfig.baseDelay,onChange:s=>h("retryConfig.baseDelay",parseInt(s.target.value)),className:"w-full p-2 border border-gray-300 rounded-md"})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"最大延迟 (ms)"}),e.jsx("input",{type:"number",min:"1000",max:"30000",step:"1000",value:r.retryConfig.maxDelay,onChange:s=>h("retryConfig.maxDelay",parseInt(s.target.value)),className:"w-full p-2 border border-gray-300 rounded-md"})]})]})]}),e.jsxs("div",{className:"bg-white p-6 rounded-lg border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"测试场景"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4",children:[e.jsx("button",{onClick:()=>m("低失败率测试",.3),disabled:t,className:"px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed",children:t&&o==="低失败率测试"?"测试中...":"低失败率测试 (30%)"}),e.jsx("button",{onClick:()=>m("中等失败率测试",.6),disabled:t,className:"px-4 py-3 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 disabled:opacity-50 disabled:cursor-not-allowed",children:t&&o==="中等失败率测试"?"测试中...":"中等失败率测试 (60%)"}),e.jsx("button",{onClick:()=>m("高失败率测试",.8),disabled:t,className:"px-4 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed",children:t&&o==="高失败率测试"?"测试中...":"高失败率测试 (80%)"})]}),e.jsx("div",{className:"mt-4 flex justify-end",children:e.jsx("button",{onClick:y,className:"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700",children:"清空结果"})})]}),i.length>0&&e.jsxs("div",{className:"bg-white p-6 rounded-lg border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"测试结果历史"}),e.jsx("div",{className:"overflow-x-auto",children:e.jsxs("table",{className:"w-full text-sm",children:[e.jsx("thead",{children:e.jsxs("tr",{className:"border-b",children:[e.jsx("th",{className:"text-left p-2",children:"测试名称"}),e.jsx("th",{className:"text-left p-2",children:"结果"}),e.jsx("th",{className:"text-left p-2",children:"尝试次数"}),e.jsx("th",{className:"text-left p-2",children:"总耗时"}),e.jsx("th",{className:"text-left p-2",children:"失败率"}),e.jsx("th",{className:"text-left p-2",children:"时间"})]})}),e.jsx("tbody",{children:i.map((s,n)=>e.jsxs("tr",{className:"border-b hover:bg-gray-50",children:[e.jsx("td",{className:"p-2 font-medium",children:s.testName}),e.jsx("td",{className:"p-2",children:e.jsx("span",{className:`px-2 py-1 rounded text-xs ${s.success?"bg-green-100 text-green-800":"bg-red-100 text-red-800"}`,children:s.success?"成功":"失败"})}),e.jsx("td",{className:"p-2",children:s.attempts}),e.jsxs("td",{className:"p-2",children:[s.totalTime,"ms"]}),e.jsx("td",{className:"p-2",children:s.failureRate}),e.jsx("td",{className:"p-2",children:s.timestamp})]},n))})]})})]}),e.jsxs("div",{className:"bg-blue-50 p-6 rounded-lg border border-blue-200",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4 text-blue-800",children:"配置说明"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-700",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold mb-2",children:"重试策略"}),e.jsxs("ul",{className:"space-y-1",children:[e.jsxs("li",{children:["• ",e.jsx("strong",{children:"指数退避:"})," 延迟时间指数增长，适合网络波动"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"线性退避:"})," 延迟时间线性增长，适合服务恢复"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"固定延迟:"})," 固定间隔重试，适合稳定环境"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"智能退避:"})," 自适应调整，综合性能最佳"]})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold mb-2",children:"参数调优"}),e.jsxs("ul",{className:"space-y-1",children:[e.jsxs("li",{children:["• ",e.jsx("strong",{children:"最大重试次数:"})," 平衡成功率与响应时间"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"基础延迟:"})," 影响首次重试的等待时间"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"最大延迟:"})," 防止延迟时间过长"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"失败率:"})," 模拟不同网络环境"]})]})]})]})]})]})},k=()=>{const[r,l]=g.useState(x.EXPONENTIAL),[t,a]=g.useState(!1),[i,c]=g.useState(null),[o,b]=g.useState([]),d=s=>{const n=new Date().toLocaleTimeString();b(u=>[...u,`[${n}] ${s}`])},m=async()=>{if(Math.random()<.7)throw new Error("模拟网络错误");return"请求成功！"},h=async()=>{a(!0),c(null),b([]),d(`开始测试 ${r} 重试策略`);try{const s=await w.executeWithRetry(m,{strategy:r,maxRetries:3,baseDelay:1e3,maxDelay:5e3,onRetry:(n,u)=>{d(`第 ${n} 次重试，错误: ${u.message}`)}});c(s),d(`测试完成，总共尝试 ${s.attempts} 次，耗时 ${s.totalTime}ms`)}catch(s){d(`测试失败: ${s}`)}finally{a(!1)}},y=()=>{b([]),c(null)};return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"bg-white p-6 rounded-lg border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"重试策略配置"}),e.jsx("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:Object.values(x).map(s=>e.jsxs("label",{className:"flex items-center space-x-2",children:[e.jsx("input",{type:"radio",name:"strategy",value:s,checked:r===s,onChange:n=>l(n.target.value),className:"text-blue-600"}),e.jsxs("span",{className:"text-sm",children:[s===x.EXPONENTIAL&&"指数退避",s===x.LINEAR&&"线性退避",s===x.FIXED&&"固定延迟",s===x.SMART&&"智能退避"]})]},s))})]}),e.jsxs("div",{className:"flex space-x-4",children:[e.jsx("button",{onClick:h,disabled:t,className:"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed",children:t?"测试中...":"开始重试测试"}),e.jsx("button",{onClick:y,className:"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700",children:"清空日志"})]}),i&&e.jsxs("div",{className:"bg-white p-6 rounded-lg border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"重试结果"}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:[e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-blue-600",children:i.success?"✅":"❌"}),e.jsx("div",{className:"text-sm text-gray-600",children:"执行结果"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-purple-600",children:i.attempts}),e.jsx("div",{className:"text-sm text-gray-600",children:"尝试次数"})]}),e.jsxs("div",{className:"text-center",children:[e.jsxs("div",{className:"text-2xl font-bold text-green-600",children:[i.totalTime,"ms"]}),e.jsx("div",{className:"text-sm text-gray-600",children:"总耗时"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-orange-600",children:r}),e.jsx("div",{className:"text-sm text-gray-600",children:"重试策略"})]})]})]}),o.length>0&&e.jsxs("div",{className:"bg-gray-50 p-6 rounded-lg border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"执行日志"}),e.jsx("div",{className:"bg-black text-green-400 p-4 rounded font-mono text-sm max-h-64 overflow-y-auto",children:o.map((s,n)=>e.jsx("div",{className:"mb-1",children:s},n))})]}),e.jsxs("div",{className:"bg-blue-50 p-6 rounded-lg border border-blue-200",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4 text-blue-800",children:"策略说明"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold text-blue-700 mb-2",children:"指数退避"}),e.jsx("p",{className:"text-blue-600",children:"延迟时间指数增长：1s → 2s → 4s → 8s"})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold text-blue-700 mb-2",children:"线性退避"}),e.jsx("p",{className:"text-blue-600",children:"延迟时间线性增长：1s → 2s → 3s → 4s"})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold text-blue-700 mb-2",children:"固定延迟"}),e.jsx("p",{className:"text-blue-600",children:"固定间隔重试：1s → 1s → 1s → 1s"})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold text-blue-700 mb-2",children:"智能退避"}),e.jsx("p",{className:"text-blue-600",children:"自适应调整：前两次固定，后续递增"})]})]})]})]})},P=()=>e.jsx(C,{title:"自动重试机制",description:"实现智能的请求重试策略，提高应用的稳定性和用户体验。支持多种重试算法，包括指数退避、线性退避等，并提供灵活的配置选项。",overview:[{title:"核心概念",items:["重试策略：指数退避、线性退避、固定延迟、智能退避","配置参数：最大重试次数、基础延迟、最大延迟、重试条件","错误分类：区分可重试和不可重试的错误类型","监控指标：重试成功率、平均耗时、重试频率"]},{title:"主要优势",items:["提高成功率：通过智能重试显著提高请求成功率","优化体验：自动处理网络异常，提供流畅的用户体验","减轻压力：合理的退避策略保护服务器稳定性","容错能力：增强系统对临时性故障的容错能力"]},{title:"适用场景",items:["网络请求：API调用、文件上传下载、数据同步","系统操作：数据库连接、消息队列、缓存操作","第三方集成：支付接口、短信服务、邮件发送","微服务调用：服务间通信、负载均衡、服务发现"]},{title:"注意事项",items:["避免无限重试：设置合理的最大重试次数和超时时间","错误分类：区分临时性错误和永久性错误","性能考虑：避免重试间隔过短造成服务器压力","幂等性：确保重试操作不会产生副作用"]}],examples:[{title:"基础重试策略",component:e.jsx(k,{}),description:"演示不同退避策略的重试行为",observationPoints:["指数退避策略延迟时间快速增长","线性退避策略延迟时间均匀增长","固定延迟策略保持相同间隔","智能退避策略根据情况自适应调整"],keyPoints:["退避策略影响重试的时间间隔","添加随机抖动避免雷群效应","最大延迟限制防止过长等待","重试回调提供详细的执行信息"],commonTraps:["重试次数设置过多导致长时间等待","没有设置最大延迟时间限制","所有错误都进行重试"],solutions:["根据业务场景合理设置重试次数","设置合理的最大延迟时间","只对可恢复的错误进行重试"],importantTips:["指数退避适合快速恢复的临时故障","线性退避适合需要稳定间隔的场景","智能退避可以根据错误类型调整策略"]},{title:"高级重试策略",component:e.jsx($,{}),description:"演示高级配置和不同失败率下的重试效果",observationPoints:["可配置重试策略、次数、延迟等参数","不同失败率下重试次数和成功率的变化","重试日志和结果统计"],keyPoints:["高级配置支持更灵活的重试策略","失败率越高，重试次数越多，成功率越低","详细日志便于分析重试效果"],commonTraps:["参数配置不合理导致重试无效","未正确处理重试回调"],solutions:["根据实际场景调整参数","实现 onRetry 回调记录日志"],importantTips:["高级重试适合复杂业务和高可用场景","合理配置参数提升系统稳定性"]}],tutorial:{concepts:["自动重试是一种错误恢复机制，当请求失败时自动重新发送请求，提高系统的容错能力","重试策略决定了重试的时间间隔和次数，常见策略包括指数退避、线性退避、固定延迟和智能退避","合理的重试机制可以显著提高应用的可靠性和用户体验，减少因临时网络问题导致的失败","需要区分可重试错误（网络超时、5xx服务器错误）和不可重试错误（4xx客户端错误、认证失败）","重试机制应该包含退避策略、最大重试次数、超时控制和错误分类等核心要素"],steps:["1. 分析业务场景，识别需要重试的错误类型（网络错误、临时服务器错误等）","2. 根据请求的重要性和时效性选择合适的重试策略（指数退避适合快速恢复，线性退避适合避免服务器压力）","3. 设置合理的重试次数（一般3-5次）和基础延迟时间（通常1-2秒起步）","4. 实现重试条件判断逻辑，确保只对可重试的错误进行重试","5. 添加重试回调函数，记录重试过程和监控重试效果","6. 实现超时控制和最大延迟限制，防止无限等待","7. 添加随机抖动机制，避免多个客户端同时重试造成的雷群效应"],tips:["优先使用指数退避策略，它能在快速恢复和避免服务器压力之间取得平衡","为不同业务场景设置不同的重试策略：关键业务用指数退避，大文件上传用线性退避","添加10-20%的随机抖动，避免多个客户端同时重试","设置合理的最大重试次数（3-5次）和最大延迟时间（通常不超过30秒）","详细记录重试日志，包括重试原因、次数、延迟时间等，便于问题排查和性能优化","对于支付等关键操作，要特别谨慎设置重试策略，避免重复扣款等问题"]},interview:{questions:[{question:"什么是自动重试机制？为什么需要它？",answer:"自动重试机制是当请求失败时自动重新发送请求的错误恢复策略。在分布式系统中，网络抖动、服务器临时过载、短暂的服务不可用等问题很常见，自动重试能够透明地处理这些临时性问题，显著提高应用的可靠性和用户体验，减少因网络问题导致的业务中断。"},{question:"常见的重试策略有哪些？各有什么特点和适用场景？",answer:"1. 指数退避：延迟时间指数增长（1s→2s→4s→8s），能快速恢复同时避免服务器过载，适合大多数API调用；2. 线性退避：延迟时间线性增长（1s→2s→3s→4s），增长平稳，适合文件上传等对服务器压力敏感的操作；3. 固定延迟：固定间隔重试，实现简单但可能造成雷群效应，适合低频操作；4. 智能退避：根据错误类型和历史成功率自适应调整，最灵活但实现复杂。"},{question:"如何判断一个错误是否应该重试？请举例说明。",answer:"判断原则是区分临时性错误和永久性错误。应该重试的：网络超时(TIMEOUT)、连接错误(ECONNRESET)、5xx服务器错误(500/502/503/504)、DNS解析失败等临时性问题；不应该重试的：4xx客户端错误(400/401/403/404)、认证失败、权限不足、参数错误、业务逻辑错误等永久性问题。例如，HTTP 503(服务不可用)应该重试，而HTTP 401(未授权)不应该重试。"},{question:"什么是雷群效应？如何在重试机制中避免它？",answer:"雷群效应(Thundering Herd)是指当服务恢复时，大量客户端同时重试导致服务器瞬间压力激增，可能再次压垮服务器的现象。避免方法：1. 添加随机抖动(Jitter)，在计算的延迟基础上增加10-20%的随机时间；2. 使用指数退避策略分散重试时间；3. 实现客户端限流，控制同时重试的请求数量；4. 结合熔断器模式，在检测到服务异常时暂停重试。"},{question:"在生产环境中，如何监控和优化重试机制？",answer:"监控指标：重试成功率、平均重试次数、重试延迟分布、不同错误类型的重试情况；优化策略：1. 根据监控数据调整重试参数；2. 为不同业务场景设置差异化的重试策略；3. 实现重试预算机制，避免过度重试；4. 结合APM工具分析重试对整体性能的影响；5. 定期review重试日志，识别系统性问题并从根源解决。"}],keyPoints:["重试策略的选择要根据具体业务场景和服务特性，没有一刀切的方案","准确区分可重试错误和不可重试错误是重试机制的核心，避免无效重试","合理设置重试次数（通常3-5次）和延迟时间，平衡恢复速度和系统压力","必须添加随机抖动和退避策略，避免雷群效应对服务器造成二次伤害","详细记录重试日志和监控指标，为系统优化和问题排查提供数据支持","重试机制要与熔断器、限流等其他容错机制配合使用，构建完整的容错体系"]},bestPractices:{dos:["根据业务场景和服务特性选择最适合的重试策略，关键业务用指数退避，大文件传输用线性退避","为不同类型的错误设置精确的重试条件，只对临时性错误（网络问题、5xx错误）进行重试","优先使用指数退避策略，它能在快速恢复和避免服务器过载之间取得最佳平衡","必须添加10-20%的随机抖动，有效避免多客户端同时重试造成的雷群效应","设置合理的重试参数：最大重试次数3-5次，基础延迟1-2秒，最大延迟不超过30秒","实现详细的重试日志记录，包括重试原因、次数、延迟时间等，便于问题排查和性能优化","对关键业务路径和外部API调用实施重试机制，提高系统整体可靠性","结合超时控制，为每次重试设置合理的超时时间，避免长时间等待"],donts:["不要对所有错误都进行重试，特别是4xx客户端错误、认证失败等永久性错误","不要在高并发场景使用固定延迟策略，容易造成雷群效应压垮服务器","不要设置过多的重试次数（超过5次），会显著增加响应时间和系统负载","不要忽略重试对整体性能和用户体验的影响，要在可靠性和性能之间找到平衡","不要在重试过程中执行有副作用的操作（如发送邮件、记录日志等），避免重复执行","不要对用户输入错误、参数验证失败等明确的业务错误进行重试","不要在没有监控和日志的情况下部署重试机制，要确保可观测性","不要对支付、扣款等金融操作使用激进的重试策略，避免重复扣费风险"],patterns:["重试 + 熔断器模式：当错误率超过阈值时暂停重试，避免级联失败和资源浪费","重试 + 限流模式：控制同时进行的重试请求数量，防止重试风暴压垮下游服务","重试 + 缓存降级：当重试最终失败时，返回缓存数据或默认值作为降级方案","重试 + 监控告警：实时监控重试成功率、延迟分布等指标，及时发现系统问题","重试 + 幂等性保证：确保重试操作的幂等性，避免重复执行造成数据不一致","重试 + 优雅降级：根据重试失败情况动态调整服务质量，保证核心功能可用"]}});export{P as default};
