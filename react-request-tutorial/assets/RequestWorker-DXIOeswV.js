var W=Object.defineProperty;var D=(c,e,t)=>e in c?W(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var u=(c,e,t)=>D(c,typeof e!="symbol"?e+"":e,t);import{r as o,j as s}from"./index-C7SuDyTR.js";import{C as q}from"./ComponentTemplate-BzrYXZsv.js";class A{static async processTask(e){switch(e.type){case"http-request":return await this.processHttpRequest(e.data);case"data-processing":return await this.processData(e.data);case"image-processing":return await this.processImage(e.data);case"calculation":return await this.processCalculation(e.data);default:throw new Error(`未知任务类型: ${e.type}`)}}static async processHttpRequest(e){if(await new Promise(t=>setTimeout(t,Math.random()*2e3+500)),Math.random()<.1)throw new Error("网络请求失败");return{status:200,data:{message:"请求成功",timestamp:Date.now(),url:e.url},headers:{"content-type":"application/json"}}}static async processData(e){const{items:t}=e,r=[];for(let i=0;i<t.length;i++)i%100===0&&await new Promise(n=>setTimeout(n,10)),r.push({...t[i],processed:!0,processedAt:Date.now(),normalizedValue:t[i].value*2});return{processedItems:r,totalCount:r.length}}static async processImage(e){const{width:t,height:r,format:i}=e,n=t*r/1e5;return await new Promise(l=>setTimeout(l,n)),{originalSize:{width:t,height:r},processedSize:{width:t*.8,height:r*.8},format:i,fileSize:Math.floor(t*r*.3),processedAt:Date.now()}}static async processCalculation(e){const{operation:t,numbers:r}=e;let i;for(let n=0;n<r.length;n++)n%1e3===0&&await new Promise(l=>setTimeout(l,1));switch(t){case"sum":i=r.reduce((n,l)=>n+l,0);break;case"multiply":i=r.reduce((n,l)=>n*l,1);break;case"average":i=r.reduce((n,l)=>n+l,0)/r.length;break;default:throw new Error(`未知计算操作: ${t}`)}return{operation:t,result:i,inputCount:r.length,calculatedAt:Date.now()}}}class I{constructor(e={}){u(this,"config");u(this,"workers",new Map);u(this,"taskQueue",[]);u(this,"activeTasks",new Map);u(this,"completedTasks",[]);u(this,"stats");u(this,"listeners",new Set);u(this,"processingInterval");u(this,"destroyed",!1);this.config={maxWorkers:3,taskTimeout:3e4,retryDelay:1e3,maxQueueSize:100,enablePriority:!0,enableRetry:!0,...e},this.stats={totalTasks:0,completedTasks:0,failedTasks:0,cancelledTasks:0,activeWorkers:0,idleWorkers:0,queueLength:0,avgProcessTime:0,maxProcessTime:0,throughput:0},this.initializeWorkers(),this.startProcessing()}async addTask(e,t,r=5,i,n=2){if(this.destroyed)throw new Error("WorkerManager已销毁");if(this.taskQueue.length>=this.config.maxQueueSize)throw new Error("任务队列已满");const l={id:this.generateId(),type:e,data:t,priority:Math.max(1,Math.min(10,r)),timeout:i||this.config.taskTimeout,retryCount:0,maxRetries:this.config.enableRetry?n:0,status:"pending"};return this.taskQueue.push(l),this.stats.totalTasks++,this.config.enablePriority&&this.sortTaskQueue(),this.updateStats(),this.notifyListeners(),l.id}async addBatchTasks(e){const t=[];for(const r of e)try{const i=await this.addTask(r.type,r.data,r.priority,r.timeout,r.maxRetries);t.push(i)}catch(i){console.error("批量添加任务失败:",i)}return t}cancelTask(e){const t=this.taskQueue.findIndex(i=>i.id===e);if(t!==-1){const i=this.taskQueue[t];return i.status="cancelled",this.taskQueue.splice(t,1),this.completedTasks.push(i),this.stats.cancelledTasks++,this.updateStats(),this.notifyListeners(),!0}const r=this.activeTasks.get(e);if(r){if(r.status="cancelled",r.endTime=Date.now(),r.startTime&&(r.duration=r.endTime-r.startTime),this.activeTasks.delete(e),this.completedTasks.push(r),this.stats.cancelledTasks++,r.workerId){const i=this.workers.get(r.workerId);i&&(i.status="idle",i.currentTask=void 0,i.lastActive=Date.now())}return this.updateStats(),this.notifyListeners(),!0}return!1}getTaskStatus(e){const t=this.taskQueue.find(n=>n.id===e);if(t)return t;const r=this.activeTasks.get(e);if(r)return r;const i=this.completedTasks.find(n=>n.id===e);return i||null}getAllTasks(){return{queue:[...this.taskQueue],active:Array.from(this.activeTasks.values()),completed:[...this.completedTasks]}}getWorkerStates(){return Array.from(this.workers.values())}getStats(){return{...this.stats}}clear(){this.taskQueue.forEach(e=>{e.status="cancelled",this.completedTasks.push(e)}),this.taskQueue=[],this.activeTasks.forEach(e=>{e.status="cancelled",e.endTime=Date.now(),e.startTime&&(e.duration=e.endTime-e.startTime),this.completedTasks.push(e)}),this.activeTasks.clear(),this.workers.forEach(e=>{e.status="idle",e.currentTask=void 0,e.lastActive=Date.now()}),this.updateStats(),this.notifyListeners()}destroy(){this.destroyed=!0,this.clear(),this.processingInterval&&clearInterval(this.processingInterval),this.workers.clear(),this.listeners.clear()}addListener(e){this.listeners.add(e)}removeListener(e){this.listeners.delete(e)}initializeWorkers(){for(let e=0;e<this.config.maxWorkers;e++){const t=`worker-${e+1}`,r={id:t,status:"idle",tasksCompleted:0,tasksError:0,created:Date.now(),lastActive:Date.now()};this.workers.set(t,r)}}startProcessing(){this.processingInterval=setInterval(()=>{this.processTaskQueue()},100)}async processTaskQueue(){if(this.destroyed||this.taskQueue.length===0)return;const e=Array.from(this.workers.values()).find(r=>r.status==="idle");if(!e)return;const t=this.taskQueue.shift();t&&await this.assignTaskToWorker(t,e)}async assignTaskToWorker(e,t){e.status="processing",e.startTime=Date.now(),e.workerId=t.id,t.status="busy",t.currentTask=e.id,t.lastActive=Date.now(),this.activeTasks.set(e.id,e),this.updateStats(),this.notifyListeners();try{const r=new Promise((l,p)=>{setTimeout(()=>p(new Error("任务超时")),e.timeout)}),i=A.processTask(e),n=await Promise.race([i,r]);e.status="completed",e.result=n,e.endTime=Date.now(),e.duration=e.endTime-(e.startTime||0),t.tasksCompleted++,this.stats.completedTasks++}catch(r){e.error=r instanceof Error?r.message:"未知错误",e.retryCount++,e.retryCount<=e.maxRetries&&this.config.enableRetry?(e.status="pending",e.workerId=void 0,setTimeout(()=>{this.destroyed||(this.taskQueue.unshift(e),this.config.enablePriority&&this.sortTaskQueue(),this.updateStats(),this.notifyListeners())},this.config.retryDelay)):(e.status="failed",e.endTime=Date.now(),e.duration=e.endTime-(e.startTime||0),t.tasksError++,this.stats.failedTasks++)}finally{t.status="idle",t.currentTask=void 0,t.lastActive=Date.now(),this.activeTasks.delete(e.id),e.status!=="pending"&&(this.completedTasks.push(e),this.completedTasks.length>100&&(this.completedTasks=this.completedTasks.slice(-50))),this.updateStats(),this.notifyListeners()}}sortTaskQueue(){this.taskQueue.sort((e,t)=>e.priority!==t.priority?t.priority-e.priority:(e.startTime||0)-(t.startTime||0))}updateStats(){this.stats.queueLength=this.taskQueue.length,this.stats.activeWorkers=Array.from(this.workers.values()).filter(i=>i.status==="busy").length,this.stats.idleWorkers=Array.from(this.workers.values()).filter(i=>i.status==="idle").length;const e=this.completedTasks.filter(i=>i.duration&&i.status==="completed");if(e.length>0){const i=e.reduce((n,l)=>n+(l.duration||0),0);this.stats.avgProcessTime=Math.round(i/e.length),this.stats.maxProcessTime=Math.max(...e.map(n=>n.duration||0))}const t=Date.now(),r=this.completedTasks.filter(i=>i.endTime&&t-i.endTime<6e4);this.stats.throughput=r.length/60}notifyListeners(){this.listeners.forEach(e=>{try{e()}catch(t){console.error("监听器执行错误:",t)}})}generateId(){return`task-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}}const Q=()=>{const[c]=o.useState(()=>new I({maxWorkers:3,taskTimeout:1e4,retryDelay:1e3,maxQueueSize:50,enablePriority:!0,enableRetry:!0})),[e,t]=o.useState(c.getAllTasks()),[r,i]=o.useState(c.getWorkerStates()),[n,l]=o.useState(c.getStats()),[p,y]=o.useState(!1),[m,g]=o.useState({taskType:"http-request",priority:5,batchSize:5}),d=o.useCallback(()=>{t(c.getAllTasks()),i(c.getWorkerStates()),l(c.getStats())},[c]);o.useEffect(()=>{c.addListener(d);const a=setInterval(d,1e3);return()=>{c.removeListener(d),clearInterval(a)}},[c,d]);const b=o.useCallback(async()=>{try{const a={"http-request":{url:"https://api.example.com/data",method:"GET"},"data-processing":{items:Array.from({length:100},(h,x)=>({id:x,value:Math.random()}))},"image-processing":{width:800,height:600,format:"jpeg"},calculation:{operation:"sum",numbers:Array.from({length:1e3},()=>Math.random())}}[m.taskType]||{};await c.addTask(m.taskType,a,m.priority),d()}catch(a){alert(`添加任务失败: ${a instanceof Error?a.message:"未知错误"}`)}},[c,m,d]),T=o.useCallback(async()=>{y(!0);try{const a=Array.from({length:m.batchSize},(h,x)=>{const v=["http-request","data-processing","image-processing","calculation"],j=v[x%v.length],C={"http-request":{url:`https://api.example.com/data/${x}`,method:"GET"},"data-processing":{items:Array.from({length:50+x*10},(E,P)=>({id:P,value:Math.random()}))},"image-processing":{width:400+x*100,height:300+x*75,format:"jpeg"},calculation:{operation:["sum","multiply","average"][x%3],numbers:Array.from({length:500+x*100},()=>Math.random())}}[j]||{};return{type:j,data:C,priority:Math.floor(Math.random()*10)+1}});await c.addBatchTasks(a),d()}catch(a){alert(`批量添加失败: ${a instanceof Error?a.message:"未知错误"}`)}finally{y(!1)}},[c,m.batchSize,d]),f=o.useCallback(a=>{c.cancelTask(a),d()},[c,d]),k=o.useCallback(()=>{c.clear(),d()},[c,d]);o.useEffect(()=>()=>c.destroy(),[c]);const w=a=>{switch(a){case"completed":return"text-green-600";case"failed":return"text-red-600";case"processing":return"text-blue-600";case"cancelled":return"text-gray-600";default:return"text-yellow-600"}},N=a=>{switch(a){case"completed":return"bg-green-100";case"failed":return"bg-red-100";case"processing":return"bg-blue-100";case"cancelled":return"bg-gray-100";default:return"bg-yellow-100"}},S=a=>{switch(a){case"busy":return"text-blue-600 bg-blue-100";case"idle":return"text-green-600 bg-green-100";case"error":return"text-red-600 bg-red-100";default:return"text-gray-600 bg-gray-100"}};return s.jsx("div",{className:"space-y-4",children:s.jsxs("div",{className:"bg-white p-6 rounded-lg border",children:[s.jsx("h3",{className:"text-lg font-semibold mb-4",children:"工作线程管理演示"}),s.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[s.jsxs("div",{className:"space-y-4",children:[s.jsxs("div",{children:[s.jsx("h4",{className:"font-medium text-gray-900 mb-2",children:"任务配置"}),s.jsxs("div",{className:"space-y-2",children:[s.jsxs("div",{children:[s.jsx("label",{className:"block text-sm text-gray-600 mb-1",children:"任务类型"}),s.jsxs("select",{value:m.taskType,onChange:a=>g(h=>({...h,taskType:a.target.value})),className:"w-full p-2 border border-gray-300 rounded-md",children:[s.jsx("option",{value:"http-request",children:"HTTP请求"}),s.jsx("option",{value:"data-processing",children:"数据处理"}),s.jsx("option",{value:"image-processing",children:"图像处理"}),s.jsx("option",{value:"calculation",children:"数值计算"})]})]}),s.jsxs("div",{children:[s.jsx("label",{className:"block text-sm text-gray-600 mb-1",children:"优先级 (1-10)"}),s.jsx("input",{type:"number",value:m.priority,onChange:a=>g(h=>({...h,priority:parseInt(a.target.value)||1})),min:"1",max:"10",className:"w-full p-2 border border-gray-300 rounded-md"})]}),s.jsxs("div",{children:[s.jsx("label",{className:"block text-sm text-gray-600 mb-1",children:"批量大小"}),s.jsx("input",{type:"number",value:m.batchSize,onChange:a=>g(h=>({...h,batchSize:parseInt(a.target.value)||1})),min:"1",max:"20",className:"w-full p-2 border border-gray-300 rounded-md"})]})]})]}),s.jsxs("div",{children:[s.jsx("h4",{className:"font-medium text-gray-900 mb-2",children:"操作"}),s.jsxs("div",{className:"space-y-2",children:[s.jsxs("div",{className:"flex space-x-2",children:[s.jsx("button",{onClick:b,disabled:p,className:"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400",children:"添加任务"}),s.jsx("button",{onClick:T,disabled:p,className:"flex-1 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:bg-gray-400",children:p?"添加中...":"批量添加"})]}),s.jsx("button",{onClick:k,className:"w-full px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700",children:"清空所有任务"})]})]}),s.jsxs("div",{children:[s.jsx("h4",{className:"font-medium text-gray-900 mb-2",children:"统计信息"}),s.jsxs("div",{className:"bg-gray-50 p-4 rounded-md space-y-2",children:[s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"总任务数:"}),s.jsx("span",{className:"text-sm font-medium",children:n.totalTasks})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"队列长度:"}),s.jsx("span",{className:"text-sm font-medium text-yellow-600",children:n.queueLength})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"活跃工作线程:"}),s.jsx("span",{className:"text-sm font-medium text-blue-600",children:n.activeWorkers})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"空闲工作线程:"}),s.jsx("span",{className:"text-sm font-medium text-green-600",children:n.idleWorkers})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"已完成:"}),s.jsx("span",{className:"text-sm font-medium text-green-600",children:n.completedTasks})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"失败:"}),s.jsx("span",{className:"text-sm font-medium text-red-600",children:n.failedTasks})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"平均处理时间:"}),s.jsxs("span",{className:"text-sm font-medium",children:[n.avgProcessTime,"ms"]})]}),s.jsxs("div",{className:"flex justify-between",children:[s.jsx("span",{className:"text-sm text-gray-600",children:"吞吐量:"}),s.jsxs("span",{className:"text-sm font-medium",children:[n.throughput.toFixed(1),"/s"]})]})]})]})]}),s.jsxs("div",{className:"space-y-4",children:[s.jsxs("div",{children:[s.jsx("h4",{className:"font-medium text-gray-900 mb-2",children:"工作线程状态"}),s.jsx("div",{className:"bg-gray-50 p-4 rounded-md space-y-2",children:r.map(a=>s.jsxs("div",{className:"bg-white p-3 rounded border",children:[s.jsxs("div",{className:"flex items-center justify-between mb-2",children:[s.jsx("span",{className:"text-sm font-medium",children:a.id}),s.jsx("span",{className:`px-2 py-1 text-xs rounded ${S(a.status)}`,children:a.status})]}),s.jsxs("div",{className:"text-xs text-gray-500 space-y-1",children:[s.jsxs("div",{children:["完成任务: ",a.tasksCompleted]}),s.jsxs("div",{children:["错误任务: ",a.tasksError]}),a.currentTask&&s.jsxs("div",{children:["当前任务: ",a.currentTask.slice(-8)]})]})]},a.id))})]}),s.jsxs("div",{children:[s.jsxs("h4",{className:"font-medium text-gray-900 mb-2",children:["任务队列 (",e.queue.length,")"]}),s.jsx("div",{className:"bg-yellow-50 p-4 rounded-md max-h-32 overflow-y-auto",children:e.queue.length===0?s.jsx("div",{className:"text-sm text-gray-500 text-center py-2",children:"队列为空"}):s.jsxs("div",{className:"space-y-1",children:[e.queue.slice(0,10).map((a,h)=>s.jsxs("div",{className:"flex items-center justify-between text-sm",children:[s.jsxs("div",{className:"flex items-center space-x-2 flex-1",children:[s.jsxs("span",{className:"text-xs text-gray-600",children:["#",h+1]}),s.jsx("span",{className:"text-xs",children:a.type}),s.jsxs("span",{className:"text-xs text-blue-600",children:["P",a.priority]})]}),s.jsx("button",{onClick:()=>f(a.id),className:"px-2 py-1 text-xs bg-red-600 text-white rounded hover:bg-red-700",children:"取消"})]},a.id)),e.queue.length>10&&s.jsxs("div",{className:"text-xs text-gray-500 text-center pt-2",children:["还有 ",e.queue.length-10," 个任务..."]})]})})]}),s.jsxs("div",{children:[s.jsxs("h4",{className:"font-medium text-gray-900 mb-2",children:["处理中任务 (",e.active.length,")"]}),s.jsx("div",{className:"bg-blue-50 p-4 rounded-md max-h-32 overflow-y-auto",children:e.active.length===0?s.jsx("div",{className:"text-sm text-gray-500 text-center py-2",children:"无处理中任务"}):s.jsx("div",{className:"space-y-1",children:e.active.map(a=>s.jsxs("div",{className:"flex items-center justify-between text-sm",children:[s.jsxs("div",{className:"flex items-center space-x-2 flex-1",children:[s.jsx("span",{className:"text-xs",children:a.type}),s.jsxs("span",{className:"text-xs text-blue-600",children:["P",a.priority]}),s.jsx("span",{className:"text-xs text-gray-600",children:a.workerId})]}),s.jsx("button",{onClick:()=>f(a.id),className:"px-2 py-1 text-xs bg-red-600 text-white rounded hover:bg-red-700",children:"取消"})]},a.id))})})]}),s.jsxs("div",{children:[s.jsxs("h4",{className:"font-medium text-gray-900 mb-2",children:["最近完成 (",e.completed.length,")"]}),s.jsx("div",{className:"bg-gray-50 p-4 rounded-md max-h-40 overflow-y-auto",children:e.completed.length===0?s.jsx("div",{className:"text-sm text-gray-500 text-center py-2",children:"暂无完成任务"}):s.jsx("div",{className:"space-y-1",children:e.completed.slice(-10).reverse().map(a=>s.jsxs("div",{className:"flex items-center justify-between text-sm",children:[s.jsxs("div",{className:"flex items-center space-x-2 flex-1",children:[s.jsx("span",{className:`px-2 py-1 text-xs rounded ${N(a.status)} ${w(a.status)}`,children:a.status}),s.jsx("span",{className:"text-xs",children:a.type}),s.jsxs("span",{className:"text-xs text-blue-600",children:["P",a.priority]})]}),s.jsx("span",{className:"text-xs text-gray-500",children:a.duration?`${a.duration}ms`:"-"})]},a.id))})})]})]})]})]})})},R=()=>{const c=[{title:"核心概念",items:["Web Worker：在浏览器主线程之外运行的 JavaScript 脚本，实现多线程并发处理","任务分发：将计算密集型或异步任务分配到 Worker，避免主线程阻塞","消息通信：主线程与 Worker 通过 postMessage/onmessage 进行数据交换","资源隔离：Worker 运行在独立上下文，无法直接访问 DOM 和主线程变量"]},{title:"主要优势",items:["提升页面响应速度，避免界面卡顿","充分利用多核 CPU 资源，提高并发处理能力","适合大数据处理、复杂计算、批量请求等场景","降低主线程压力，提升整体用户体验"]},{title:"适用场景",items:["大规模数据处理和分析","批量网络请求和数据聚合","图片、音视频等多媒体处理","复杂算法和加密解密计算"]},{title:"注意事项",items:["Worker 不能直接操作 DOM，需要通过消息通信反馈结果","数据传递需考虑序列化和性能开销","合理管理 Worker 生命周期，避免内存泄漏","主线程和 Worker 之间的同步与错误处理"]}];return s.jsx(q,{title:"工作线程管理",description:"演示如何使用工作线程管理器来处理并发任务，包括任务队列、优先级调度、重试机制和性能监控。",overview:c,examples:[{title:"基础工作线程管理",component:s.jsx(Q,{}),description:"演示工作线程管理器的基本功能，包括任务添加、执行和监控。",observationPoints:["观察任务在队列中的排队情况","查看工作线程的状态变化（空闲/忙碌）","监控任务的执行进度和完成状态","注意优先级对任务执行顺序的影响"],keyPoints:["工作线程池限制了同时执行的任务数量","任务队列按优先级排序，高优先级任务优先执行","支持任务超时和重试机制","提供详细的性能统计信息"],commonTraps:["任务队列过长导致内存占用过高","工作线程数量设置不当影响性能","任务超时时间设置过短导致频繁重试","没有正确处理任务失败的情况"],solutions:["设置合理的队列大小限制","根据系统资源调整工作线程数量","为不同类型任务设置适当的超时时间","实现完善的错误处理和重试策略"],importantTips:["工作线程管理器会自动分配任务给空闲的工作线程","任务优先级范围是1-10，数字越大优先级越高","失败的任务会根据重试策略自动重新执行","统计信息实时更新，帮助监控系统性能"]}],tutorial:{concepts:["工作线程池：管理固定数量的工作线程来处理任务","任务队列：存储待处理任务的队列，支持优先级排序","任务调度：根据工作线程状态和任务优先级分配任务","重试机制：对失败的任务进行自动重试","性能监控：实时统计任务执行情况和系统性能"],steps:["创建WorkerManager实例并配置参数","定义任务处理器来处理不同类型的任务","添加任务到队列，设置优先级和超时时间","监听管理器事件，更新UI显示","实现任务取消和清理功能"],tips:["合理设置工作线程数量，通常为CPU核心数的1-2倍","为不同类型任务设置不同的超时时间","使用优先级来控制重要任务的执行顺序","定期清理已完成的任务以避免内存泄漏","监控队列长度和处理时间来优化性能"]},interview:{questions:[{question:"什么是工作线程管理？它解决了什么问题？",answer:"工作线程管理是一种并发编程模式，通过维护一个工作线程池来处理大量任务。它解决了以下问题：1）避免频繁创建和销毁线程的开销；2）控制并发数量，防止系统资源耗尽；3）提供任务队列和调度机制；4）支持任务优先级和重试机制。"},{question:"如何设计一个高效的任务队列？",answer:"高效的任务队列设计要考虑：1）支持优先级排序，确保重要任务优先执行；2）设置队列大小限制，防止内存溢出；3）提供任务状态跟踪和监控；4）支持任务取消和超时机制；5）实现高效的入队和出队操作；6）考虑线程安全性。"},{question:"工作线程数量应该如何设置？",answer:"工作线程数量的设置需要考虑：1）CPU密集型任务：线程数 = CPU核心数；2）I/O密集型任务：线程数 = CPU核心数 × 2；3）混合型任务：根据实际测试调整；4）考虑系统内存限制；5）监控系统负载和响应时间来动态调整。"},{question:"如何处理任务执行失败的情况？",answer:"任务失败处理策略包括：1）实现重试机制，设置最大重试次数；2）使用指数退避策略增加重试间隔；3）记录失败原因和错误信息；4）对不同类型的错误采用不同的处理策略；5）提供失败任务的手动重试功能；6）监控失败率并及时告警。"}],keyPoints:["工作线程管理是提高应用并发性能的重要手段","任务队列和优先级调度是核心功能","重试机制和错误处理确保系统稳定性","性能监控帮助优化系统配置","合理的线程数量设置对性能至关重要"]},bestPractices:{dos:["根据任务类型合理设置工作线程数量","为不同优先级的任务设置合适的超时时间","实现完善的错误处理和重试机制","定期监控队列长度和处理性能","及时清理已完成的任务避免内存泄漏","使用任务优先级来控制执行顺序"],donts:["不要设置过多的工作线程导致资源竞争","不要忽略任务超时和失败处理","不要让任务队列无限增长","不要在任务处理中执行阻塞操作","不要忘记在组件卸载时清理资源","不要对所有任务使用相同的配置"],patterns:["生产者-消费者模式：任务生产者添加任务，工作线程作为消费者处理任务","优先级队列模式：使用优先级队列确保重要任务优先执行","重试模式：对失败任务实现指数退避重试策略","监控模式：实时监控系统性能和任务执行状态","资源池模式：复用工作线程避免频繁创建销毁的开销"]}})};export{R as default};
