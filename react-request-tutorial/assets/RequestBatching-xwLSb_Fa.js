var k=Object.defineProperty;var M=(n,s,a)=>s in n?k(n,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[s]=a;var R=(n,s,a)=>M(n,typeof s!="symbol"?s+"":s,a);import{r as x,j as e}from"./index-C7SuDyTR.js";import{C as A}from"./ComponentTemplate-BzrYXZsv.js";class D{constructor(){R(this,"pendingRequests",new Map);R(this,"batchTimers",new Map);R(this,"state",{pendingRequests:[],processingBatches:0,completedBatches:0,mergedRequests:0,totalRequests:0});R(this,"listeners",new Set);R(this,"config",{batchSize:5,batchTimeout:100,maxWaitTime:1e3,enableMerging:!0})}subscribe(s){return this.listeners.add(s),()=>this.listeners.delete(s)}notify(){this.state.pendingRequests=Array.from(this.pendingRequests.values()).flat(),this.listeners.forEach(s=>s({...this.state}))}setConfig(s){this.config={...this.config,...s}}getConfig(){return{...this.config}}addRequest(s,a,l){return new Promise((m,g)=>{const c={id:`req-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,key:s,params:a,resolve:m,reject:g,timestamp:Date.now(),timeout:this.config.maxWaitTime};if(this.state.totalRequests++,this.config.enableMerging){const y=this.pendingRequests.get(s);if(y){const j=y.find(u=>JSON.stringify(u.params)===JSON.stringify(a));if(j){const u=j.resolve,r=j.reject;j.resolve=t=>{u(t),m(t)},j.reject=t=>{r(t),g(t)},this.state.mergedRequests++,this.notify();return}}}this.pendingRequests.has(s)||this.pendingRequests.set(s,[]),this.pendingRequests.get(s).push(c),this.pendingRequests.get(s).length>=this.config.batchSize?this.processBatch(s,l):this.setBatchTimer(s,l),this.notify()})}setBatchTimer(s,a){if(this.batchTimers.has(s))return;const l=setTimeout(()=>{this.processBatch(s,a)},this.config.batchTimeout);this.batchTimers.set(s,l)}async processBatch(s,a){const l=this.pendingRequests.get(s);if(!l||l.length===0)return;const m=this.batchTimers.get(s);m&&(clearTimeout(m),this.batchTimers.delete(s)),this.pendingRequests.delete(s),this.state.processingBatches++,this.notify();try{const g=l.map(c=>c.params),p=await a(g);l.forEach((c,b)=>{b<p.length?c.resolve(p[b]):c.reject(new Error("批处理结果不足"))}),this.state.completedBatches++}catch(g){l.forEach(p=>{p.reject(g)})}finally{this.state.processingBatches--,this.notify()}}async flushAll(s){const a=Array.from(this.pendingRequests.keys());await Promise.all(a.map(l=>this.processBatch(l,m=>s(l,m))))}getState(){return{...this.state}}clearAll(){this.batchTimers.forEach(s=>clearTimeout(s)),this.batchTimers.clear(),this.pendingRequests.forEach(s=>{s.forEach(a=>{a.reject(new Error("批处理被取消"))})}),this.pendingRequests.clear(),this.state={pendingRequests:[],processingBatches:0,completedBatches:0,mergedRequests:0,totalRequests:0},this.notify()}}const P=new D,I=x.createContext(null),$=({children:n})=>{const[s,a]=x.useState(P.getState());return x.useEffect(()=>{const l=P.subscribe(a);return()=>{l()}},[]),e.jsx(I.Provider,{value:{manager:P,state:s},children:n})},B=()=>{const n=x.useContext(I);if(!n)throw new Error("useBatching must be used within BatchingProvider");return n},q=async n=>(await new Promise(s=>setTimeout(s,200+Math.random()*300)),n.map((s,a)=>({id:s.id||a,data:`批处理结果 ${s.id||a}`,timestamp:Date.now(),batchIndex:a,processed:!0}))),E=async n=>(await new Promise(s=>setTimeout(s,150+Math.random()*200)),n.map(s=>({id:s,name:`用户${s}`,avatar:`https://api.dicebear.com/7.x/avataaars/svg?seed=${s}`,email:`user${s}@example.com`,status:Math.random()>.3?"online":"offline"}))),z=()=>{const{manager:n,state:s}=B(),[a,l]=x.useState([]),[m,g]=x.useState(0),[p,c]=x.useState(!1),b=async()=>{c(!0);const t=m+1;g(t);try{const o=await n.addRequest("demo",{id:t,type:"single"},q);l(d=>[...d,{type:"单个请求",result:o,timestamp:Date.now()}])}catch(o){console.error("请求失败:",o)}finally{c(!1)}},y=async()=>{c(!0);const t=[],o=m+1;for(let d=0;d<5;d++){const f=o+d,C=n.addRequest("demo",{id:f,type:"batch"},q);t.push(C)}g(o+4);try{const d=await Promise.all(t);l(f=>[...f,{type:"批量请求",result:d,timestamp:Date.now()}])}catch(d){console.error("批量请求失败:",d)}finally{c(!1)}},j=async()=>{c(!0);const t=[],o={id:999,type:"duplicate"};for(let d=0;d<3;d++){const f=n.addRequest("demo",o,q);t.push(f)}try{const d=await Promise.all(t);l(f=>[...f,{type:"重复请求合并",result:d,timestamp:Date.now()}])}catch(d){console.error("重复请求失败:",d)}finally{c(!1)}},u=()=>{l([]),g(0)},r=()=>{n.clearAll()};return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"flex flex-wrap gap-3",children:[e.jsx("button",{onClick:b,disabled:p,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50",children:"发送单个请求"}),e.jsx("button",{onClick:y,disabled:p,className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50",children:"发送批量请求 (5个)"}),e.jsx("button",{onClick:j,disabled:p,className:"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 disabled:opacity-50",children:"发送重复请求 (3个)"}),e.jsx("button",{onClick:u,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600",children:"清除结果"}),e.jsx("button",{onClick:r,className:"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600",children:"取消所有请求"})]}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-5 gap-4",children:[e.jsxs("div",{className:"bg-blue-50 p-3 rounded-lg",children:[e.jsx("div",{className:"text-sm text-gray-600",children:"待处理请求"}),e.jsx("div",{className:"text-2xl font-bold text-blue-600",children:s.pendingRequests.length})]}),e.jsxs("div",{className:"bg-yellow-50 p-3 rounded-lg",children:[e.jsx("div",{className:"text-sm text-gray-600",children:"处理中批次"}),e.jsx("div",{className:"text-2xl font-bold text-yellow-600",children:s.processingBatches})]}),e.jsxs("div",{className:"bg-green-50 p-3 rounded-lg",children:[e.jsx("div",{className:"text-sm text-gray-600",children:"完成批次"}),e.jsx("div",{className:"text-2xl font-bold text-green-600",children:s.completedBatches})]}),e.jsxs("div",{className:"bg-purple-50 p-3 rounded-lg",children:[e.jsx("div",{className:"text-sm text-gray-600",children:"合并请求"}),e.jsx("div",{className:"text-2xl font-bold text-purple-600",children:s.mergedRequests})]}),e.jsxs("div",{className:"bg-gray-50 p-3 rounded-lg",children:[e.jsx("div",{className:"text-sm text-gray-600",children:"总请求数"}),e.jsx("div",{className:"text-2xl font-bold text-gray-600",children:s.totalRequests})]})]}),s.pendingRequests.length>0&&e.jsxs("div",{className:"bg-yellow-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-semibold mb-2",children:"待处理请求:"}),e.jsx("div",{className:"space-y-1",children:s.pendingRequests.map(t=>e.jsxs("div",{className:"text-sm text-gray-700",children:["ID: ",t.id," | 参数: ",JSON.stringify(t.params)," | 等待时间: ",Date.now()-t.timestamp,"ms"]},t.id))})]}),e.jsxs("div",{className:"space-y-3",children:[e.jsx("h4",{className:"font-semibold",children:"请求结果:"}),a.length===0?e.jsx("div",{className:"text-gray-500 text-center py-8",children:"暂无请求结果，点击上方按钮发送请求"}):e.jsx("div",{className:"space-y-2 max-h-96 overflow-y-auto",children:a.map((t,o)=>e.jsxs("div",{className:"bg-gray-50 p-3 rounded border",children:[e.jsxs("div",{className:"flex justify-between items-center mb-2",children:[e.jsx("span",{className:"font-medium text-blue-600",children:t.type}),e.jsx("span",{className:"text-xs text-gray-500",children:new Date(t.timestamp).toLocaleTimeString()})]}),e.jsx("pre",{className:"text-xs bg-white p-2 rounded overflow-x-auto",children:JSON.stringify(t.result,null,2)})]},o))})]}),e.jsxs("div",{className:"bg-blue-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-semibold mb-2",children:"功能说明:"}),e.jsxs("ul",{className:"text-sm space-y-1 text-gray-700",children:[e.jsxs("li",{children:["• ",e.jsx("strong",{children:"单个请求"}),": 立即处理，不等待批处理"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"批量请求"}),": 5个请求会被合并为一个批次处理"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"重复请求"}),": 相同参数的请求会共享结果，避免重复处理"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"状态监控"}),": 实时显示批处理的各项统计数据"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"请求管理"}),": 支持取消所有待处理的请求"]})]})]})]})},W=()=>{const{manager:n,state:s}=B(),[a,l]=x.useState(n.getConfig()),[m,g]=x.useState([]),[p,c]=x.useState(!1),b=r=>{const t={...a,...r};l(t),n.setConfig(t)},y=async()=>{c(!0),g([]);const r=Date.now(),t=[];for(let o=1;o<=8;o++){const d=n.addRequest("config-test",{id:o,timestamp:Date.now()},q);t.push(d.then(f=>({requestId:o,result:f,responseTime:Date.now()-r}))),o<8&&await new Promise(f=>setTimeout(f,50))}try{const o=await Promise.all(t);g(o)}catch(o){console.error("配置测试失败:",o)}finally{c(!1)}},j=()=>{const r={batchSize:5,batchTimeout:100,maxWaitTime:1e3,enableMerging:!0};l(r),n.setConfig(r)},u=r=>{let t;switch(r){case"fast":t={batchSize:3,batchTimeout:50,maxWaitTime:500,enableMerging:!0};break;case"balanced":t={batchSize:5,batchTimeout:100,maxWaitTime:1e3,enableMerging:!0};break;case"efficient":t={batchSize:10,batchTimeout:200,maxWaitTime:2e3,enableMerging:!0};break;default:return}l(t),n.setConfig(t)};return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"bg-white p-4 rounded-lg border",children:[e.jsx("h4",{className:"font-semibold mb-4",children:"批处理配置"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium mb-2",children:["批次大小: ",a.batchSize]}),e.jsx("input",{type:"range",min:"1",max:"20",value:a.batchSize,onChange:r=>b({batchSize:parseInt(r.target.value)}),className:"w-full"}),e.jsx("div",{className:"text-xs text-gray-500 mt-1",children:"达到此数量的请求时立即处理批次"})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium mb-2",children:["批处理超时: ",a.batchTimeout,"ms"]}),e.jsx("input",{type:"range",min:"10",max:"1000",step:"10",value:a.batchTimeout,onChange:r=>b({batchTimeout:parseInt(r.target.value)}),className:"w-full"}),e.jsx("div",{className:"text-xs text-gray-500 mt-1",children:"超过此时间后处理未满的批次"})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium mb-2",children:["最大等待时间: ",a.maxWaitTime,"ms"]}),e.jsx("input",{type:"range",min:"100",max:"5000",step:"100",value:a.maxWaitTime,onChange:r=>b({maxWaitTime:parseInt(r.target.value)}),className:"w-full"}),e.jsx("div",{className:"text-xs text-gray-500 mt-1",children:"请求的最大等待时间"})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"flex items-center space-x-2",children:[e.jsx("input",{type:"checkbox",checked:a.enableMerging,onChange:r=>b({enableMerging:r.target.checked}),className:"rounded"}),e.jsx("span",{className:"text-sm font-medium",children:"启用请求合并"})]}),e.jsx("div",{className:"text-xs text-gray-500 mt-1",children:"相同参数的请求共享结果"})]})]})]}),e.jsxs("div",{className:"flex flex-wrap gap-3",children:[e.jsx("button",{onClick:()=>u("fast"),className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600",children:"快速响应 (3/50ms)"}),e.jsx("button",{onClick:()=>u("balanced"),className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600",children:"平衡模式 (5/100ms)"}),e.jsx("button",{onClick:()=>u("efficient"),className:"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600",children:"高效模式 (10/200ms)"}),e.jsx("button",{onClick:j,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600",children:"重置默认"})]}),e.jsxs("div",{className:"bg-gray-50 p-4 rounded-lg",children:[e.jsxs("div",{className:"flex justify-between items-center mb-4",children:[e.jsx("h4",{className:"font-semibold",children:"配置测试"}),e.jsx("button",{onClick:y,disabled:p,className:"px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600 disabled:opacity-50",children:p?"测试中...":"测试当前配置"})]}),e.jsx("div",{className:"text-sm text-gray-600 mb-4",children:"将发送8个请求，间隔50ms，观察批处理行为"}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-3 mb-4",children:[e.jsxs("div",{className:"bg-white p-2 rounded text-center",children:[e.jsx("div",{className:"text-xs text-gray-500",children:"待处理"}),e.jsx("div",{className:"font-bold",children:s.pendingRequests.length})]}),e.jsxs("div",{className:"bg-white p-2 rounded text-center",children:[e.jsx("div",{className:"text-xs text-gray-500",children:"处理中"}),e.jsx("div",{className:"font-bold",children:s.processingBatches})]}),e.jsxs("div",{className:"bg-white p-2 rounded text-center",children:[e.jsx("div",{className:"text-xs text-gray-500",children:"已完成"}),e.jsx("div",{className:"font-bold",children:s.completedBatches})]}),e.jsxs("div",{className:"bg-white p-2 rounded text-center",children:[e.jsx("div",{className:"text-xs text-gray-500",children:"已合并"}),e.jsx("div",{className:"font-bold",children:s.mergedRequests})]})]}),m.length>0&&e.jsxs("div",{children:[e.jsx("h5",{className:"font-medium mb-2",children:"测试结果:"}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-2 max-h-40 overflow-y-auto",children:m.map((r,t)=>e.jsxs("div",{className:"bg-white p-2 rounded text-xs",children:[e.jsxs("div",{children:["请求 #",r.requestId]}),e.jsxs("div",{className:"text-gray-500",children:["响应时间: ",r.responseTime,"ms"]})]},t))})]})]}),e.jsxs("div",{className:"bg-blue-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-semibold mb-2",children:"配置说明:"}),e.jsxs("ul",{className:"text-sm space-y-1 text-gray-700",children:[e.jsxs("li",{children:["• ",e.jsx("strong",{children:"批次大小"}),": 决定何时触发批处理，较小值响应更快，较大值效率更高"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"批处理超时"}),": 控制最大等待时间，平衡延迟和批处理效果"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"最大等待时间"}),": 防止请求无限等待，确保响应性"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"请求合并"}),": 相同参数的请求共享结果，减少重复处理"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"预设配置"}),": 针对不同场景优化的配置组合"]})]})]})]})},O=()=>{const{manager:n}=B(),[s,a]=x.useState([]),[l,m]=x.useState([]),[g,p]=x.useState(""),[c,b]=x.useState([]),[y,j]=x.useState(""),[u,r]=x.useState(!1),t=async()=>{r(!0);const i=Array.from({length:12},(h,v)=>v+1);try{const h=i.map(T=>n.addRequest("users",T,N=>E(N))),v=await Promise.all(h);a(v)}catch(h){console.error("加载用户列表失败:",h)}finally{r(!1)}},o=async i=>{if(p(i),!i.trim()){m([]);return}try{const v=[1,2,3,4,5].filter(N=>`用户${N}`.includes(i)||N.toString().includes(i)).map(N=>n.addRequest("search",{query:i,userId:N},async S=>(await new Promise(w=>setTimeout(w,100)),S.map(w=>({id:w.userId,name:`用户${w.userId}`,email:`user${w.userId}@example.com`,matchScore:Math.random()}))))),T=await Promise.all(v);m(T)}catch(h){console.error("搜索失败:",h)}},d=async i=>{if(c.length===0){j("请先选择用户");return}r(!0),j("");try{const h=c.map(N=>n.addRequest(`batch-${i}`,{userId:N,operation:i},async S=>(await new Promise(w=>setTimeout(w,200)),S.map(w=>({userId:w.userId,operation:w.operation,success:Math.random()>.1,timestamp:Date.now()}))))),v=await Promise.all(h),T=v.filter(N=>N.success).length;j(`${i}操作完成: ${T}/${v.length} 成功`)}catch(h){j(`${i}操作失败: ${h.message}`)}finally{r(!1)}},f=i=>{b(h=>h.includes(i)?h.filter(v=>v!==i):[...h,i])},C=()=>{c.length===s.length?b([]):b(s.map(i=>i.id))};return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"bg-white p-4 rounded-lg border",children:[e.jsxs("div",{className:"flex justify-between items-center mb-4",children:[e.jsx("h4",{className:"font-semibold",children:"用户列表页面"}),e.jsx("button",{onClick:t,disabled:u,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50",children:u?"加载中...":"加载用户列表"})]}),s.length>0&&e.jsxs("div",{children:[e.jsx("div",{className:"flex items-center mb-3",children:e.jsxs("label",{className:"flex items-center space-x-2",children:[e.jsx("input",{type:"checkbox",checked:c.length===s.length&&s.length>0,onChange:C,className:"rounded"}),e.jsxs("span",{className:"text-sm",children:["全选 (",c.length,"/",s.length,")"]})]})}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 max-h-60 overflow-y-auto",children:s.map(i=>e.jsxs("div",{className:"flex items-center space-x-3 p-2 border rounded",children:[e.jsx("input",{type:"checkbox",checked:c.includes(i.id),onChange:()=>f(i.id),className:"rounded"}),e.jsx("img",{src:i.avatar,alt:i.name,className:"w-8 h-8 rounded-full"}),e.jsxs("div",{className:"flex-1 min-w-0",children:[e.jsx("div",{className:"text-sm font-medium truncate",children:i.name}),e.jsx("div",{className:"text-xs text-gray-500 truncate",children:i.email})]}),e.jsx("div",{className:`w-2 h-2 rounded-full ${i.status==="online"?"bg-green-400":"bg-gray-400"}`})]},i.id))})]})]}),e.jsxs("div",{className:"bg-white p-4 rounded-lg border",children:[e.jsx("h4",{className:"font-semibold mb-4",children:"搜索建议"}),e.jsxs("div",{className:"relative",children:[e.jsx("input",{type:"text",value:g,onChange:i=>o(i.target.value),placeholder:"搜索用户...",className:"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"}),l.length>0&&e.jsx("div",{className:"absolute top-full left-0 right-0 bg-white border border-t-0 rounded-b-lg shadow-lg z-10",children:l.map((i,h)=>e.jsxs("div",{className:"px-3 py-2 hover:bg-gray-50 cursor-pointer border-b last:border-b-0",children:[e.jsx("div",{className:"font-medium",children:i.name}),e.jsx("div",{className:"text-sm text-gray-500",children:i.email}),e.jsxs("div",{className:"text-xs text-gray-400",children:["匹配度: ",(i.matchScore*100).toFixed(1),"%"]})]},h))})]}),e.jsx("div",{className:"text-sm text-gray-500 mt-2",children:"输入关键词查看批量搜索效果"})]}),e.jsxs("div",{className:"bg-white p-4 rounded-lg border",children:[e.jsx("h4",{className:"font-semibold mb-4",children:"批量操作"}),e.jsxs("div",{className:"flex flex-wrap gap-3 mb-4",children:[e.jsx("button",{onClick:()=>d("删除"),disabled:u||c.length===0,className:"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:opacity-50",children:"批量删除"}),e.jsx("button",{onClick:()=>d("禁用"),disabled:u||c.length===0,className:"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600 disabled:opacity-50",children:"批量禁用"}),e.jsx("button",{onClick:()=>d("导出"),disabled:u||c.length===0,className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50",children:"批量导出"})]}),y&&e.jsx("div",{className:`p-3 rounded ${y.includes("失败")?"bg-red-50 text-red-700":"bg-green-50 text-green-700"}`,children:y}),e.jsx("div",{className:"text-sm text-gray-500",children:"选择用户后执行批量操作，观察请求合并效果"})]}),e.jsxs("div",{className:"bg-blue-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-semibold mb-2",children:"应用场景说明:"}),e.jsxs("ul",{className:"text-sm space-y-1 text-gray-700",children:[e.jsxs("li",{children:["• ",e.jsx("strong",{children:"用户列表加载"}),": 12个用户信息通过批处理API一次性获取，减少网络请求"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"搜索建议"}),": 搜索输入时的多个查询请求被合并处理，提高响应速度"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"批量操作"}),": 选中的用户操作被合并为批次，减少服务器负载"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"请求优化"}),": 相同参数的请求会被合并，避免重复数据获取"]}),e.jsxs("li",{children:["• ",e.jsx("strong",{children:"用户体验"}),": 批处理在后台进行，用户感知不到延迟但享受更好的性能"]})]})]})]})},U=[{title:"核心概念",items:["请求合并：将多个相似请求合并为单个批处理请求","延迟处理：等待一定时间收集更多请求后统一处理","智能分批：根据配置自动分割大批次请求","请求去重：自动合并相同参数的重复请求"]},{title:"主要优势",items:["减少网络开销，显著降低HTTP请求数量","提高性能，减少网络延迟和服务器负载","优化用户体验，更快的页面加载和响应速度","资源节约，降低带宽使用和服务器压力"]},{title:"适用场景",items:["列表数据加载：用户列表、商品列表等批量数据获取","搜索建议：实时搜索时的批量查询优化","批量操作：多选删除、批量更新等操作","数据预加载：页面切换时的数据预取优化"]},{title:"注意事项",items:["延迟权衡：批处理延迟与响应速度的平衡","错误处理：批处理失败时的降级策略","内存管理：避免批处理队列过大导致内存问题","超时控制：设置合理的批处理和请求超时时间"]}],H=()=>e.jsx(A,{title:"请求批处理 (Request Batching)",description:"通过将多个请求合并为单个批处理请求来优化网络性能，减少HTTP请求数量并提高应用响应速度。",overview:U,examples:[{title:"基础批处理功能",component:e.jsx(z,{}),description:"演示基本的请求批处理功能，包括单个请求、批量请求和重复请求合并。",observationPoints:["观察单个请求如何被添加到批处理队列","注意批量请求如何在达到批次大小时立即处理","查看重复请求如何被自动合并以避免重复处理","监控批处理状态的实时变化"],keyPoints:["批处理管理器会自动收集和合并请求","达到批次大小限制时会立即触发处理","相同参数的请求会被合并以提高效率","提供详细的状态监控和日志记录"],commonTraps:["批处理延迟可能影响用户体验","批次大小设置不当可能导致性能问题","错误处理不当可能导致请求丢失"],solutions:["根据应用场景调整批处理参数","实现合适的错误处理和重试机制","提供批处理状态的可视化反馈"],importantTips:["批处理适合高频率的相似请求场景","需要在延迟和性能之间找到平衡点","建议为不同类型的请求使用不同的批处理策略"]},{title:"配置管理",component:e.jsx(W,{}),description:"展示如何配置和调优批处理参数，包括批次大小、超时时间等设置。",observationPoints:["调整批次大小观察处理行为的变化","修改超时时间查看批处理触发时机","测试不同配置对性能的影响","观察请求合并功能的开关效果"],keyPoints:["批次大小决定了何时触发立即处理","超时时间控制未满批次的处理时机","最大等待时间防止请求无限等待","请求合并可以进一步优化重复请求"],commonTraps:["批次大小过大可能导致延迟过高","超时时间过短可能降低批处理效果","配置不当可能导致内存泄漏"],solutions:["根据实际业务需求调整参数","进行性能测试找到最优配置","实现动态配置调整机制"],importantTips:["不同类型的请求可能需要不同的配置","建议在生产环境中进行A/B测试","配置变更应该有监控和回滚机制"]},{title:"实际应用场景",component:e.jsx(O,{}),description:"模拟真实应用场景，如用户列表加载、搜索建议、批量操作等。",observationPoints:["观察用户列表加载时的批处理行为","注意搜索建议如何利用批处理优化","查看批量操作的处理流程","监控不同场景下的性能表现"],keyPoints:["用户列表加载可以显著减少请求数量","搜索建议批处理可以提高响应速度","批量操作可以提供更好的用户体验","请求合并在实际场景中效果明显"],commonTraps:["过度批处理可能影响实时性要求","批处理失败可能影响整个功能","用户界面可能需要额外的加载状态"],solutions:["为不同场景设计合适的批处理策略","实现优雅的降级和错误处理","提供清晰的用户反馈和状态指示"],importantTips:["批处理最适合高频率、低实时性要求的场景","需要考虑用户体验和性能的平衡","建议结合缓存策略进一步优化性能"]}],tutorial:{concepts:["请求批处理的基本原理：将多个请求合并为单个批次处理","批处理触发机制：基于批次大小和超时时间的智能触发","请求合并策略：相同参数请求的去重和结果共享","配置管理系统：灵活的参数配置和动态调整","状态监控机制：实时跟踪批处理状态和性能指标","错误处理策略：完善的异常处理和降级机制"],steps:["设计批处理数据结构：定义请求、配置和状态接口","实现批处理管理器：核心的请求收集和处理逻辑","添加配置管理：支持动态配置和参数调优","实现请求合并：相同参数请求的去重机制","集成React状态：使用Context和Hook管理状态","添加错误处理：超时控制和异常处理机制","性能优化：内存管理和性能监控","用户体验优化：状态反馈和加载指示"],tips:["批次大小建议5-10个请求，平衡延迟和合并效果","超时时间建议100-500ms，根据用户体验要求调整","启用请求合并可以显著减少重复请求的开销","为不同类型的API使用不同的批处理配置","实现完善的错误处理避免批处理失败影响用户","提供清晰的状态反馈让用户了解处理进度","监控批处理性能指标以便持续优化"]},interview:{questions:[{question:"什么是请求批处理？它解决了什么核心问题？",answer:"请求批处理是将多个相似请求合并为单个批次进行处理的优化技术。它主要解决：1) 网络开销问题 - 减少HTTP请求数量，降低网络延迟；2) 服务器负载问题 - 减少服务器处理压力和资源消耗；3) 重复请求问题 - 通过请求合并避免重复处理；4) 用户体验问题 - 在高频请求场景下提供更流畅的交互体验。"},{question:"请求批处理的核心实现机制是什么？",answer:"核心机制包括：1) 请求收集器 - 将短时间内的请求收集到队列中；2) 触发器 - 基于批次大小或超时时间决定何时处理；3) 合并器 - 识别和合并相同参数的重复请求；4) 处理器 - 执行批量API调用并处理响应；5) 分发器 - 将批处理结果分发给对应的原始请求；6) 错误处理器 - 处理各种异常情况和降级策略。"},{question:"如何设计合理的批处理配置参数？",answer:"关键配置参数设计：1) batchSize（批次大小）- 建议5-10，太小影响合并效果，太大增加延迟；2) batchTimeout（批处理超时）- 建议100-500ms，平衡等待时间和合并效果；3) maxWaitTime（最大等待时间）- 防止请求无限等待，通常设为batchTimeout的2-3倍；4) enableMerging（启用合并）- 根据API特性决定是否启用请求去重。需要根据业务场景、用户体验要求和API特性来调优这些参数。"},{question:"请求批处理最适合哪些应用场景？",answer:"最适合的场景：1) 高频率相似请求 - 如用户列表页面的头像/信息加载；2) 搜索建议场景 - 用户输入时的实时查询优化；3) 批量操作场景 - 多选删除、批量更新等操作；4) 数据预加载场景 - 页面切换时的数据预取；5) 实时性要求不高的数据获取。不适合：实时性要求极高的场景、请求参数差异很大的场景、单次请求就很重的场景。"},{question:"如何处理批处理中的错误和异常情况？",answer:"完善的错误处理策略：1) 批处理级别错误 - 整个批次失败时，向所有请求返回错误信息；2) 请求级别错误 - 支持部分成功，只对失败的请求返回错误；3) 超时处理 - 单个请求超时时从队列中移除并返回超时错误；4) 降级策略 - 批处理连续失败时回退到单个请求模式；5) 重试机制 - 对失败的批次进行有限次数的智能重试；6) 状态通知 - 实时通知用户当前处理状态和进度。"},{question:"如何评估和优化批处理的性能？",answer:"性能评估指标：1) 请求合并率 - 衡量重复请求的合并效果；2) 平均批次大小 - 评估批处理的合并效果；3) 平均等待时间 - 衡量用户体验影响；4) 网络请求减少比例 - 评估网络优化效果；5) 错误率和超时率 - 评估系统稳定性。优化策略：1) 动态调整配置参数；2) 实现智能的批次分组；3) 优化请求合并算法；4) 实现更精确的超时控制；5) 添加性能监控和告警。"}],keyPoints:["批处理通过请求合并显著减少网络开销和服务器负载","配置参数需要根据具体业务场景和用户体验要求调优","请求合并机制可以进一步优化重复请求的处理效率","完善的错误处理和降级策略是批处理系统的稳定性保障","需要在处理延迟和性能优化效果之间找到最佳平衡点","最适合高频率、相似性高、实时性要求不严格的请求场景","性能监控和动态调优是批处理系统持续优化的关键"]},bestPractices:{dos:["根据具体业务场景和API特性设置合理的批处理参数","实现完善的错误处理机制，包括降级和重试策略","提供清晰的批处理状态反馈，让用户了解处理进度","为不同类型的API请求设计专门的批处理策略","实现请求合并机制以减少重复请求的处理开销","添加性能监控和指标收集，支持持续优化","考虑服务端批处理接口的设计和实现","实现内存管理机制，防止批处理队列无限增长"],donts:["不要在实时性要求极高的场景中使用批处理","不要设置过大的批次大小，避免用户等待时间过长","不要忽略批处理失败时的用户体验和错误提示","不要对所有类型的请求使用相同的批处理配置","不要忘记处理请求超时和用户取消操作的情况","不要让批处理队列无限制增长导致内存泄漏","不要在网络不稳定的环境中过度依赖批处理","不要忽略批处理对调试和错误追踪的影响"],patterns:["批处理管理器模式 - 集中管理所有批处理逻辑和状态","配置策略模式 - 为不同场景和API提供灵活的配置选项","观察者模式 - 监听和响应批处理状态的变化","降级模式 - 批处理失败时的优雅回退和降级策略","请求合并模式 - 相同参数请求的去重和结果共享机制","队列管理模式 - 高效的请求收集、排序和处理机制","状态机模式 - 管理批处理的各种状态转换","工厂模式 - 根据请求类型创建不同的批处理策略"]}}),F=()=>e.jsx($,{children:e.jsx(H,{})});export{F as default};
