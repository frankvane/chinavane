var S=Object.defineProperty;var _=(m,a,c)=>a in m?S(m,a,{enumerable:!0,configurable:!0,writable:!0,value:c}):m[a]=c;var b=(m,a,c)=>_(m,typeof a!="symbol"?a+"":a,c);import{j as e,r as p}from"./index-Bi_r7QuH.js";import{C as k}from"./ComponentTemplate-C5EWLtXX.js";class T{constructor(a={}){b(this,"metrics",new Map);b(this,"collectors",new Map);b(this,"aggregators",new Map);b(this,"config");b(this,"observers",new Set);b(this,"isCollecting",!1);b(this,"collectionInterval");this.config={collectionInterval:1e3,retentionPeriod:36e5,maxDataPoints:1e3,enableAutoCollection:!0,aggregationWindow:6e4,...a}}registerCollector(a,c){this.collectors.set(a,c),this.metrics.has(a)||this.metrics.set(a,{name:a,type:c.type,values:[],aggregatedValues:new Map,metadata:c.metadata||{}})}registerAggregator(a,c){this.aggregators.set(a,c)}startCollection(){this.isCollecting||(this.isCollecting=!0,this.config.enableAutoCollection&&(this.collectionInterval=setInterval(()=>{this.collectMetrics()},this.config.collectionInterval)))}stopCollection(){this.isCollecting=!1,this.collectionInterval&&(clearInterval(this.collectionInterval),this.collectionInterval=void 0)}async collectMetrics(){const a=Date.now();for(const[c,l]of this.collectors.entries())try{const d=await l.collect();this.recordMetric(c,d,a)}catch(d){console.error(`Failed to collect metric ${c}:`,d)}this.performAggregation(),this.cleanupExpiredData(),this.notifyObservers("metrics_collected",{timestamp:a})}recordMetric(a,c,l){const d=this.metrics.get(a);if(!d){console.warn(`Metric ${a} not registered`);return}const o={value:c,timestamp:l||Date.now()};d.values.push(o),d.values.length>this.config.maxDataPoints&&(d.values=d.values.slice(-this.config.maxDataPoints)),this.notifyObservers("metric_recorded",{name:a,value:o})}performAggregation(){const a=Date.now(),c=a-this.config.aggregationWindow;for(const[l,d]of this.metrics.entries()){const o=this.aggregators.get(l);if(!o)continue;const f=d.values.filter(h=>h.timestamp>=c);if(f.length===0)continue;const i=o.aggregate(f),g=Math.floor(a/this.config.aggregationWindow)*this.config.aggregationWindow;d.aggregatedValues.set(g,{value:i,timestamp:g,count:f.length})}}cleanupExpiredData(){const a=Date.now()-this.config.retentionPeriod;for(const c of this.metrics.values()){c.values=c.values.filter(l=>l.timestamp>=a);for(const[l,d]of c.aggregatedValues.entries())d.timestamp<a&&c.aggregatedValues.delete(l)}}getMetric(a,c={}){const l=this.metrics.get(a);if(!l)return null;const{startTime:d=0,endTime:o=Date.now(),useAggregated:f=!1,limit:i}=c;let g;return f?g=Array.from(l.aggregatedValues.values()).filter(h=>h.timestamp>=d&&h.timestamp<=o).sort((h,s)=>h.timestamp-s.timestamp):g=l.values.filter(h=>h.timestamp>=d&&h.timestamp<=o).sort((h,s)=>h.timestamp-s.timestamp),i&&g.length>i&&(g=g.slice(-i)),{name:a,type:l.type,values:g,metadata:l.metadata}}getAllMetrics(a={}){return Array.from(this.metrics.keys()).map(c=>this.getMetric(c,a)).filter(Boolean)}calculateStats(a,c={}){const l=this.getMetric(a,c);if(!l||l.values.length===0)return null;const d=l.values.map(x=>x.value),o=[...d].sort((x,j)=>x-j),f=d.reduce((x,j)=>x+j,0),i=d.length,g=f/i,h=d.reduce((x,j)=>x+Math.pow(j-g,2),0)/i,s=Math.sqrt(h),t=o[0],r=o[o.length-1],n=o[Math.floor(o.length/2)],u=Math.floor(o.length*.95),v=Math.floor(o.length*.99);return{name:a,count:i,sum:f,mean:g,median:n,min:t,max:r,stdDev:s,variance:h,p95:o[u]||r,p99:o[v]||r}}query(a){const{metrics:c,startTime:l=0,endTime:d=Date.now(),aggregation:o,groupBy:f,filters:i}=a,g={metrics:{},timestamp:Date.now()};for(const h of c){const s=this.getMetric(h,{startTime:l,endTime:d});if(!s)continue;let t=s.values;if(i&&(t=t.filter(r=>i.every(n=>{switch(n.operator){case"gt":return r.value>n.value;case"lt":return r.value<n.value;case"eq":return r.value===n.value;case"gte":return r.value>=n.value;case"lte":return r.value<=n.value;default:return!0}}))),o){const r=this.performQueryAggregation(t,o);g.metrics[h]=[{value:r,timestamp:d}]}else g.metrics[h]=t}return g}performQueryAggregation(a,c){if(a.length===0)return 0;const l=a.map(d=>d.value);switch(c){case"sum":return l.reduce((d,o)=>d+o,0);case"avg":return l.reduce((d,o)=>d+o,0)/l.length;case"min":return Math.min(...l);case"max":return Math.max(...l);case"count":return l.length;default:return l[l.length-1]||0}}addObserver(a){this.observers.add(a)}removeObserver(a){this.observers.delete(a)}notifyObservers(a,c){this.observers.forEach(l=>{l[a]&&l[a](c)})}exportMetrics(a="json"){const c=this.getAllMetrics();if(a==="csv"){const l=["timestamp,metric,value"];return c.forEach(d=>{d.values.forEach(o=>{l.push(`${o.timestamp},${d.name},${o.value}`)})}),l.join(`
`)}return JSON.stringify(c,null,2)}cleanup(){this.stopCollection(),this.metrics.clear(),this.collectors.clear(),this.aggregators.clear(),this.observers.clear()}}const q=()=>{const[m]=p.useState(()=>{const t=new T({collectionInterval:1e3,maxDataPoints:100});return t.registerCollector("response_time",{type:"gauge",metadata:{unit:"ms",description:"API响应时间"},collect:()=>100+Math.random()*500}),t.registerCollector("request_count",{type:"counter",metadata:{unit:"count",description:"请求总数"},collect:()=>Math.floor(Math.random()*10)+1}),t.registerCollector("error_rate",{type:"gauge",metadata:{unit:"percent",description:"错误率"},collect:()=>Math.random()*5}),t.registerCollector("cpu_usage",{type:"gauge",metadata:{unit:"percent",description:"CPU使用率"},collect:()=>20+Math.random()*60}),t.registerAggregator("response_time",{aggregate:r=>r.reduce((n,u)=>n+u.value,0)/r.length}),t.registerAggregator("request_count",{aggregate:r=>r.reduce((n,u)=>n+u.value,0)}),t}),[a,c]=p.useState([]),[l,d]=p.useState({}),[o,f]=p.useState(!1),i=p.useCallback(()=>{const t=m.getAllMetrics({limit:50});c(t);const r={};t.forEach(n=>{const u=m.calculateStats(n.name);u&&(r[n.name]=u)}),d(r)},[m]);p.useEffect(()=>{const t={metrics_collected:()=>{i()}};return m.addObserver(t),()=>{m.removeObserver(t),m.cleanup()}},[m,i]);const g=p.useCallback(()=>{o?m.stopCollection():m.startCollection(),f(!o)},[m,o]),h=p.useCallback(()=>{const t=Math.random()*1e3;m.recordMetric("response_time",t),i()},[m,i]),s=p.useCallback(()=>{const t=m.exportMetrics("json"),r=new Blob([t],{type:"application/json"}),n=URL.createObjectURL(r),u=document.createElement("a");u.href=n,u.download="metrics.json",u.click(),URL.revokeObjectURL(n)},[m]);return e.jsx("div",{className:"space-y-6",children:e.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-sm border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"基础指标监控"}),e.jsxs("div",{className:"flex gap-4 mb-6",children:[e.jsx("button",{onClick:g,className:`px-4 py-2 rounded transition-colors ${o?"bg-red-500 text-white hover:bg-red-600":"bg-green-500 text-white hover:bg-green-600"}`,children:o?"停止收集":"开始收集"}),e.jsx("button",{onClick:h,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors",children:"记录自定义指标"}),e.jsx("button",{onClick:s,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors",children:"导出数据"})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-6",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"实时指标"}),e.jsx("div",{className:"space-y-4",children:a.map(t=>{const r=t.values[t.values.length-1],n=l[t.name];return e.jsxs("div",{className:"p-4 bg-gray-50 rounded-lg",children:[e.jsxs("div",{className:"flex justify-between items-center mb-2",children:[e.jsx("h5",{className:"font-medium",children:t.metadata.description||t.name}),e.jsx("span",{className:"text-sm text-gray-500",children:t.type})]}),r&&e.jsxs("div",{className:"text-2xl font-bold text-blue-600 mb-2",children:[r.value.toFixed(2)," ",t.metadata.unit]}),n&&e.jsxs("div",{className:"grid grid-cols-3 gap-2 text-sm text-gray-600",children:[e.jsxs("div",{children:["平均: ",n.mean.toFixed(2)]}),e.jsxs("div",{children:["最小: ",n.min.toFixed(2)]}),e.jsxs("div",{children:["最大: ",n.max.toFixed(2)]})]}),e.jsxs("div",{className:"mt-2 text-xs text-gray-500",children:["数据点: ",t.values.length]})]},t.name)})})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"统计信息"}),e.jsx("div",{className:"space-y-4",children:Object.entries(l).map(([t,r])=>e.jsxs("div",{className:"p-4 bg-gray-50 rounded-lg",children:[e.jsx("h5",{className:"font-medium mb-3",children:t}),e.jsxs("div",{className:"grid grid-cols-2 gap-2 text-sm",children:[e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"计数:"}),e.jsx("span",{className:"font-medium",children:r.count})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"总和:"}),e.jsx("span",{className:"font-medium",children:r.sum.toFixed(2)})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"平均值:"}),e.jsx("span",{className:"font-medium",children:r.mean.toFixed(2)})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"中位数:"}),e.jsx("span",{className:"font-medium",children:r.median.toFixed(2)})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"标准差:"}),e.jsx("span",{className:"font-medium",children:r.stdDev.toFixed(2)})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"P95:"}),e.jsx("span",{className:"font-medium",children:r.p95.toFixed(2)})]})]})]},t))})]})]})]})})},A=()=>{const[m]=p.useState(()=>{const s=new T({collectionInterval:500,maxDataPoints:200});return["api_latency","throughput","memory_usage","disk_io"].forEach(t=>{s.registerCollector(t,{type:"gauge",metadata:{unit:t.includes("latency")?"ms":"count"},collect:()=>{const r={api_latency:200,throughput:100,memory_usage:50,disk_io:10}[t]||50;return r+Math.random()*r}})}),s.startCollection(),s}),[a,c]=p.useState(null),[l,d]=p.useState(null),[o,f]=p.useState(!1),[i,g]=p.useState({metrics:["api_latency","throughput"],aggregation:"avg",timeRange:6e4,filterValue:0,filterOperator:"gt",timeSegments:10,showTimeSeries:!0}),h=p.useCallback(()=>{console.log("执行查询被调用",{queryConfig:i}),f(!0);try{const s=Date.now(),t=s-i.timeRange;console.log("查询时间范围:",{startTime:new Date(t),endTime:new Date(s)});const r=m.query({metrics:i.metrics,startTime:t,endTime:s,aggregation:i.aggregation,filters:i.filterValue>0?[{operator:i.filterOperator,value:i.filterValue}]:void 0});if(console.log("查询结果:",r),c(r),i.showTimeSeries){const n=i.timeSegments,u=i.timeRange/n,v={metrics:{},timeSegments:[],timestamp:s};i.metrics.forEach(x=>{v.metrics[x]=[]});for(let x=0;x<n;x++){const j=t+x*u,N=j+u,C=m.query({metrics:i.metrics,startTime:j,endTime:N,aggregation:i.aggregation,filters:i.filterValue>0?[{operator:i.filterOperator,value:i.filterValue}]:void 0});v.timeSegments.push({startTime:j,endTime:N,data:C}),i.metrics.forEach(M=>{const w=C.metrics[M];if(w&&w.length>0){const y=w[0];v.metrics[M].push({value:y.value,timestamp:y.timestamp,startTime:j,endTime:N,count:w.length})}})}console.log("分时段查询结果:",v),d(v)}}catch(s){console.error("查询执行出错:",s),alert(`查询执行出错: ${s instanceof Error?s.message:"未知错误"}`)}finally{f(!1)}},[m,i]);return p.useEffect(()=>()=>{m.cleanup()},[m]),e.jsx("div",{className:"space-y-6",children:e.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-sm border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"高级查询功能"}),e.jsxs("div",{className:"grid grid-cols-2 gap-6 mb-6",children:[e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium mb-2",children:"选择指标"}),e.jsx("div",{className:"space-y-2",children:["api_latency","throughput","memory_usage","disk_io"].map(s=>e.jsxs("label",{className:"flex items-center space-x-2",children:[e.jsx("input",{type:"checkbox",checked:i.metrics.includes(s),onChange:t=>{t.target.checked?g(r=>({...r,metrics:[...r.metrics,s]})):g(r=>({...r,metrics:r.metrics.filter(n=>n!==s)}))},className:"rounded"}),e.jsx("span",{className:"text-sm",children:s})]},s))})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium mb-2",children:"聚合方式"}),e.jsxs("select",{value:i.aggregation,onChange:s=>g(t=>({...t,aggregation:s.target.value})),className:"w-full px-3 py-2 border rounded-md",children:[e.jsx("option",{value:"avg",children:"平均值"}),e.jsx("option",{value:"sum",children:"总和"}),e.jsx("option",{value:"min",children:"最小值"}),e.jsx("option",{value:"max",children:"最大值"}),e.jsx("option",{value:"count",children:"计数"})]})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium mb-2",children:"时间范围"}),e.jsxs("select",{value:i.timeRange,onChange:s=>g(t=>({...t,timeRange:parseInt(s.target.value)})),className:"w-full px-3 py-2 border rounded-md",children:[e.jsx("option",{value:3e4,children:"30秒"}),e.jsx("option",{value:6e4,children:"1分钟"}),e.jsx("option",{value:3e5,children:"5分钟"}),e.jsx("option",{value:6e5,children:"10分钟"})]})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium mb-2",children:"分时段数量"}),e.jsxs("select",{value:i.timeSegments,onChange:s=>g(t=>({...t,timeSegments:parseInt(s.target.value)})),className:"w-full px-3 py-2 border rounded-md",children:[e.jsx("option",{value:5,children:"5个时段"}),e.jsx("option",{value:10,children:"10个时段"}),e.jsx("option",{value:20,children:"20个时段"}),e.jsx("option",{value:30,children:"30个时段"})]})]}),e.jsxs("div",{className:"flex items-center",children:[e.jsx("input",{type:"checkbox",id:"showTimeSeries",checked:i.showTimeSeries,onChange:s=>g(t=>({...t,showTimeSeries:s.target.checked})),className:"mr-2"}),e.jsx("label",{htmlFor:"showTimeSeries",className:"text-sm text-gray-600",children:"显示分时段结果"})]}),e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium mb-2",children:"过滤条件"}),e.jsxs("div",{className:"flex space-x-2",children:[e.jsxs("select",{value:i.filterOperator,onChange:s=>g(t=>({...t,filterOperator:s.target.value})),className:"px-3 py-2 border rounded-md",children:[e.jsx("option",{value:"gt",children:"大于"}),e.jsx("option",{value:"lt",children:"小于"}),e.jsx("option",{value:"eq",children:"等于"}),e.jsx("option",{value:"gte",children:"大于等于"}),e.jsx("option",{value:"lte",children:"小于等于"})]}),e.jsx("input",{type:"number",value:i.filterValue,onChange:s=>g(t=>({...t,filterValue:parseFloat(s.target.value)||0})),className:"flex-1 px-3 py-2 border rounded-md",placeholder:"过滤值"})]})]}),e.jsx("button",{onClick:h,disabled:o,className:`w-full px-4 py-2 rounded transition-colors ${o?"bg-gray-400 cursor-not-allowed":"bg-blue-500 hover:bg-blue-600 text-white"}`,children:o?"查询中...":"执行查询"})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"查询结果"}),a?e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"text-sm text-gray-500",children:["查询时间:"," ",new Date(a.timestamp).toLocaleTimeString()]}),Object.entries(a.metrics).map(([s,t])=>e.jsxs("div",{className:"p-4 bg-gray-50 rounded-lg",children:[e.jsx("h5",{className:"font-medium mb-2",children:s}),t.length>0?e.jsxs("div",{children:[e.jsx("div",{className:"text-lg font-bold text-blue-600 mb-2",children:t[0].value.toFixed(2)}),e.jsxs("div",{className:"text-sm text-gray-600",children:["数据点数量: ",t.length]}),t.length>1&&e.jsxs("div",{className:"mt-2 max-h-32 overflow-y-auto",children:[e.jsx("div",{className:"text-xs text-gray-500 mb-1",children:"历史数据:"}),t.slice(-10).map((r,n)=>e.jsxs("div",{className:"text-xs flex justify-between",children:[e.jsx("span",{children:new Date(r.timestamp).toLocaleTimeString()}),e.jsx("span",{children:r.value.toFixed(2)})]},n))]})]}):e.jsx("div",{className:"text-gray-500",children:"无数据"})]},s))]}):e.jsx("div",{className:"text-gray-500",children:"请执行查询"}),i.showTimeSeries&&l&&e.jsxs("div",{className:"mt-6",children:[e.jsx("h4",{className:"font-medium mb-3",children:"分时段聚合结果"}),e.jsx("div",{className:"space-y-4",children:Object.entries(l.metrics).map(([s,t])=>e.jsxs("div",{className:"p-4 bg-blue-50 rounded-lg",children:[e.jsx("h5",{className:"font-medium mb-3 text-blue-900",children:s}),e.jsx("div",{className:"space-y-2",children:t.map((r,n)=>e.jsxs("div",{className:"flex items-center justify-between p-2 bg-white rounded border",children:[e.jsxs("div",{className:"text-sm",children:[e.jsxs("div",{className:"text-gray-600",children:[new Date(r.startTime).toLocaleTimeString()," ","-"," ",new Date(r.endTime).toLocaleTimeString()]}),e.jsxs("div",{className:"text-xs text-gray-500",children:["数据点: ",r.count]})]}),e.jsxs("div",{className:"text-right",children:[e.jsx("div",{className:"text-lg font-bold text-blue-600",children:r.value.toFixed(2)}),e.jsx("div",{className:"text-xs text-gray-500",children:i.aggregation==="avg"?"平均值":i.aggregation==="sum"?"总和":i.aggregation==="min"?"最小值":i.aggregation==="max"?"最大值":"计数"})]})]},n))}),e.jsxs("div",{className:"mt-3 text-xs text-blue-600",children:["总时段数: ",t.length," | 时间范围:"," ",Math.round(i.timeRange/1e3),"秒"]})]},s))})]})]})]})]})})},R=()=>{const[m]=p.useState(()=>{const s=new T({collectionInterval:1e3,aggregationWindow:1e4,maxDataPoints:300});return Object.entries({request_latency:()=>{const r=new Date().getHours();return(r>=9&&r<=17?200:100)+Math.random()*300},error_count:()=>Math.random()>.9?Math.floor(Math.random()*10):0,concurrent_users:()=>{const r=new Date().getHours();return(r>=9&&r<=17?100:20)+Math.random()*50},memory_usage:()=>30+Math.random()*40+Math.sin(Date.now()/6e4)*10}).forEach(([r,n])=>{s.registerCollector(r,{type:"gauge",metadata:{unit:r.includes("latency")?"ms":r.includes("usage")?"%":"count"},collect:n}),s.registerAggregator(r,{aggregate:u=>r==="error_count"?u.reduce((v,x)=>v+x.value,0):u.reduce((v,x)=>v+x.value,0)/u.length})}),s.startCollection(),s}),[a,c]=p.useState(null),[l,d]=p.useState([]),[o,f]=p.useState({}),i=p.useCallback(()=>{const s=Date.now(),t=s-3e5,r=["request_latency","error_count","concurrent_users","memory_usage"],n={timestamp:s,metrics:{},alerts:[],trends:{}};r.forEach(u=>{const v=m.calculateStats(u,{startTime:t,endTime:s});if(v){n.metrics[u]=v,u==="request_latency"&&v.mean>400&&n.alerts.push({metric:u,type:"high_latency",message:`平均响应时间过高: ${v.mean.toFixed(2)}ms`,severity:"warning"}),u==="error_count"&&v.sum>5&&n.alerts.push({metric:u,type:"high_errors",message:`错误数量过多: ${v.sum}`,severity:"error"}),u==="memory_usage"&&v.mean>80&&n.alerts.push({metric:u,type:"high_memory",message:`内存使用率过高: ${v.mean.toFixed(1)}%`,severity:"warning"});const x=m.getMetric(u,{startTime:t,endTime:s});if(x&&x.values.length>=10){const j=x.values.slice(-5).map(y=>y.value),N=x.values.slice(-10,-5).map(y=>y.value),C=j.reduce((y,D)=>y+D,0)/j.length,M=N.reduce((y,D)=>y+D,0)/N.length,w=(C-M)/M*100;Math.abs(w)>10?n.trends[u]=w>0?"increasing":"decreasing":n.trends[u]="stable"}}}),c(n),d(n.alerts),f(n.trends)},[m]);p.useEffect(()=>{const s=setInterval(i,5e3);return i(),()=>{clearInterval(s),m.cleanup()}},[i,m]);const g=s=>{switch(s){case"increasing":return"📈";case"decreasing":return"📉";case"stable":return"➡️";default:return"❓"}},h=s=>{switch(s){case"increasing":return"text-red-600";case"decreasing":return"text-green-600";case"stable":return"text-blue-600";default:return"text-gray-600"}};return e.jsx("div",{className:"space-y-6",children:e.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-sm border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"性能分析面板"}),a&&e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"实时告警"}),l.length>0?e.jsx("div",{className:"space-y-2",children:l.map((s,t)=>e.jsx("div",{className:`p-3 rounded border-l-4 ${s.severity==="error"?"bg-red-50 border-red-500":"bg-yellow-50 border-yellow-500"}`,children:e.jsxs("div",{className:"flex justify-between items-center",children:[e.jsx("span",{className:"font-medium",children:s.message}),e.jsx("span",{className:`px-2 py-1 rounded text-xs font-medium ${s.severity==="error"?"bg-red-100 text-red-800":"bg-yellow-100 text-yellow-800"}`,children:s.severity})]})},t))}):e.jsx("div",{className:"p-4 bg-green-50 rounded-lg text-center text-green-600",children:"系统运行正常，无告警"})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"性能指标"}),e.jsx("div",{className:"grid grid-cols-2 gap-4",children:Object.entries(a.metrics).map(([s,t])=>e.jsxs("div",{className:"p-4 bg-gray-50 rounded-lg",children:[e.jsxs("div",{className:"flex justify-between items-center mb-2",children:[e.jsx("h5",{className:"font-medium",children:s}),e.jsxs("div",{className:"flex items-center space-x-1",children:[e.jsx("span",{className:h(o[s]),children:g(o[s])}),e.jsx("span",{className:`text-sm ${h(o[s])}`,children:o[s]||"unknown"})]})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-2 text-sm",children:[e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"平均:"}),e.jsx("span",{className:"font-medium",children:t.mean.toFixed(2)})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"P95:"}),e.jsx("span",{className:"font-medium",children:t.p95.toFixed(2)})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"最小:"}),e.jsx("span",{className:"font-medium",children:t.min.toFixed(2)})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"最大:"}),e.jsx("span",{className:"font-medium",children:t.max.toFixed(2)})]})]}),e.jsxs("div",{className:"mt-2 text-xs text-gray-500",children:["样本数: ",t.count," | 标准差:"," ",t.stdDev.toFixed(2)]})]},s))})]}),e.jsxs("div",{className:"text-sm text-gray-500 text-center",children:["最后分析时间: ",new Date(a.timestamp).toLocaleString()]})]})]})})},E=()=>{const m={title:"请求指标管理器实现",language:"typescript",code:`// 请求指标管理器
class RequestMetricsManager {
  private metrics: Map<string, MetricData> = new Map();
  private collectors: Map<string, MetricCollector> = new Map();
  private aggregators: Map<string, MetricAggregator> = new Map();

  // 注册指标收集器
  registerCollector(name: string, collector: MetricCollector): void {
    this.collectors.set(name, collector);

    if (!this.metrics.has(name)) {
      this.metrics.set(name, {
        name,
        type: collector.type,
        values: [],
        aggregatedValues: new Map(),
        metadata: collector.metadata || {}
      });
    }
  }

  // 收集所有指标
  private async collectMetrics(): Promise<void> {
    const timestamp = Date.now();

    for (const [name, collector] of this.collectors.entries()) {
      try {
        const value = await collector.collect();
        this.recordMetric(name, value, timestamp);
      } catch (error) {
        console.error(\`Failed to collect metric \${name}:\`, error);
      }
    }

    // 执行聚合
    this.performAggregation();
  }

  // 创建自定义查询
  query(queryOptions: QueryOptions): QueryResult {
    const { metrics, startTime, endTime, aggregation, filters } = queryOptions;

    const results: QueryResult = {
      metrics: {},
      timestamp: Date.now()
    };

    for (const metricName of metrics) {
      const metric = this.getMetric(metricName, { startTime, endTime });
      if (!metric) continue;

      let values = metric.values;

      // 应用过滤器
      if (filters) {
        values = values.filter(v => {
          return filters.every(filter => {
            switch (filter.operator) {
              case 'gt': return v.value > filter.value;
              case 'lt': return v.value < filter.value;
              default: return true;
            }
          });
        });
      }

      results.metrics[metricName] = values;
    }

    return results;
  }
}`,highlights:[8,23,38,55]};return e.jsx(k,{title:"请求指标 (Request Metrics)",description:"收集、聚合和分析请求相关的性能指标和统计数据",overview:e.jsxs("div",{className:"space-y-4",children:[e.jsx("h3",{className:"text-lg font-semibold",children:"核心概念"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"指标收集"}),"：自动收集各种性能和业务指标"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"数据聚合"}),"：按时间窗口聚合原始数据"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"统计分析"}),"：计算平均值、百分位数等统计信息"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"查询接口"}),"：支持灵活的数据查询和过滤"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"实时监控"}),"：提供实时的指标监控和告警"]})]}),e.jsx("h3",{className:"text-lg font-semibold mt-6",children:"主要优势"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsx("li",{children:"全面的性能监控和分析能力"}),e.jsx("li",{children:"灵活的指标定义和收集机制"}),e.jsx("li",{children:"高效的数据存储和查询性能"}),e.jsx("li",{children:"丰富的统计分析和可视化功能"}),e.jsx("li",{children:"支持自定义告警和异常检测"})]}),e.jsx("h3",{className:"text-lg font-semibold mt-6",children:"适用场景"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsx("li",{children:"API性能监控和优化"}),e.jsx("li",{children:"系统资源使用情况分析"}),e.jsx("li",{children:"业务指标跟踪和报告"}),e.jsx("li",{children:"故障诊断和根因分析"}),e.jsx("li",{children:"容量规划和性能调优"})]}),e.jsx("h3",{className:"text-lg font-semibold mt-6",children:"注意事项"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsx("li",{children:"指标收集频率要平衡精度和性能"}),e.jsx("li",{children:"数据保留策略需要考虑存储成本"}),e.jsx("li",{children:"聚合算法要符合业务需求"}),e.jsx("li",{children:"告警阈值设置要避免误报"}),e.jsx("li",{children:"查询性能优化对大数据量很重要"})]})]}),examples:[{title:"基础指标监控",component:e.jsx(q,{}),description:"展示基本的指标收集、统计和监控功能",observationPoints:["观察不同类型指标的实时变化","注意统计信息的计算和更新","查看指标数据的收集和存储过程","观察数据导出功能的使用"],keyPoints:["支持多种类型的指标收集器","自动计算各种统计信息","提供实时的数据监控界面","支持数据的导出和备份"],commonTraps:["收集频率过高导致性能问题","数据保留时间过长导致存储问题","统计计算错误导致分析偏差","缺少数据验证导致异常值"],solutions:["根据需求合理设置收集频率","实现智能的数据清理策略","使用标准的统计算法","添加数据验证和异常检测"],codeExample:m},{title:"高级查询功能",component:e.jsx(A,{}),description:"展示灵活的数据查询、过滤和聚合功能",observationPoints:["观察不同查询条件的效果","注意聚合方式对结果的影响","查看过滤条件的应用效果","观察时间范围对数据的影响"],keyPoints:["支持多维度的数据查询","提供灵活的过滤和聚合选项","实时更新查询结果","支持复杂的查询条件组合"],importantTips:["查询条件要符合数据特征","聚合方式要匹配业务需求","时间范围设置要考虑数据密度","过滤条件要避免过度筛选"],codeExample:{title:"高级指标查询实现",language:"typescript",code:`// 高级查询配置
const queryConfig = {
  metrics: selectedMetrics,
  startTime: Date.now() - timeRange * 60000,
  endTime: Date.now(),
  aggregation: aggregationType,
  filters: filters.map(f => ({
    operator: f.operator as "gt" | "lt" | "eq" | "gte" | "lte",
    value: parseFloat(f.value)
  }))
};

// 执行查询
const result = metricsManager.query(queryConfig);

// 分时段查询
const bucketQuery = {
  ...queryConfig,
  groupBy: 'time',
  bucketSize: Math.floor((queryConfig.endTime - queryConfig.startTime) / bucketCount)
};

// 处理查询结果
const processResults = (queryResult: QueryResult) => {
  const processedData = Object.entries(queryResult.metrics).map(([name, values]) => ({
    metric: name,
    count: values.length,
    latestValue: values[values.length - 1]?.value || 0,
    avgValue: values.reduce((sum, v) => sum + v.value, 0) / values.length
  }));
  return processedData;
};`,highlights:[2,15,22,30]}},{title:"性能分析演示",component:e.jsx(R,{}),description:"展示基于指标数据的性能分析和告警功能",observationPoints:["观察性能指标的趋势变化","注意告警触发的条件和时机","查看趋势分析的准确性","观察不同指标间的关联性"],keyPoints:["自动分析性能趋势和异常","智能的告警检测和通知","多维度的性能分析视图","支持历史数据的对比分析"],importantTips:["告警阈值要基于历史数据设定","趋势分析要考虑业务周期性","性能分析要结合系统架构","异常检测要避免误报和漏报"],codeExample:{title:"性能分析系统实现",language:"typescript",code:`// 性能指标收集器
const performanceCollectors = {
  request_latency: () => {
    const hour = new Date().getHours();
    const baseLatency = hour >= 9 && hour <= 17 ? 200 : 100;
    return baseLatency + Math.random() * 300;
  },
  error_count: () => Math.random() > 0.9 ? Math.floor(Math.random() * 10) : 0,
  concurrent_users: () => {
    const hour = new Date().getHours();
    const baseUsers = hour >= 9 && hour <= 17 ? 100 : 20;
    return baseUsers + Math.random() * 50;
  },
  memory_usage: () => 30 + Math.random() * 40 + Math.sin(Date.now() / 60000) * 10
};

// 性能分析逻辑
const performAnalysis = () => {
  const endTime = Date.now();
  const startTime = endTime - 300000; // 5分钟

  metrics.forEach((metricName) => {
    const stats = metricsManager.calculateStats(metricName, { startTime, endTime });

    // 告警检查
    if (metricName === "request_latency" && stats.mean > 400) {
      alerts.push({
        metric: metricName,
        type: "high_latency",
        message: \`平均响应时间过高: \${stats.mean.toFixed(2)}ms\`,
        severity: "warning"
      });
    }

    // 趋势分析
    const recent = metric.values.slice(-5).map(v => v.value);
    const earlier = metric.values.slice(-10, -5).map(v => v.value);
    const change = ((recentAvg - earlierAvg) / earlierAvg) * 100;

    trends[metricName] = Math.abs(change) > 10
      ? (change > 0 ? "increasing" : "decreasing")
      : "stable";
  });
};`,highlights:[2,18,25,35]}}],tutorial:{concepts:["请求指标是系统监控和性能优化的基础","指标收集要平衡数据精度和系统性能","数据聚合能够减少存储成本并提高查询效率","统计分析帮助理解系统行为和性能特征","实时监控和告警是保证系统稳定的关键"],steps:["设计指标收集架构和数据模型","实现各种类型的指标收集器","开发数据聚合和统计分析功能","构建灵活的查询和过滤接口","实现实时监控和告警机制","优化数据存储和查询性能","建立数据治理和质量保证流程"],tips:["根据业务需求选择合适的指标类型","设计高效的数据存储和索引策略","实现智能的数据采样和压缩算法","提供丰富的可视化和分析工具","建立完善的数据备份和恢复机制","考虑指标数据的安全和隐私保护","定期评估和优化指标收集策略"]},interview:{questions:[{question:"什么是请求指标？为什么需要收集指标？",answer:"请求指标是衡量系统性能和行为的量化数据。收集指标的目的包括：1）监控系统健康状态；2）识别性能瓶颈和异常；3）支持容量规划和扩展决策；4）提供故障诊断和根因分析数据；5）验证系统优化效果；6）支持业务决策和报告。"},{question:"如何设计一个高效的指标收集系统？",answer:"设计高效的指标收集系统需要考虑：1）选择合适的指标类型和收集频率；2）实现高性能的数据收集和传输机制；3）设计可扩展的存储和索引策略；4）提供灵活的聚合和查询接口；5）实现智能的数据清理策略；6）建立完善的监控和告警机制；7）考虑系统的可靠性和容错能力。"},{question:"指标数据的聚合策略有哪些？",answer:"常见的聚合策略包括：1）时间聚合：按固定时间窗口聚合数据；2）空间聚合：按服务、实例等维度聚合；3）统计聚合：计算平均值、百分位数、最值等；4）采样聚合：通过采样减少数据量；5）滑动窗口聚合：使用滑动窗口平滑数据；6）自适应聚合：根据数据特征动态调整策略。"},{question:"如何处理指标数据的存储和查询性能问题？",answer:"优化存储和查询性能的方法：1）使用时序数据库优化时间序列数据存储；2）实现数据分片和分区策略；3）建立合适的索引和压缩机制；4）使用缓存加速热点数据查询；5）实现查询优化和并行处理；6）采用数据预聚合减少实时计算；7）定期清理和归档历史数据。"}],keyPoints:["指标收集是系统可观测性的重要组成部分","数据质量直接影响监控和分析的准确性","聚合策略需要平衡精度和性能","查询性能优化对用户体验至关重要","告警机制要避免误报和漏报","数据治理和安全同样重要"]},bestPractices:{dos:["根据业务需求选择关键指标","设计合理的数据收集频率","实现高效的数据存储和索引","提供灵活的查询和分析接口","建立完善的监控和告警机制","定期评估和优化指标策略","考虑数据的安全和隐私保护","建立数据质量保证流程"],donts:["不要收集过多无用的指标","不要设置过高的收集频率","不要忽略数据存储成本","不要设置不合理的告警阈值","不要忽略查询性能优化","不要缺少数据备份和恢复机制","不要忽略指标数据的治理","不要在生产环境中频繁调整配置"],patterns:["收集器模式：解耦指标定义和收集逻辑","聚合器模式：提供灵活的数据聚合策略","观察者模式：实现事件驱动的监控机制","策略模式：支持多种统计和分析算法","缓存模式：优化热点数据的查询性能","批处理模式：提高数据处理效率","分片模式：支持大规模数据的水平扩展","流处理模式：实现实时的数据分析和告警"]}})};export{E as default};
