var y=Object.defineProperty;var M=(a,t,s)=>t in a?y(a,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[t]=s;var x=(a,t,s)=>M(a,typeof t!="symbol"?t+"":t,s);import{j as e,r as o,R as z}from"./index-Bi_r7QuH.js";import{C as w}from"./ComponentTemplate-C5EWLtXX.js";class q{constructor(){x(this,"metrics",{totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0})}async optimize(t){this.metrics.totalRequests++;const s=[],i={timeMs:0,bandwidth:0,requests:0};let n={...t,optimizations:s,estimatedSavings:i};return t.body&&this.shouldCompress(t.body)&&(n=this.applyCompression(n),s.push("请求体压缩"),i.bandwidth+=this.estimateCompressionSavings(t.body),i.timeMs+=50),t.headers&&(n=this.optimizeHeaders(n),s.push("头部优化"),i.bandwidth+=100),this.canBatch(t)&&(s.push("批量请求建议"),i.requests+=.5,i.timeMs+=200),s.length>0&&(this.metrics.optimizedRequests++,this.metrics.timeSavedMs+=i.timeMs,this.metrics.bandwidthSaved+=i.bandwidth,this.metrics.requestsAvoided+=i.requests),n}shouldCompress(t){return JSON.stringify(t).length>1024}applyCompression(t){const s={...t};return s.headers={...s.headers,"Content-Encoding":"gzip","Content-Type":"application/json"},s}estimateCompressionSavings(t){const s=JSON.stringify(t).length;return Math.floor(s*.3)}optimizeHeaders(t){const s={...t},i={...t.headers};return delete i["User-Agent-Extra"],delete i["X-Custom-Debug"],i.Accept&&(i.Accept=i.Accept.replace(/\s+/g,"")),s.headers=i,s}canBatch(t){return t.method==="GET"&&t.url.includes("/api/")}getMetrics(){return this.metrics.totalRequests>0&&(this.metrics.compressionRatio=this.metrics.bandwidthSaved/(this.metrics.totalRequests*1e3)),{...this.metrics}}reset(){this.metrics={totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0}}}class N{constructor(){x(this,"cache",new Map);x(this,"metrics",{totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0})}async optimize(t){var c,d;this.metrics.totalRequests++;const s=[],i={timeMs:0,bandwidth:0,requests:0},n={...t,optimizations:s,estimatedSavings:i};if(this.canCache(t)){const r=this.generateCacheKey(t),h=this.cache.get(r);h&&this.isCacheValid(h)?(h.hits++,s.push("缓存命中"),i.timeMs+=500,i.bandwidth+=2e3,i.requests+=1,this.metrics.optimizedRequests++,this.metrics.requestsAvoided+=1):(s.push("可缓存请求"),this.cache.set(r,{data:null,timestamp:Date.now(),ttl:((c=t.cacheConfig)==null?void 0:c.ttl)||3e5,hits:0}))}return(d=t.cacheConfig)!=null&&d.enabled&&(this.optimizeCacheStrategy(n),s.push("缓存策略优化")),this.updateCacheHitRate(),s.length>0&&(this.metrics.timeSavedMs+=i.timeMs,this.metrics.bandwidthSaved+=i.bandwidth),n}canCache(t){return t.method==="GET"&&!t.url.includes("timestamp")}generateCacheKey(t){return`${t.method}:${t.url}:${JSON.stringify(t.body||{})}`}isCacheValid(t){return Date.now()-t.timestamp<t.ttl}optimizeCacheStrategy(t){const s={...t};return s.cacheConfig&&(t.url.includes("/static/")?s.cacheConfig.ttl=36e5:t.url.includes("/api/user/")?s.cacheConfig.ttl=3e5:s.cacheConfig.ttl=6e4),s}updateCacheHitRate(){const t=Array.from(this.cache.values()).reduce((i,n)=>i+n.hits+1,0),s=Array.from(this.cache.values()).reduce((i,n)=>i+n.hits,0);this.metrics.cacheHitRate=t>0?s/t:0}getMetrics(){return{...this.metrics}}clearCache(){this.cache.clear()}reset(){this.cache.clear(),this.metrics={totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0}}}class S{constructor(){x(this,"pendingRequests",new Map);x(this,"batchTimeout",100);x(this,"maxBatchSize",10);x(this,"metrics",{totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0})}async optimize(t){this.metrics.totalRequests++;const s=[],i={timeMs:0,bandwidth:0,requests:0};let n={...t,optimizations:s,estimatedSavings:i};if(this.canBatch(t)){const c=this.getBatchKey(t);this.pendingRequests.has(c)||this.pendingRequests.set(c,[]);const d=this.pendingRequests.get(c);d.push(t),d.length>=this.maxBatchSize?(s.push(`批量处理(${d.length}个请求)`),i.requests+=d.length-1,i.timeMs+=(d.length-1)*100,i.bandwidth+=(d.length-1)*500,this.pendingRequests.delete(c),this.metrics.optimizedRequests++):(s.push(`批量等待(${d.length}/${this.maxBatchSize})`),setTimeout(()=>{if(this.pendingRequests.has(c)){const r=this.pendingRequests.get(c);r.length>1&&(this.metrics.optimizedRequests++,this.metrics.requestsAvoided+=r.length-1),this.pendingRequests.delete(c)}},this.batchTimeout))}return this.isDuplicate(t)&&(s.push("重复请求去除"),i.requests+=1,i.timeMs+=200,i.bandwidth+=1e3),s.length>0&&(this.metrics.timeSavedMs+=i.timeMs,this.metrics.bandwidthSaved+=i.bandwidth,this.metrics.requestsAvoided+=i.requests),n}canBatch(t){return t.method==="GET"&&(t.url.includes("/api/users/")||t.url.includes("/api/products/"))}getBatchKey(t){return t.url.split("/").slice(0,-1).join("/")}isDuplicate(t){return Math.random()<.1}getMetrics(){return{...this.metrics}}reset(){this.pendingRequests.clear(),this.metrics={totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0}}}class f{constructor(){x(this,"optimizers",[]);x(this,"globalMetrics",{totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0});this.optimizers=[new q,new N,new S]}async optimizeRequest(t){let s={...t,optimizations:[],estimatedSavings:{timeMs:0,bandwidth:0,requests:0}};for(const i of this.optimizers){const n=await i.optimize(s);s.optimizations.push(...n.optimizations),s.estimatedSavings.timeMs+=n.estimatedSavings.timeMs,s.estimatedSavings.bandwidth+=n.estimatedSavings.bandwidth,s.estimatedSavings.requests+=n.estimatedSavings.requests}return this.updateGlobalMetrics(),s}updateGlobalMetrics(){this.globalMetrics={totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0};for(const t of this.optimizers){const s=t.getMetrics();this.globalMetrics.totalRequests+=s.totalRequests,this.globalMetrics.optimizedRequests+=s.optimizedRequests,this.globalMetrics.timeSavedMs+=s.timeSavedMs,this.globalMetrics.bandwidthSaved+=s.bandwidthSaved,this.globalMetrics.requestsAvoided+=s.requestsAvoided,this.globalMetrics.cacheHitRate=Math.max(this.globalMetrics.cacheHitRate,s.cacheHitRate),this.globalMetrics.compressionRatio=Math.max(this.globalMetrics.compressionRatio,s.compressionRatio)}}getGlobalMetrics(){return{...this.globalMetrics}}getOptimizerMetrics(){return[{name:"压缩优化",metrics:this.optimizers[0].getMetrics()},{name:"缓存优化",metrics:this.optimizers[1].getMetrics()},{name:"批量优化",metrics:this.optimizers[2].getMetrics()}]}reset(){this.optimizers.forEach(t=>{"reset"in t&&t.reset()}),this.globalMetrics={totalRequests:0,optimizedRequests:0,timeSavedMs:0,bandwidthSaved:0,requestsAvoided:0,cacheHitRate:0,compressionRatio:0}}}const C=()=>{const[a]=o.useState(()=>new f),[t,s]=o.useState([]),[i,n]=o.useState(a.getGlobalMetrics()),[c,d]=o.useState(!1),r=o.useCallback(async l=>{d(!0);let m;switch(l){case"large-post":m={id:`req_${Date.now()}`,url:"/api/data/upload",method:"POST",headers:{"Content-Type":"application/json","User-Agent-Extra":"debug-info","X-Custom-Debug":"enabled"},body:{data:Array.from({length:100},(u,g)=>({id:g,name:`Item ${g}`,description:`This is a detailed description for item ${g} with lots of text to make it larger`,metadata:{created:new Date().toISOString(),tags:["tag1","tag2","tag3"],properties:{prop1:"value1",prop2:"value2"}}}))},priority:"medium"};break;case"cacheable-get":m={id:`req_${Date.now()}`,url:"/api/users/profile",method:"GET",headers:{Accept:"application/json, text/plain, */*"},cacheConfig:{enabled:!0,ttl:3e5},priority:"high"};break;case"batchable-get":m={id:`req_${Date.now()}`,url:`/api/users/${Math.floor(Math.random()*1e3)}`,method:"GET",headers:{Accept:"application/json"},priority:"low"};break;default:m={id:`req_${Date.now()}`,url:"/api/default",method:"GET"}}try{const u=await a.optimizeRequest(m);s(g=>[u,...g.slice(0,9)]),n(a.getGlobalMetrics())}catch(u){console.error("优化失败:",u)}finally{d(!1)}},[a]),h=o.useCallback(()=>{a.reset(),s([]),n(a.getGlobalMetrics())},[a]);return e.jsx("div",{className:"space-y-6",children:e.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-sm border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"请求优化演示"}),e.jsxs("div",{className:"flex flex-wrap gap-3 mb-6",children:[e.jsx("button",{onClick:()=>r("large-post"),disabled:c,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50",children:c?"优化中...":"大型POST请求"}),e.jsx("button",{onClick:()=>r("cacheable-get"),disabled:c,className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors disabled:opacity-50",children:c?"优化中...":"可缓存GET请求"}),e.jsx("button",{onClick:()=>r("batchable-get"),disabled:c,className:"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors disabled:opacity-50",children:c?"优化中...":"可批量GET请求"}),e.jsx("button",{onClick:h,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors",children:"重置统计"})]}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6",children:[e.jsxs("div",{className:"bg-blue-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-blue-900 mb-2",children:"总请求数"}),e.jsx("p",{className:"text-2xl font-bold text-blue-600",children:i.totalRequests})]}),e.jsxs("div",{className:"bg-green-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-green-900 mb-2",children:"已优化"}),e.jsx("p",{className:"text-2xl font-bold text-green-600",children:i.optimizedRequests})]}),e.jsxs("div",{className:"bg-yellow-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-yellow-900 mb-2",children:"节省时间"}),e.jsxs("p",{className:"text-2xl font-bold text-yellow-600",children:[Math.round(i.timeSavedMs),"ms"]})]}),e.jsxs("div",{className:"bg-purple-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-purple-900 mb-2",children:"节省带宽"}),e.jsxs("p",{className:"text-2xl font-bold text-purple-600",children:[Math.round(i.bandwidthSaved/1024),"KB"]})]})]}),e.jsxs("div",{className:"space-y-3",children:[e.jsx("h4",{className:"font-medium",children:"优化结果"}),t.length===0?e.jsx("p",{className:"text-gray-500 text-center py-8",children:"暂无优化记录"}):t.map(l=>e.jsxs("div",{className:"p-4 bg-gray-50 rounded-lg",children:[e.jsxs("div",{className:"flex justify-between items-start mb-2",children:[e.jsxs("div",{children:[e.jsxs("div",{className:"font-medium",children:[l.method," ",l.url]}),e.jsxs("div",{className:"text-sm text-gray-600",children:["优先级: ",l.priority||"normal"]})]}),e.jsx("div",{className:"text-sm text-gray-500",children:new Date(parseInt(l.id.split("_")[1])).toLocaleTimeString()})]}),l.optimizations.length>0&&e.jsxs("div",{className:"mb-2",children:[e.jsx("div",{className:"text-sm font-medium mb-1",children:"应用的优化:"}),e.jsx("div",{className:"flex flex-wrap gap-1",children:l.optimizations.map((m,u)=>e.jsx("span",{className:"px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs",children:m},u))})]}),e.jsxs("div",{className:"grid grid-cols-3 gap-4 text-sm",children:[e.jsxs("div",{children:[e.jsx("span",{className:"text-gray-600",children:"节省时间:"}),e.jsxs("span",{className:"ml-1 font-medium",children:[Math.round(l.estimatedSavings.timeMs),"ms"]})]}),e.jsxs("div",{children:[e.jsx("span",{className:"text-gray-600",children:"节省带宽:"}),e.jsxs("span",{className:"ml-1 font-medium",children:[Math.round(l.estimatedSavings.bandwidth),"B"]})]}),e.jsxs("div",{children:[e.jsx("span",{className:"text-gray-600",children:"减少请求:"}),e.jsx("span",{className:"ml-1 font-medium",children:l.estimatedSavings.requests.toFixed(1)})]})]})]},l.id))]})]})})},O=()=>{const[a]=o.useState(()=>new f),[t,s]=o.useState(a.getOptimizerMetrics()),[i,n]=o.useState(!1),c=o.useCallback(async()=>{n(!0);const h=[...Array.from({length:5},(l,m)=>({id:`large_post_${m}`,url:"/api/data/upload",method:"POST",body:{data:Array.from({length:200},(u,g)=>({id:g,value:`data_${g}`}))},headers:{"Content-Type":"application/json","User-Agent-Extra":"debug"}})),...Array.from({length:8},(l,m)=>({id:`cacheable_get_${m}`,url:"/api/users/profile",method:"GET",cacheConfig:{enabled:!0,ttl:3e5}})),...Array.from({length:12},(l,m)=>({id:`batchable_get_${m}`,url:`/api/users/${m%3}`,method:"GET"}))].sort(()=>Math.random()-.5);for(const l of h)await a.optimizeRequest(l),await new Promise(m=>setTimeout(m,10));s(a.getOptimizerMetrics()),n(!1)},[a]),d=o.useCallback(()=>{a.reset(),s(a.getOptimizerMetrics())},[a]);return e.jsx("div",{className:"space-y-6",children:e.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-sm border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"优化器性能对比"}),e.jsxs("div",{className:"flex gap-3 mb-6",children:[e.jsx("button",{onClick:c,disabled:i,className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors disabled:opacity-50",children:i?"运行中...":"运行基准测试"}),e.jsx("button",{onClick:d,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors",children:"重置测试"})]}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-6",children:t.map((r,h)=>e.jsxs("div",{className:"bg-gray-50 p-4 rounded-lg",children:[e.jsx("h4",{className:"font-semibold mb-3 text-center",children:r.name}),e.jsxs("div",{className:"space-y-2 text-sm",children:[e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"总请求数:"}),e.jsx("span",{className:"font-medium",children:r.metrics.totalRequests})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"已优化:"}),e.jsx("span",{className:"font-medium text-green-600",children:r.metrics.optimizedRequests})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"节省时间:"}),e.jsxs("span",{className:"font-medium",children:[Math.round(r.metrics.timeSavedMs),"ms"]})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"节省带宽:"}),e.jsxs("span",{className:"font-medium",children:[Math.round(r.metrics.bandwidthSaved/1024),"KB"]})]}),e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"减少请求:"}),e.jsx("span",{className:"font-medium",children:r.metrics.requestsAvoided.toFixed(1)})]}),r.metrics.cacheHitRate>0&&e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"缓存命中率:"}),e.jsxs("span",{className:"font-medium",children:[(r.metrics.cacheHitRate*100).toFixed(1),"%"]})]}),r.metrics.compressionRatio>0&&e.jsxs("div",{className:"flex justify-between",children:[e.jsx("span",{children:"压缩比:"}),e.jsxs("span",{className:"font-medium",children:[(r.metrics.compressionRatio*100).toFixed(1),"%"]})]})]}),e.jsx("div",{className:"mt-3 pt-3 border-t",children:e.jsxs("div",{className:"text-xs text-gray-600 text-center",children:["优化率:"," ",r.metrics.totalRequests>0?(r.metrics.optimizedRequests/r.metrics.totalRequests*100).toFixed(1):0,"%"]})})]},h))})]})})},T=()=>{const[a]=o.useState(()=>new f),[t,s]=o.useState(!1),[i,n]=o.useState(a.getGlobalMetrics()),[c,d]=o.useState([]),r=z.useRef(null),h=o.useCallback(()=>{const p=["upload","profile","list","detail","search"],b=["GET","POST","PUT"],j=p[Math.floor(Math.random()*p.length)],v=b[Math.floor(Math.random()*b.length)];return{id:`auto_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,url:`/api/${j}/${Math.floor(Math.random()*1e3)}`,method:v,body:v!=="GET"?{data:Array.from({length:Math.floor(Math.random()*50)+10},(A,R)=>({id:R,value:`item_${R}`}))}:void 0,headers:{"Content-Type":"application/json",Accept:"application/json, text/plain, */*"},cacheConfig:Math.random()>.5?{enabled:!0,ttl:3e5}:void 0,priority:["low","medium","high"][Math.floor(Math.random()*3)]}},[]),l=o.useCallback(async()=>{const p=h(),b=await a.optimizeRequest(p),j=b.estimatedSavings.timeMs+b.estimatedSavings.bandwidth+b.estimatedSavings.requests*100;d(v=>[{timestamp:Date.now(),type:p.method,optimizations:b.optimizations.length,savings:j},...v.slice(0,19)]),n(a.getGlobalMetrics())},[a,h]),m=o.useCallback(()=>{s(!0),r.current=setInterval(l,1e3)},[l]),u=o.useCallback(()=>{s(!1),r.current&&(clearInterval(r.current),r.current=null)},[]),g=o.useCallback(()=>{u(),a.reset(),n(a.getGlobalMetrics()),d([])},[a,u]);return o.useEffect(()=>()=>{r.current&&clearInterval(r.current)},[]),e.jsx("div",{className:"space-y-6",children:e.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-sm border",children:[e.jsx("h3",{className:"text-lg font-semibold mb-4",children:"实时优化监控"}),e.jsxs("div",{className:"flex gap-3 mb-6",children:[e.jsx("button",{onClick:t?u:m,className:`px-4 py-2 text-white rounded transition-colors ${t?"bg-red-500 hover:bg-red-600":"bg-green-500 hover:bg-green-600"}`,children:t?"停止监控":"开始监控"}),e.jsx("button",{onClick:g,className:"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors",children:"重置监控"})]}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-5 gap-4 mb-6",children:[e.jsxs("div",{className:"bg-blue-50 p-3 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-blue-900 mb-1 text-sm",children:"总请求"}),e.jsx("p",{className:"text-xl font-bold text-blue-600",children:i.totalRequests})]}),e.jsxs("div",{className:"bg-green-50 p-3 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-green-900 mb-1 text-sm",children:"已优化"}),e.jsx("p",{className:"text-xl font-bold text-green-600",children:i.optimizedRequests})]}),e.jsxs("div",{className:"bg-yellow-50 p-3 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-yellow-900 mb-1 text-sm",children:"节省时间"}),e.jsxs("p",{className:"text-xl font-bold text-yellow-600",children:[Math.round(i.timeSavedMs),"ms"]})]}),e.jsxs("div",{className:"bg-purple-50 p-3 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-purple-900 mb-1 text-sm",children:"节省带宽"}),e.jsxs("p",{className:"text-xl font-bold text-purple-600",children:[Math.round(i.bandwidthSaved/1024),"KB"]})]}),e.jsxs("div",{className:"bg-red-50 p-3 rounded-lg",children:[e.jsx("h4",{className:"font-medium text-red-900 mb-1 text-sm",children:"减少请求"}),e.jsx("p",{className:"text-xl font-bold text-red-600",children:i.requestsAvoided.toFixed(1)})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("h4",{className:"font-medium",children:["请求流水线"," ",t&&e.jsx("span",{className:"text-green-500 text-sm",children:"(实时更新)"})]}),e.jsx("div",{className:"bg-gray-50 rounded-lg p-4 max-h-64 overflow-y-auto",children:c.length===0?e.jsx("p",{className:"text-gray-500 text-center py-4",children:"暂无请求记录"}):c.map((p,b)=>e.jsxs("div",{className:"flex justify-between items-center py-1 text-sm border-b border-gray-200 last:border-b-0",children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("span",{className:`px-2 py-1 rounded text-xs font-medium ${p.type==="GET"?"bg-blue-100 text-blue-800":p.type==="POST"?"bg-green-100 text-green-800":"bg-purple-100 text-purple-800"}`,children:p.type}),e.jsx("span",{children:new Date(p.timestamp).toLocaleTimeString()})]}),e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsxs("span",{className:"text-gray-600",children:["优化: ",p.optimizations]}),e.jsxs("span",{className:"text-green-600 font-medium",children:["节省: ",Math.round(p.savings)]})]})]},b))})]})]})})},P=()=>{const a={title:"请求优化实现",code:`// 请求优化管理器
class RequestOptimizationManager {
  private optimizers: RequestOptimizer[] = [];

  constructor() {
    this.optimizers = [
      new CompressionOptimizer(),
      new CacheOptimizer(),
      new BatchOptimizer()
    ];
  }

  async optimizeRequest(request: OptimizableRequest): Promise<OptimizedRequest> {
    let optimizedRequest: OptimizedRequest = {
      ...request,
      optimizations: [],
      estimatedSavings: { timeMs: 0, bandwidth: 0, requests: 0 }
    };

    // 依次应用所有优化器
    for (const optimizer of this.optimizers) {
      const result = await optimizer.optimize(optimizedRequest);

      // 合并优化结果
      optimizedRequest.optimizations.push(...result.optimizations);
      optimizedRequest.estimatedSavings.timeMs += result.estimatedSavings.timeMs;
      optimizedRequest.estimatedSavings.bandwidth += result.estimatedSavings.bandwidth;
      optimizedRequest.estimatedSavings.requests += result.estimatedSavings.requests;
    }

    return optimizedRequest;
  }
}`,language:"typescript",highlights:[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]},t={title:"优化器性能对比实现",language:"typescript",code:`// 优化器性能对比管理器
class OptimizerBenchmark {
  private optimizers: Map<string, RequestOptimizer> = new Map();

  constructor() {
    this.optimizers.set('compression', new CompressionOptimizer());
    this.optimizers.set('cache', new CacheOptimizer());
    this.optimizers.set('batch', new BatchOptimizer());
  }

  async runBenchmark(testRequests: OptimizableRequest[]): Promise<BenchmarkResult[]> {
    const results: BenchmarkResult[] = [];

    for (const [name, optimizer] of this.optimizers) {
      const startTime = performance.now();
      
      // 重置优化器状态
      optimizer.reset();
      
      // 执行测试请求
      for (const request of testRequests) {
        await optimizer.optimize(request);
      }
      
      const endTime = performance.now();
      const metrics = optimizer.getMetrics();
      
      results.push({
        optimizerName: name,
        executionTime: endTime - startTime,
        metrics: metrics,
        efficiency: this.calculateEfficiency(metrics)
      });
    }

    return results;
  }

  private calculateEfficiency(metrics: OptimizationMetrics): number {
    const totalSavings = metrics.timeSavedMs + (metrics.bandwidthSaved / 1024);
    return metrics.totalRequests > 0 ? totalSavings / metrics.totalRequests : 0;
  }
}`,highlights:[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]},s={title:"实时优化监控实现",language:"typescript",code:`// 实时优化监控器
class RealTimeOptimizationMonitor {
  private manager: RequestOptimizationManager;
  private metricsHistory: OptimizationMetrics[] = [];
  private subscribers: ((metrics: OptimizationMetrics) => void)[] = [];
  private monitoringInterval: NodeJS.Timeout | null = null;

  constructor(manager: RequestOptimizationManager) {
    this.manager = manager;
  }

  startMonitoring(intervalMs: number = 1000): void {
    this.monitoringInterval = setInterval(() => {
      const currentMetrics = this.manager.getGlobalMetrics();
      
      // 记录历史数据
      this.metricsHistory.push({
        ...currentMetrics,
        timestamp: Date.now()
      });
      
      // 保持历史数据在合理范围内
      if (this.metricsHistory.length > 100) {
        this.metricsHistory.shift();
      }
      
      // 通知订阅者
      this.notifySubscribers(currentMetrics);
      
      // 检查异常情况
      this.checkAnomalies(currentMetrics);
    }, intervalMs);
  }

  subscribe(callback: (metrics: OptimizationMetrics) => void): void {
    this.subscribers.push(callback);
  }

  private notifySubscribers(metrics: OptimizationMetrics): void {
    this.subscribers.forEach(callback => callback(metrics));
  }

  private checkAnomalies(metrics: OptimizationMetrics): void {
    // 检查缓存命中率异常
    if (metrics.cacheHitRate < 0.3 && metrics.totalRequests > 10) {
      console.warn('缓存命中率过低:', metrics.cacheHitRate);
    }
    
    // 检查优化率异常
    const optimizationRate = metrics.optimizedRequests / metrics.totalRequests;
    if (optimizationRate < 0.5 && metrics.totalRequests > 5) {
      console.warn('优化率过低:', optimizationRate);
    }
  }
}`,highlights:[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]};return e.jsx(w,{title:"请求优化",description:"通过多种优化策略提升请求性能，包括压缩、缓存、批量处理等技术",overview:e.jsxs("div",{className:"space-y-4",children:[e.jsx("h3",{className:"text-lg font-semibold",children:"核心概念"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"请求压缩："}),"减少请求体大小，降低网络传输时间"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"智能缓存："}),"避免重复请求，提高响应速度"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"批量处理："}),"合并相似请求，减少网络往返次数"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"头部优化："}),"精简HTTP头部，减少传输开销"]})]}),e.jsx("h3",{className:"text-lg font-semibold mt-6",children:"主要优势"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"性能提升："}),"显著减少请求响应时间和带宽使用"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"用户体验："}),"更快的页面加载和交互响应"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"资源节约："}),"减少服务器负载和网络资源消耗"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"成本降低："}),"减少带宽费用和服务器资源成本"]})]}),e.jsx("h3",{className:"text-lg font-semibold mt-6",children:"适用场景"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"大数据传输："}),"文件上传、批量数据处理等场景"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"高频请求："}),"实时数据查询、用户交互等场景"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"移动端应用："}),"网络条件不稳定的移动设备"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"国际化应用："}),"跨地域网络延迟较高的场景"]})]}),e.jsx("h3",{className:"text-lg font-semibold mt-6",children:"注意事项"}),e.jsxs("ul",{className:"list-disc list-inside space-y-2 text-gray-700",children:[e.jsxs("li",{children:[e.jsx("strong",{children:"优化策略选择："}),"根据请求特性选择合适的优化方法"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"缓存一致性："}),"确保缓存数据的时效性和准确性"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"压缩开销："}),"平衡压缩收益和CPU消耗"]}),e.jsxs("li",{children:[e.jsx("strong",{children:"兼容性考虑："}),"确保优化后的请求兼容各种环境"]})]})]}),examples:[{title:"基础优化演示",component:e.jsx(C,{}),description:"展示不同类型请求的优化效果，包括压缩、缓存和批量处理",observationPoints:["大型POST请求会应用压缩优化，显著减少传输数据量","可缓存的GET请求会被标记为可缓存，后续相同请求可直接使用缓存","可批量处理的请求会被识别并建议进行批量优化","观察每个请求的优化策略和预估节省的资源"],keyPoints:["不同类型的请求会应用不同的优化策略","优化效果通过时间、带宽和请求数量来量化","多种优化策略可以同时应用于同一个请求"],commonTraps:["盲目应用所有优化策略而不考虑实际效果","忽略优化策略的适用条件和限制","过度优化导致代码复杂性增加"],solutions:["根据请求特性智能选择优化策略","建立完善的性能监控和评估机制","保持优化逻辑的模块化和可维护性"],codeExample:a},{title:"优化器性能对比",component:e.jsx(O,{}),description:"对比不同优化器的性能表现和适用场景",observationPoints:["压缩优化器主要针对大型请求体，节省带宽效果明显","缓存优化器对重复请求效果显著，缓存命中率是关键指标","批量优化器通过合并请求减少网络往返次数","不同优化器的效果会根据请求类型有所差异"],keyPoints:["每种优化器都有其最适合的应用场景","综合使用多种优化器可以获得最佳效果","优化效果需要通过实际指标来衡量"],codeExample:t},{title:"实时优化监控",component:e.jsx(T,{}),description:"实时监控请求优化效果，展示优化策略的动态应用",observationPoints:["实时生成的请求会自动应用合适的优化策略","监控面板显示实时的优化统计数据","请求流水线展示每个请求的优化详情","可以观察到优化效果的累积趋势"],keyPoints:["实时监控有助于评估优化策略的实际效果","动态调整优化参数可以获得更好的性能","历史数据分析有助于优化策略的持续改进"],codeExample:s}],tutorial:{concepts:["请求优化是通过各种技术手段减少网络传输时间和资源消耗的过程","压缩优化通过减少数据大小来提升传输效率","缓存优化通过存储和重用数据来避免重复请求","批量优化通过合并多个请求来减少网络往返次数","优化策略的选择需要根据请求特性和应用场景来决定"],steps:["分析请求特性，识别优化机会（大小、频率、类型等）","选择合适的优化策略（压缩、缓存、批量等）","实现优化器接口，定义具体的优化逻辑","创建优化管理器，协调多个优化器的工作","应用优化策略到实际请求中","监控优化效果，收集性能指标","根据监控结果调整和改进优化策略"],tips:["优先优化高频和大型请求，效果更明显","建立完善的性能监控体系，量化优化效果","考虑优化策略的副作用，如CPU消耗和内存使用","保持优化逻辑的模块化，便于维护和扩展","定期评估和更新优化策略，适应业务变化"]},interview:{questions:[{question:"请求优化有哪些主要策略？各自适用于什么场景？",answer:"主要策略包括：1）压缩优化：适用于大型请求体，如文件上传、批量数据传输；2）缓存优化：适用于重复性高的GET请求，如用户信息、配置数据；3）批量优化：适用于大量相似的小请求，如批量查询用户信息；4）头部优化：适用于所有请求，通过精简HTTP头部减少开销；5）连接复用：适用于同域名的多个请求，减少连接建立时间。"},{question:"如何设计一个可扩展的请求优化系统？",answer:"设计要点：1）定义统一的优化器接口，支持插件化扩展；2）实现优化管理器，协调多个优化器的工作；3）建立请求分析机制，自动识别优化机会；4）设计配置系统，支持动态调整优化策略；5）实现性能监控，量化优化效果；6）提供降级机制，确保优化失败时的系统稳定性；7）考虑优化策略的优先级和冲突处理。"},{question:"请求压缩优化需要考虑哪些因素？",answer:"考虑因素：1）数据大小阈值：小于1KB的数据压缩收益有限；2）数据类型：文本数据压缩效果好，已压缩的数据（如图片）效果差；3）CPU开销：压缩和解压缩会消耗CPU资源；4）网络条件：低带宽环境下压缩收益更明显；5）兼容性：确保客户端和服务端都支持相同的压缩算法；6）压缩算法选择：gzip、deflate、brotli等各有特点；7）缓存策略：压缩后的数据缓存可以减少重复压缩开销。"},{question:"如何评估请求优化的效果？",answer:"评估指标：1）响应时间：请求从发送到接收完成的总时间；2）带宽使用：实际传输的数据量；3）请求数量：通过批量优化减少的请求次数；4）缓存命中率：缓存优化的有效性指标；5）CPU使用率：优化策略的资源消耗；6）用户体验指标：页面加载时间、交互响应时间；7）成本指标：带宽费用、服务器资源成本。需要建立基线数据，进行A/B测试，并持续监控长期趋势。"},{question:"在微服务架构中如何实现请求优化？",answer:"实现方案：1）API网关层优化：统一处理压缩、缓存等通用优化；2）服务间通信优化：使用高效的序列化协议（如protobuf）、连接池等；3）分布式缓存：使用Redis等实现跨服务的缓存共享；4）批量API设计：提供批量接口减少服务间调用次数；5）异步处理：对非关键路径使用异步调用；6）智能路由：根据负载和响应时间选择最优服务实例；7）监控和追踪：使用分布式追踪系统监控优化效果。"}],keyPoints:["请求优化需要根据具体场景和需求选择合适的策略组合","性能监控和评估是优化策略持续改进的基础","优化策略的实施需要考虑系统复杂性和维护成本","微服务架构下的请求优化需要统一规划和协调","用户体验是评估优化效果的最终标准"]},bestPractices:{dos:["根据请求特性智能选择优化策略","建立完善的性能监控和指标体系","实现模块化和可扩展的优化架构","定期评估和调整优化策略","考虑优化策略的副作用和成本","提供优化策略的开关和降级机制","在关键路径上优先应用优化策略"],donts:["不要盲目应用所有优化策略","不要忽略优化策略的适用条件","不要过度优化导致系统复杂化","不要忽略优化策略的兼容性问题","不要缺乏性能监控和效果评估","不要忽略优化失败时的处理机制","不要在非关键路径上过度投入优化资源"],patterns:["策略模式：支持多种优化策略的动态选择和组合","装饰器模式：为请求透明地添加各种优化功能","观察者模式：监控优化效果并触发相应的调整","工厂模式：根据请求特性创建合适的优化器","代理模式：在不修改原有代码的情况下添加优化","责任链模式：多个优化器按顺序处理请求"]}})};export{P as default};
