var L=Object.defineProperty;var P=(t,n,s)=>n in t?L(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s;var f=(t,n,s)=>P(t,typeof n!="symbol"?n+"":n,s);import{r as i,j as e}from"./index-C7SuDyTR.js";import{C as D}from"./ComponentTemplate-BzrYXZsv.js";var c=(t=>(t[t.CONNECTING=0]="CONNECTING",t[t.OPEN=1]="OPEN",t[t.CLOSING=2]="CLOSING",t[t.CLOSED=3]="CLOSED",t))(c||{});class I{constructor(n){f(this,"ws",null);f(this,"config");f(this,"messageListeners",new Map);f(this,"stateListeners",new Set);f(this,"errorListeners",new Set);f(this,"messageHistory",[]);f(this,"reconnectTimer",null);f(this,"heartbeatTimer",null);f(this,"currentAttempts",0);this.config={autoReconnect:!0,reconnectAttempts:5,reconnectInterval:2e3,heartbeatInterval:1e4,...n}}connect(){return new Promise((n,s)=>{try{this.ws=new WebSocket(this.config.url,this.config.protocols),this.ws.onopen=()=>{this.currentAttempts=0,this.notifyStateListeners(c.OPEN),this.startHeartbeat(),n()},this.ws.onmessage=d=>{this.handleMessage(d)},this.ws.onclose=d=>{this.handleClose(d)},this.ws.onerror=d=>{this.handleError(d),s(d)}}catch(d){s(d)}})}handleMessage(n){try{let s;try{s=JSON.parse(n.data)}catch{s={id:Date.now().toString(),type:"echo",data:{text:n.data},timestamp:Date.now()}}this.messageHistory.push(s),this.messageHistory.length>1e3&&(this.messageHistory=this.messageHistory.slice(-500));const d=this.messageListeners.get(s.type);d&&d.forEach(x=>x(s));const l=this.messageListeners.get("*");l&&l.forEach(x=>x(s))}catch(s){console.error("Failed to handle message:",s)}}handleClose(n){this.stopHeartbeat(),this.notifyStateListeners(c.CLOSED),this.config.autoReconnect&&this.currentAttempts<this.config.reconnectAttempts&&this.scheduleReconnect()}handleError(n){this.errorListeners.forEach(s=>s(n))}sendMessage(n,s){var d;if(((d=this.ws)==null?void 0:d.readyState)===c.OPEN){const l={id:Date.now().toString(),type:n,data:s,timestamp:Date.now()};return this.ws.send(JSON.stringify(l)),!0}return!1}subscribe(n,s){return this.messageListeners.has(n)||this.messageListeners.set(n,new Set),this.messageListeners.get(n).add(s),()=>{const d=this.messageListeners.get(n);d&&(d.delete(s),d.size===0&&this.messageListeners.delete(n))}}disconnect(){this.config.autoReconnect=!1,this.stopHeartbeat(),this.clearReconnectTimer(),this.ws&&(this.ws.close(),this.ws=null)}getState(){var n;return((n=this.ws)==null?void 0:n.readyState)??c.CLOSED}getMessageHistory(){return[...this.messageHistory]}onStateChange(n){return this.stateListeners.add(n),()=>this.stateListeners.delete(n)}onError(n){return this.errorListeners.add(n),()=>this.errorListeners.delete(n)}notifyStateListeners(n){this.stateListeners.forEach(s=>s(n))}scheduleReconnect(){this.currentAttempts++;const n=this.config.reconnectInterval*Math.pow(2,this.currentAttempts-1);this.reconnectTimer=setTimeout(()=>{this.connect().catch(()=>{})},n)}clearReconnectTimer(){this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null)}startHeartbeat(){this.config.heartbeatInterval&&(this.heartbeatTimer=setInterval(()=>{this.sendMessage("heartbeat",{timestamp:Date.now()})},this.config.heartbeatInterval))}stopHeartbeat(){this.heartbeatTimer&&(clearInterval(this.heartbeatTimer),this.heartbeatTimer=null)}getSubscriptionStats(){const n={};return this.messageListeners.forEach((s,d)=>{n[d]=s.size}),n}}const T=()=>{const[t,n]=i.useState(null),[s,d]=i.useState(c.CLOSED),[l,x]=i.useState([]),[N,w]=i.useState(""),[p,S]=i.useState("wss://echo.websocket.org"),[m,b]=i.useState("");i.useEffect(()=>{const r=new I({url:p,autoReconnect:!1}),g=r.onStateChange(y=>{d(y)}),C=r.onError(y=>{b("连接错误: "+y.type)}),j=r.subscribe("*",y=>{x(a=>[...a,y])});return n(r),()=>{g(),C(),j(),r.disconnect()}},[p]);const k=i.useCallback(async()=>{if(t)try{b(""),await t.connect()}catch(r){b("连接失败: "+r.message)}},[t]),E=i.useCallback(()=>{t&&t.disconnect()},[t]),M=i.useCallback(()=>{if(!t||!N.trim())return;t.sendMessage("chat",{text:N,user:"Client"})?w(""):b("发送失败: 连接未建立")},[t,N]),O=i.useCallback(()=>{x([])},[]),o=i.useCallback(()=>{if(!t)return;const r=[{type:"notification",data:{text:"系统通知: 新用户加入"}},{type:"chat",data:{text:"服务器: 欢迎使用WebSocket!",user:"Server"}},{type:"status",data:{online:Math.floor(Math.random()*100)+1}}],g=r[Math.floor(Math.random()*r.length)],C={id:Date.now().toString(),type:g.type,data:g.data,timestamp:Date.now()};x(j=>[...j,C])},[t]);return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"连接控制"}),e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium mb-1",children:"服务器地址"}),e.jsx("input",{type:"text",value:p,onChange:r=>S(r.target.value),disabled:s===c.OPEN,className:"w-full px-3 py-2 border rounded-md disabled:bg-gray-100",placeholder:"wss://echo.websocket.org"})]}),e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("span",{className:"text-sm font-medium",children:"连接状态:"}),e.jsx("span",{className:`px-2 py-1 rounded text-xs font-medium ${s===c.OPEN?"bg-green-100 text-green-800":s===c.CONNECTING?"bg-yellow-100 text-yellow-800":"bg-red-100 text-red-800"}`,children:s===c.OPEN?"已连接":s===c.CONNECTING?"连接中":"未连接"})]}),m&&e.jsx("div",{className:"p-2 bg-red-50 border border-red-200 rounded text-red-700 text-sm",children:m}),e.jsxs("div",{className:"flex space-x-2",children:[e.jsx("button",{onClick:k,disabled:s===c.OPEN,className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"连接"}),e.jsx("button",{onClick:E,disabled:s===c.CLOSED,className:"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"断开"})]})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"消息发送"}),e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{children:[e.jsx("label",{className:"block text-sm font-medium mb-1",children:"消息内容"}),e.jsx("textarea",{value:N,onChange:r=>w(r.target.value),className:"w-full px-3 py-2 border rounded-md",rows:3,placeholder:"输入要发送的消息..."})]}),e.jsxs("div",{className:"flex space-x-2",children:[e.jsx("button",{onClick:M,disabled:s!==c.OPEN||!N.trim(),className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"发送消息"}),e.jsx("button",{onClick:o,className:"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors",children:"模拟服务器消息"})]})]})]})]}),e.jsxs("div",{children:[e.jsxs("div",{className:"flex items-center justify-between mb-3",children:[e.jsx("h4",{className:"font-medium",children:"消息历史"}),e.jsx("button",{onClick:O,className:"px-3 py-1 text-sm bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors",children:"清空"})]}),e.jsx("div",{className:"max-h-96 overflow-y-auto border rounded-lg",children:l.length>0?e.jsx("div",{className:"divide-y",children:l.map(r=>e.jsxs("div",{className:"p-3",children:[e.jsxs("div",{className:"flex items-center justify-between mb-1",children:[e.jsx("span",{className:"text-sm font-medium text-blue-600",children:r.type}),e.jsx("span",{className:"text-xs text-gray-500",children:new Date(r.timestamp).toLocaleTimeString()})]}),e.jsx("div",{className:"text-sm text-gray-700",children:typeof r.data=="object"?JSON.stringify(r.data,null,2):r.data})]},r.id))}):e.jsx("div",{className:"text-center text-gray-500 py-8",children:"暂无消息"})})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"功能说明"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm",children:[e.jsxs("div",{className:"p-3 bg-blue-50 rounded",children:[e.jsx("div",{className:"font-medium text-blue-800 mb-1",children:"连接管理"}),e.jsx("div",{className:"text-blue-700",children:"支持手动连接和断开WebSocket，实时显示连接状态。"})]}),e.jsxs("div",{className:"p-3 bg-green-50 rounded",children:[e.jsx("div",{className:"font-medium text-green-800 mb-1",children:"消息发送"}),e.jsx("div",{className:"text-green-700",children:"发送JSON格式的消息到服务器，支持多种消息类型。"})]}),e.jsxs("div",{className:"p-3 bg-yellow-50 rounded",children:[e.jsx("div",{className:"font-medium text-yellow-800 mb-1",children:"消息接收"}),e.jsx("div",{className:"text-yellow-700",children:"实时接收和显示服务器消息，支持消息历史记录。"})]}),e.jsxs("div",{className:"p-3 bg-purple-50 rounded",children:[e.jsx("div",{className:"font-medium text-purple-800 mb-1",children:"错误处理"}),e.jsx("div",{className:"text-purple-700",children:"显示连接错误和发送失败信息，帮助调试问题。"})]})]})]})]})},R=()=>{const[t,n]=i.useState(null),[s,d]=i.useState(c.CLOSED),[l,x]=i.useState(new Set),[N,w]=i.useState({}),[p,S]=i.useState([]),[m,b]=i.useState(""),[k,E]=i.useState(new Map),M=["chat","notification","status","user-action","system-alert","data-update"];i.useEffect(()=>{const a=new I({url:"wss://echo.websocket.org",autoReconnect:!0}),v=a.onStateChange(h=>{d(h)});return n(a),()=>{v(),k.forEach(h=>h()),a.disconnect()}},[]);const O=i.useCallback(async()=>{if(t)try{await t.connect()}catch(a){console.error("连接失败:",a)}},[t]),o=i.useCallback(()=>{t&&t.disconnect()},[t]),r=i.useCallback(a=>{if(!t||l.has(a))return;const v=t.subscribe(a,h=>{S(u=>[...u,h]),w(u=>({...u,[a]:(u[a]||0)+1}))});x(h=>new Set([...h,a])),E(h=>new Map([...h,[a,v]]))},[t,l]),g=i.useCallback(a=>{const v=k.get(a);v&&(v(),E(h=>{const u=new Map(h);return u.delete(a),u})),x(h=>{const u=new Set(h);return u.delete(a),u})},[k]),C=i.useCallback(()=>{m.trim()&&(r(m.trim()),b(""))},[m,r]),j=i.useCallback(a=>{const v={chat:{text:"这是一条聊天消息",user:"User"+Math.floor(Math.random()*100)},notification:{title:"新通知",content:"您有新的消息"},status:{online:Math.floor(Math.random()*100),active:Math.floor(Math.random()*50)},"user-action":{action:"click",target:"button-"+Math.floor(Math.random()*10)},"system-alert":{level:"warning",message:"系统负载较高"},"data-update":{table:"users",count:Math.floor(Math.random()*1e3)}},h={id:Date.now().toString()+Math.random(),type:a,data:v[a]||{message:"示例数据"},timestamp:Date.now()};l.has(a)&&(S(u=>[...u,h]),w(u=>({...u,[a]:(u[a]||0)+1})))},[l]),y=i.useCallback(()=>{S([]),w({})},[]);return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"连接状态"}),e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("span",{className:"text-sm font-medium",children:"状态:"}),e.jsx("span",{className:`px-2 py-1 rounded text-xs font-medium ${s===c.OPEN?"bg-green-100 text-green-800":"bg-red-100 text-red-800"}`,children:s===c.OPEN?"已连接":"未连接"})]}),e.jsxs("div",{className:"flex space-x-2",children:[e.jsx("button",{onClick:O,disabled:s===c.OPEN,className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"连接"}),e.jsx("button",{onClick:o,disabled:s===c.CLOSED,className:"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"断开"})]})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"订阅统计"}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"text-sm",children:[e.jsx("span",{className:"font-medium",children:"活跃订阅:"}),e.jsxs("span",{className:"ml-2",children:[l.size," 个"]})]}),Object.entries(N).map(([a,v])=>e.jsxs("div",{className:"text-sm flex justify-between",children:[e.jsxs("span",{children:[a,":"]}),e.jsxs("span",{className:"font-medium",children:[v," 条消息"]})]},a))]})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"消息类型订阅"}),e.jsx("div",{className:"grid grid-cols-2 md:grid-cols-3 gap-3 mb-4",children:M.map(a=>e.jsxs("div",{className:"flex items-center justify-between p-2 border rounded",children:[e.jsx("span",{className:"text-sm",children:a}),l.has(a)?e.jsx("button",{onClick:()=>g(a),className:"px-2 py-1 text-xs bg-red-500 text-white rounded hover:bg-red-600 transition-colors",children:"取消"}):e.jsx("button",{onClick:()=>r(a),className:"px-2 py-1 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors",children:"订阅"})]},a))}),e.jsxs("div",{className:"flex space-x-2",children:[e.jsx("input",{type:"text",value:m,onChange:a=>b(a.target.value),placeholder:"自定义消息类型",className:"flex-1 px-3 py-2 border rounded-md",onKeyPress:a=>a.key==="Enter"&&C()}),e.jsx("button",{onClick:C,disabled:!m.trim(),className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"添加订阅"})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"消息模拟"}),e.jsx("div",{className:"grid grid-cols-2 md:grid-cols-3 gap-2",children:M.map(a=>e.jsxs("button",{onClick:()=>j(a),className:"px-3 py-2 text-sm bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors",children:["模拟 ",a]},a))})]}),e.jsxs("div",{children:[e.jsxs("div",{className:"flex items-center justify-between mb-3",children:[e.jsx("h4",{className:"font-medium",children:"接收到的消息"}),e.jsx("button",{onClick:y,className:"px-3 py-1 text-sm bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors",children:"清空"})]}),e.jsx("div",{className:"max-h-96 overflow-y-auto border rounded-lg",children:p.length>0?e.jsx("div",{className:"divide-y",children:p.slice(-20).map(a=>e.jsxs("div",{className:"p-3",children:[e.jsxs("div",{className:"flex items-center justify-between mb-1",children:[e.jsx("span",{className:"text-sm font-medium text-blue-600",children:a.type}),e.jsx("span",{className:"text-xs text-gray-500",children:new Date(a.timestamp).toLocaleTimeString()})]}),e.jsx("div",{className:"text-sm text-gray-700",children:JSON.stringify(a.data,null,2)})]},a.id))}):e.jsx("div",{className:"text-center text-gray-500 py-8",children:"暂无消息 - 请先订阅消息类型"})})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"功能说明"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm",children:[e.jsxs("div",{className:"p-3 bg-blue-50 rounded",children:[e.jsx("div",{className:"font-medium text-blue-800 mb-1",children:"消息订阅"}),e.jsx("div",{className:"text-blue-700",children:"支持按消息类型订阅，只接收感兴趣的消息。"})]}),e.jsxs("div",{className:"p-3 bg-green-50 rounded",children:[e.jsx("div",{className:"font-medium text-green-800 mb-1",children:"动态管理"}),e.jsx("div",{className:"text-green-700",children:"可以随时添加或移除订阅，支持自定义消息类型。"})]}),e.jsxs("div",{className:"p-3 bg-yellow-50 rounded",children:[e.jsx("div",{className:"font-medium text-yellow-800 mb-1",children:"统计监控"}),e.jsx("div",{className:"text-yellow-700",children:"实时显示订阅统计和消息计数，便于监控。"})]}),e.jsxs("div",{className:"p-3 bg-purple-50 rounded",children:[e.jsx("div",{className:"font-medium text-purple-800 mb-1",children:"消息模拟"}),e.jsx("div",{className:"text-purple-700",children:"提供消息模拟功能，便于测试订阅机制。"})]})]})]})]})},W=()=>{const[t,n]=i.useState(null),[s,d]=i.useState(c.CLOSED),[l,x]=i.useState({autoReconnect:!0,reconnectAttempts:5,reconnectInterval:2e3,heartbeatInterval:1e4}),[N,w]=i.useState([]),[p,S]=i.useState(!1),m=i.useCallback(o=>{const r=new Date().toLocaleTimeString();w(g=>[...g,`[${r}] ${o}`])},[]);i.useEffect(()=>{const o=new I({url:"wss://echo.websocket.org",autoReconnect:l.autoReconnect,reconnectAttempts:l.reconnectAttempts,reconnectInterval:l.reconnectInterval,heartbeatInterval:l.heartbeatInterval}),r=o.onStateChange(j=>{d(j);const y={[c.CONNECTING]:"连接中",[c.OPEN]:"已连接",[c.CLOSING]:"关闭中",[c.CLOSED]:"已关闭"};m(`连接状态变更: ${y[j]}`)}),g=o.onError(j=>{m(`连接错误: ${j.type}`)}),C=o.subscribe("heartbeat",()=>{m("发送心跳包")});return n(o),()=>{r(),g(),C(),o.disconnect()}},[l,m]);const b=i.useCallback(o=>{x(r=>({...r,...o}))},[]),k=i.useCallback(async()=>{if(t)try{m("开始连接..."),await t.connect(),m("连接成功")}catch(o){m(`连接失败: ${o.message}`)}},[t,m]),E=i.useCallback(()=>{t&&(m("主动断开连接"),t.disconnect())},[t,m]),M=i.useCallback(()=>{!t||p||(S(!0),m("模拟网络问题 - 强制断开连接"),t.disconnect(),setTimeout(()=>{m("网络问题结束 - 尝试重新连接"),S(!1);const o=new I({url:"ws://localhost:8080",autoReconnect:l.autoReconnect,reconnectAttempts:l.reconnectAttempts,reconnectInterval:l.reconnectInterval,heartbeatInterval:l.heartbeatInterval});o.onStateChange(r=>{d(r);const g={[c.CONNECTING]:"连接中",[c.OPEN]:"已连接",[c.CLOSING]:"关闭中",[c.CLOSED]:"已关闭"};m(`连接状态变更: ${g[r]}`)}),o.onError(r=>{m(`连接错误: ${r.type}`)}),o.subscribe("heartbeat",()=>{m("发送心跳包")}),n(o),o.connect().catch(()=>{m("自动重连失败")})},2e3))},[t,p,l,m]),O=i.useCallback(()=>{w([])},[]);return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-2 gap-6",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"连接控制"}),e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("span",{className:"text-sm font-medium",children:"连接状态:"}),e.jsx("span",{className:`px-2 py-1 rounded text-xs font-medium ${s===c.OPEN?"bg-green-100 text-green-800":s===c.CONNECTING?"bg-yellow-100 text-yellow-800":"bg-red-100 text-red-800"}`,children:s===c.OPEN?"已连接":s===c.CONNECTING?"连接中":"未连接"})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx("button",{onClick:k,disabled:s===c.OPEN,className:"w-full px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"连接"}),e.jsx("button",{onClick:E,disabled:s===c.CLOSED,className:"w-full px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:"断开"}),e.jsx("button",{onClick:M,disabled:s!==c.OPEN||p,className:"w-full px-4 py-2 bg-orange-500 text-white rounded hover:bg-orange-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors",children:p?"模拟中...":"模拟网络问题"})]})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"重连配置"}),e.jsxs("div",{className:"space-y-3",children:[e.jsx("div",{children:e.jsxs("label",{className:"flex items-center space-x-2",children:[e.jsx("input",{type:"checkbox",checked:l.autoReconnect,onChange:o=>b({autoReconnect:o.target.checked}),className:"rounded"}),e.jsx("span",{className:"text-sm",children:"启用自动重连"})]})}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium mb-1",children:["重连次数: ",l.reconnectAttempts]}),e.jsx("input",{type:"range",value:l.reconnectAttempts,onChange:o=>b({reconnectAttempts:parseInt(o.target.value)}),min:"1",max:"10",className:"w-full"})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium mb-1",children:["重连间隔: ",l.reconnectInterval,"ms"]}),e.jsx("input",{type:"range",value:l.reconnectInterval,onChange:o=>b({reconnectInterval:parseInt(o.target.value)}),min:"1000",max:"10000",step:"1000",className:"w-full"})]}),e.jsxs("div",{children:[e.jsxs("label",{className:"block text-sm font-medium mb-1",children:["心跳间隔: ",l.heartbeatInterval,"ms"]}),e.jsx("input",{type:"range",value:l.heartbeatInterval,onChange:o=>b({heartbeatInterval:parseInt(o.target.value)}),min:"5000",max:"30000",step:"5000",className:"w-full"})]})]})]})]}),e.jsxs("div",{children:[e.jsxs("div",{className:"flex items-center justify-between mb-3",children:[e.jsx("h4",{className:"font-medium",children:"连接日志"}),e.jsx("button",{onClick:O,className:"px-3 py-1 text-sm bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors",children:"清空日志"})]}),e.jsx("div",{className:"max-h-96 overflow-y-auto border rounded-lg p-3 bg-gray-50",children:N.length>0?e.jsx("div",{className:"space-y-1",children:N.slice(-50).map((o,r)=>e.jsx("div",{className:"text-xs font-mono p-1 bg-white rounded border",children:o},r))}):e.jsx("div",{className:"text-center text-gray-500 py-4",children:"暂无日志"})})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"功能说明"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm",children:[e.jsxs("div",{className:"p-3 bg-blue-50 rounded",children:[e.jsx("div",{className:"font-medium text-blue-800 mb-1",children:"自动重连"}),e.jsx("div",{className:"text-blue-700",children:"连接断开时自动尝试重新连接，支持配置重连次数和间隔时间。使用指数退避策略避免频繁重连。"})]}),e.jsxs("div",{className:"p-3 bg-green-50 rounded",children:[e.jsx("div",{className:"font-medium text-green-800 mb-1",children:"心跳检测"}),e.jsx("div",{className:"text-green-700",children:"定期发送心跳包检测连接状态，及时发现连接异常。可配置心跳间隔时间。"})]}),e.jsxs("div",{className:"p-3 bg-yellow-50 rounded",children:[e.jsx("div",{className:"font-medium text-yellow-800 mb-1",children:"状态监控"}),e.jsx("div",{className:"text-yellow-700",children:"实时监控连接状态变化，提供详细的连接日志，便于问题诊断和调试。"})]}),e.jsxs("div",{className:"p-3 bg-purple-50 rounded",children:[e.jsx("div",{className:"font-medium text-purple-800 mb-1",children:"网络模拟"}),e.jsx("div",{className:"text-purple-700",children:"提供网络问题模拟功能，测试自动重连机制的可靠性和稳定性。"})]})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-medium mb-3",children:"配置说明"}),e.jsxs("div",{className:"space-y-3 text-sm",children:[e.jsxs("div",{className:"p-3 bg-gray-50 rounded",children:[e.jsx("div",{className:"font-medium mb-1",children:"重连策略"}),e.jsx("div",{className:"text-gray-700",children:"使用指数退避算法：第1次重连间隔为配置值，第2次为2倍，第3次为4倍，以此类推。 这样可以避免网络问题时的频繁重连，减少服务器压力。"})]}),e.jsxs("div",{className:"p-3 bg-gray-50 rounded",children:[e.jsx("div",{className:"font-medium mb-1",children:"心跳机制"}),e.jsx("div",{className:"text-gray-700",children:"定期发送心跳包维持连接活跃状态，防止代理服务器或防火墙关闭空闲连接。 心跳间隔不宜过短，建议5-30秒之间。"})]}),e.jsxs("div",{className:"p-3 bg-gray-50 rounded",children:[e.jsx("div",{className:"font-medium mb-1",children:"重连限制"}),e.jsx("div",{className:"text-gray-700",children:"设置最大重连次数避免无限重连，当达到最大次数后停止重连。 可以通过手动连接或重新初始化管理器来重置重连计数。"})]})]})]})]})},A=[{title:"核心概念",items:["WebSocket协议：基于TCP的全双工通信协议，支持实时数据传输","连接管理：自动连接、断开检测、状态监控和错误处理","消息系统：类型化消息、订阅机制和消息队列管理","自动重连：网络异常时的自动重连机制和策略配置","心跳检测：定期发送心跳包维持连接活跃状态"]},{title:"主要优势",items:["实时双向通信，延迟极低","完善的连接管理和错误恢复机制","灵活的消息订阅和分发系统","自动重连和心跳检测保证连接稳定","支持消息历史记录和状态监控"]},{title:"适用场景",items:["实时聊天和即时通讯应用","实时数据推送和通知系统","在线协作和多人编辑工具","实时监控和数据可视化","在线游戏和实时交互应用"]},{title:"注意事项",items:["演示使用 echo.websocket.org 免费测试服务器，仅用于学习目的","WebSocket连接需要服务器端支持","移动网络环境下连接可能不稳定","需要处理连接断开和重连逻辑","消息顺序和可靠性需要应用层保证","防火墙和代理可能影响连接"]}],q=()=>e.jsx(D,{title:"WebSocket集成 (WebSocket Integration)",description:"实时双向通信的WebSocket连接管理和消息处理系统",overview:A,examples:[{title:"基础WebSocket连接",component:e.jsx(T,{}),description:"展示WebSocket的基本连接、消息发送和接收功能",observationPoints:["观察连接状态的实时变化","注意消息的发送和接收过程","查看消息历史记录的格式","观察连接失败时的错误处理"],keyPoints:["WebSocket提供全双工通信能力","连接状态需要实时监控和处理","消息格式需要统一和标准化","支持多种类型的消息传输"],commonTraps:["未处理连接断开的情况","消息格式不统一导致解析错误","忽略连接状态检查直接发送消息","未实现错误处理和重试机制"],solutions:["实现完善的连接状态管理","定义统一的消息格式和协议","发送消息前检查连接状态","添加错误处理和自动重连机制"]},{title:"消息订阅管理",component:e.jsx(R,{}),description:"展示基于消息类型的订阅和分发机制",observationPoints:["观察不同消息类型的订阅过程","注意消息分发到对应订阅者","查看订阅统计和消息计数","观察取消订阅的清理过程"],keyPoints:["支持按消息类型进行订阅","自动分发消息到对应订阅者","提供订阅管理和统计功能","支持动态添加和移除订阅"],importantTips:["订阅者需要及时清理避免内存泄漏","消息类型要有明确的命名规范","支持一个消息类型多个订阅者","订阅统计有助于监控系统状态"]},{title:"自动重连机制",component:e.jsx(W,{}),description:"展示网络异常时的自动重连和心跳检测功能",observationPoints:["观察网络问题模拟的重连过程","注意重连配置参数的影响","查看连接日志的详细记录","观察心跳检测的工作机制"],keyPoints:["自动检测连接断开并尝试重连","支持配置重连次数和间隔时间","心跳检测维持连接活跃状态","详细的连接日志便于问题诊断"],importantTips:["重连间隔要合理避免频繁重连","心跳间隔要平衡性能和及时性","重连次数限制防止无限重连","连接日志有助于问题排查"]}],tutorial:{concepts:["WebSocket 提供全双工、低延迟的实时通信能力，适合需要服务器与客户端频繁交互的场景","连接管理包括自动重连、心跳检测、状态监控和错误处理，保证连接稳定性","消息系统支持类型化消息、订阅机制和消息队列，便于扩展和维护","自动重连和心跳机制提升了网络异常下的可用性和用户体验","需要注意消息顺序、可靠性和安全性，部分需应用层实现保障"],steps:["创建 WebSocket 客户端实例，配置连接地址和参数","实现连接状态管理，包括连接、断开、重连等状态的监听和处理","定义统一的消息格式和协议，支持多种类型的消息传输","实现消息订阅和分发机制，支持动态添加和移除订阅者","添加自动重连和心跳检测机制，提升连接的稳定性","处理网络异常、错误和断开事件，保证系统健壮性","集成消息历史记录和状态监控，便于调试和运维"],tips:["发送消息前应检查连接状态，避免丢失消息","合理设置重连和心跳间隔，避免频繁重连或超时断开","为每种消息类型定义清晰的接口和处理逻辑","在组件卸载时及时关闭连接和清理订阅，防止内存泄漏","记录连接日志和错误信息，便于问题排查和优化"]},interview:{questions:[{question:"WebSocket 与 HTTP 长轮询、SSE 有什么区别？",answer:"WebSocket 支持全双工通信，客户端和服务器都可以主动发送消息，延迟低，适合高频实时场景。HTTP 长轮询和 SSE 都是单向通信，主要用于服务器推送，实时性和效率不如 WebSocket。WebSocket 需要专门的服务器支持，SSE 基于 HTTP，兼容性更好。"},{question:"如何实现 WebSocket 的自动重连和心跳检测？",answer:"自动重连：监听连接断开事件，使用定时器或指数退避策略尝试重连。心跳检测：定期发送 ping/pong 或自定义心跳消息，检测连接是否存活，及时发现断线。两者结合可提升连接的稳定性和用户体验。"},{question:"WebSocket 消息顺序和可靠性如何保证？",answer:"WebSocket 本身保证消息有序传输，但网络异常或重连后可能丢失消息。应用层可为每条消息添加序号、时间戳，客户端检测丢包并请求补发，或采用消息队列和持久化机制提升可靠性。"},{question:"WebSocket 在生产环境部署需要注意哪些问题？",answer:"1) 服务器和代理需支持 WebSocket 协议升级；2) 需限制最大连接数和资源消耗，防止被滥用；3) 处理移动端网络切换和断线重连；4) 实现安全认证和权限校验，防止未授权访问；5) 日志和监控，便于排查问题。"}],keyPoints:["WebSocket 适合高频、低延迟的实时通信场景","自动重连和心跳检测是连接管理的关键","消息顺序和可靠性需应用层保障","生产环境需关注安全、资源和监控等问题"]},bestPractices:{dos:["为每种消息类型定义清晰的接口和处理逻辑","实现自动重连和心跳检测机制","在组件卸载时关闭连接和清理订阅","记录连接日志和错误信息，便于排查","合理设置重连和心跳间隔，平衡性能和实时性","为高频消息场景做节流或批量处理"],donts:["不要忽略连接断开和异常处理","不要在未连接状态下发送消息","不要让消息处理逻辑阻塞主线程","不要忽略安全认证和权限校验","不要无限制重连，避免资源浪费"],patterns:["消息订阅模式：按类型分发和管理消息","自动重连模式：断线后定时或指数退避重连","心跳检测模式：定期发送心跳包检测连接状态","日志监控模式：记录连接和消息日志，便于运维","批量处理模式：高频消息合并处理，提升性能"]}});export{q as default};
