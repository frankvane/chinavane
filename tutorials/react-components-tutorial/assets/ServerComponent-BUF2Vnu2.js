import{j as e,r as t}from"./index-B_BA6J2H.js";import{C as v}from"./ComponentTemplate-CRmS-rAK.js";const h=i=>{const s=t.useRef(0);return t.useEffect(()=>{s.current+=1,console.log(`${i} 渲染次数:`,s.current)}),s.current},p=async(i,s=1e3)=>{switch(await new Promise(d=>setTimeout(d,s)),i){case"/api/users":return{users:Array.from({length:10},(d,a)=>({id:a+1,name:`用户 ${a+1}`,email:`user${a+1}@example.com`,avatar:`https://api.dicebear.com/7.x/avataaars/svg?seed=${a+1}`,role:["admin","user","moderator"][a%3],lastActive:new Date(Date.now()-Math.random()*7*24*60*60*1e3).toISOString()})),total:10,page:1};case"/api/posts":return{posts:Array.from({length:8},(d,a)=>({id:a+1,title:`文章标题 ${a+1}`,content:`这是文章 ${a+1} 的内容摘要。包含了一些有趣的信息和见解...`,author:`作者 ${a+1}`,publishedAt:new Date(Date.now()-Math.random()*30*24*60*60*1e3).toISOString(),tags:["React","JavaScript","Web开发","前端"][Math.floor(Math.random()*4)],likes:Math.floor(Math.random()*100),comments:Math.floor(Math.random()*20)})),total:8};case"/api/analytics":return{pageViews:Math.floor(Math.random()*1e4)+5e3,uniqueVisitors:Math.floor(Math.random()*3e3)+1e3,bounceRate:(Math.random()*.3+.2).toFixed(2),avgSessionDuration:Math.floor(Math.random()*300)+120,topPages:[{path:"/",views:Math.floor(Math.random()*1e3)+500},{path:"/about",views:Math.floor(Math.random()*500)+200},{path:"/contact",views:Math.floor(Math.random()*300)+100}],recentActivity:Array.from({length:5},(d,a)=>({id:a+1,action:["页面访问","用户注册","文章发布","评论提交"][Math.floor(Math.random()*4)],timestamp:new Date(Date.now()-Math.random()*60*60*1e3).toISOString(),user:`用户${Math.floor(Math.random()*100)+1}`}))};default:throw new Error(`Unknown endpoint: ${i}`)}},y=t.memo(()=>{const i=h("ServerUserList"),[s,d]=t.useState(null),[a,o]=t.useState(!0),[r,m]=t.useState(null);return t.useEffect(()=>{console.log("ServerUserList: 开始获取用户数据"),p("/api/users",1500).then(l=>{console.log("ServerUserList: 用户数据获取成功",l),d(l),o(!1)}).catch(l=>{console.error("ServerUserList: 用户数据获取失败",l),m(l.message),o(!1)})},[]),a?e.jsxs("div",{className:"space-y-4",children:[e.jsx("div",{className:"text-sm text-blue-600 mb-2",children:"🔄 服务端数据加载中..."}),Array.from({length:3},(l,c)=>e.jsx("div",{className:"animate-pulse",children:e.jsxs("div",{className:"flex items-center space-x-4 p-4 bg-gray-50 rounded-lg",children:[e.jsx("div",{className:"w-12 h-12 bg-gray-300 rounded-full"}),e.jsxs("div",{className:"flex-1 space-y-2",children:[e.jsx("div",{className:"h-4 bg-gray-300 rounded w-1/4"}),e.jsx("div",{className:"h-3 bg-gray-300 rounded w-1/2"})]})]})},c))]}):r?e.jsx("div",{className:"p-4 bg-red-50 border border-red-200 rounded-lg",children:e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("div",{className:"text-red-600",children:"❌"}),e.jsxs("div",{children:[e.jsx("h3",{className:"font-semibold text-red-800",children:"服务端数据加载失败"}),e.jsx("p",{className:"text-red-600",children:r})]})]})}):e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("h3",{className:"font-semibold text-gray-800",children:"用户列表 (服务端渲染)"}),e.jsxs("span",{className:"text-sm text-gray-500",children:["共 ",s.total," 个用户 | 渲染: ",i]})]}),e.jsx("div",{className:"grid gap-4",children:s.users.map(l=>e.jsxs("div",{className:"flex items-center space-x-4 p-4 bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow",children:[e.jsx("img",{src:l.avatar,alt:l.name,className:"w-12 h-12 rounded-full bg-gray-200",onLoad:()=>console.log(`头像加载完成: ${l.name}`)}),e.jsxs("div",{className:"flex-1",children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("h4",{className:"font-medium text-gray-800",children:l.name}),e.jsx("span",{className:`text-xs px-2 py-1 rounded ${l.role==="admin"?"bg-red-100 text-red-800":l.role==="moderator"?"bg-blue-100 text-blue-800":"bg-gray-100 text-gray-800"}`,children:l.role})]}),e.jsx("p",{className:"text-sm text-gray-600",children:l.email}),e.jsxs("p",{className:"text-xs text-gray-500",children:["最后活跃: ",new Date(l.lastActive).toLocaleDateString()]})]})]},l.id))}),e.jsx("div",{className:"p-3 bg-green-50 border border-green-200 rounded-lg",children:e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("div",{className:"text-green-600",children:"🚀"}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold text-green-800",children:"服务端渲染优势"}),e.jsx("p",{className:"text-sm text-green-700",children:"数据在服务端预取，首屏加载更快，SEO友好"})]})]})})]})}),N=t.memo(()=>{const i=h("ServerPostList"),[s,d]=t.useState(null),[a,o]=t.useState(!0);return t.useEffect(()=>{console.log("ServerPostList: 开始获取文章数据"),p("/api/posts",1200).then(r=>{console.log("ServerPostList: 文章数据获取成功",r),d(r),o(!1)}).catch(r=>{console.error("ServerPostList: 文章数据获取失败",r),o(!1)})},[]),a?e.jsxs("div",{className:"space-y-4",children:[e.jsx("div",{className:"text-sm text-blue-600 mb-2",children:"📝 服务端文章加载中..."}),Array.from({length:4},(r,m)=>e.jsxs("div",{className:"animate-pulse p-4 bg-gray-50 rounded-lg",children:[e.jsx("div",{className:"h-4 bg-gray-300 rounded w-3/4 mb-2"}),e.jsx("div",{className:"h-3 bg-gray-300 rounded w-full mb-2"}),e.jsx("div",{className:"h-3 bg-gray-300 rounded w-2/3"})]},m))]}):e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("h3",{className:"font-semibold text-gray-800",children:"最新文章 (服务端渲染)"}),e.jsxs("span",{className:"text-sm text-gray-500",children:["渲染: ",i]})]}),e.jsx("div",{className:"grid gap-4",children:s==null?void 0:s.posts.map(r=>e.jsxs("article",{className:"p-4 bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-md transition-shadow",children:[e.jsxs("div",{className:"flex justify-between items-start mb-2",children:[e.jsx("h4",{className:"font-medium text-gray-800 hover:text-blue-600 cursor-pointer",onClick:()=>console.log(`点击文章: ${r.title}`),children:r.title}),e.jsx("span",{className:"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded",children:r.tags})]}),e.jsx("p",{className:"text-sm text-gray-600 mb-3",children:r.content}),e.jsxs("div",{className:"flex items-center justify-between text-xs text-gray-500",children:[e.jsxs("div",{className:"flex items-center space-x-4",children:[e.jsxs("span",{children:["作者: ",r.author]}),e.jsx("span",{children:new Date(r.publishedAt).toLocaleDateString()})]}),e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsxs("span",{className:"flex items-center space-x-1",children:[e.jsx("span",{children:"👍"}),e.jsx("span",{children:r.likes})]}),e.jsxs("span",{className:"flex items-center space-x-1",children:[e.jsx("span",{children:"💬"}),e.jsx("span",{children:r.comments})]})]})]})]},r.id))})]})}),f=t.memo(()=>{const i=h("ServerAnalytics"),[s,d]=t.useState(null),[a,o]=t.useState(!0);return t.useEffect(()=>{console.log("ServerAnalytics: 开始获取分析数据"),p("/api/analytics",800).then(r=>{console.log("ServerAnalytics: 分析数据获取成功",r),d(r),o(!1)}).catch(r=>{console.error("ServerAnalytics: 分析数据获取失败",r),o(!1)})},[]),a?e.jsxs("div",{className:"space-y-4",children:[e.jsx("div",{className:"text-sm text-blue-600 mb-2",children:"📊 服务端分析数据加载中..."}),e.jsx("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:Array.from({length:4},(r,m)=>e.jsxs("div",{className:"animate-pulse p-4 bg-gray-50 rounded-lg",children:[e.jsx("div",{className:"h-8 bg-gray-300 rounded mb-2"}),e.jsx("div",{className:"h-4 bg-gray-300 rounded w-2/3"})]},m))})]}):e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("h3",{className:"font-semibold text-gray-800",children:"网站分析 (服务端渲染)"}),e.jsxs("span",{className:"text-sm text-gray-500",children:["渲染: ",i]})]}),e.jsxs("div",{className:"grid grid-cols-2 md:grid-cols-4 gap-4",children:[e.jsxs("div",{className:"p-4 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-shadow",onClick:()=>console.log("点击页面浏览量卡片"),children:[e.jsx("div",{className:"text-2xl font-bold text-blue-600",children:s==null?void 0:s.pageViews.toLocaleString()}),e.jsx("div",{className:"text-sm text-gray-600",children:"页面浏览量"})]}),e.jsxs("div",{className:"p-4 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-shadow",onClick:()=>console.log("点击独立访客卡片"),children:[e.jsx("div",{className:"text-2xl font-bold text-green-600",children:s==null?void 0:s.uniqueVisitors.toLocaleString()}),e.jsx("div",{className:"text-sm text-gray-600",children:"独立访客"})]}),e.jsxs("div",{className:"p-4 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-shadow",children:[e.jsxs("div",{className:"text-2xl font-bold text-orange-600",children:[s==null?void 0:s.bounceRate,"%"]}),e.jsx("div",{className:"text-sm text-gray-600",children:"跳出率"})]}),e.jsxs("div",{className:"p-4 bg-white border border-gray-200 rounded-lg hover:shadow-md transition-shadow",children:[e.jsxs("div",{className:"text-2xl font-bold text-purple-600",children:[s==null?void 0:s.avgSessionDuration,"s"]}),e.jsx("div",{className:"text-sm text-gray-600",children:"平均会话时长"})]})]}),e.jsxs("div",{className:"p-4 bg-white border border-gray-200 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-gray-800 mb-3",children:"热门页面"}),e.jsx("div",{className:"space-y-2",children:s==null?void 0:s.topPages.map((r,m)=>e.jsxs("div",{className:"flex justify-between items-center hover:bg-gray-50 p-2 rounded",onClick:()=>console.log(`点击热门页面: ${r.path}`),children:[e.jsx("span",{className:"text-sm text-gray-600",children:r.path}),e.jsxs("span",{className:"text-sm font-medium text-gray-800",children:[r.views.toLocaleString()," 次访问"]})]},r.path))})]}),e.jsxs("div",{className:"p-4 bg-white border border-gray-200 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-gray-800 mb-3",children:"最近活动"}),e.jsx("div",{className:"space-y-2",children:s==null?void 0:s.recentActivity.map(r=>e.jsxs("div",{className:"flex justify-between items-center text-sm hover:bg-gray-50 p-2 rounded",onClick:()=>console.log(`点击活动: ${r.action} by ${r.user}`),children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("span",{className:"text-gray-600",children:r.action}),e.jsxs("span",{className:"text-gray-500",children:["by ",r.user]})]}),e.jsx("span",{className:"text-gray-500",children:new Date(r.timestamp).toLocaleTimeString()})]},r.id))})]})]})}),S=()=>{const i=h("BasicServerComponentExample"),[s,d]=t.useState("users"),[a,o]=t.useState(0),r=t.useCallback(()=>{console.log("刷新服务端组件数据"),o(c=>c+1)},[]),m=t.useCallback(c=>{console.log(`切换到标签页: ${c}`),d(c)},[]),l=t.useMemo(()=>[{key:"users",label:"用户列表",icon:"👥"},{key:"posts",label:"文章列表",icon:"📝"},{key:"analytics",label:"数据分析",icon:"📊"}],[]);return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"text-sm text-gray-500 mb-2",children:["渲染次数: ",i]}),e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("div",{className:"flex space-x-1 bg-gray-100 p-1 rounded-lg",children:l.map(c=>e.jsxs("button",{onClick:()=>m(c.key),className:`flex items-center space-x-2 px-4 py-2 rounded-md text-sm font-medium transition-colors ${s===c.key?"bg-white text-blue-600 shadow-sm":"text-gray-600 hover:text-gray-800"}`,children:[e.jsx("span",{children:c.icon}),e.jsx("span",{children:c.label})]},c.key))}),e.jsxs("button",{onClick:r,className:"flex items-center space-x-2 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm transition-colors",children:[e.jsx("span",{children:"🔄"}),e.jsx("span",{children:"刷新"})]})]}),e.jsx("div",{className:"min-h-96",children:e.jsxs(t.Suspense,{fallback:e.jsx("div",{className:"flex items-center justify-center py-12",children:e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsx("div",{className:"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600"}),e.jsx("span",{className:"text-gray-600",children:"加载服务端数据中..."})]})}),children:[s==="users"&&e.jsx(y,{},`users-${a}`),s==="posts"&&e.jsx(N,{},`posts-${a}`),s==="analytics"&&e.jsx(f,{},`analytics-${a}`)]})}),e.jsxs("div",{className:"p-4 bg-blue-50 border border-blue-200 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-blue-800 mb-2",children:"服务端组件特点"}),e.jsxs("ul",{className:"text-sm text-blue-700 space-y-1",children:[e.jsx("li",{children:"• 在服务端执行，减少客户端JavaScript包大小"}),e.jsx("li",{children:"• 可以直接访问服务端资源（数据库、文件系统等）"}),e.jsx("li",{children:"• 提供更好的SEO和首屏加载性能"}),e.jsx("li",{children:"• 与客户端组件可以无缝集成"})]})]})]})},w=()=>{const i=h("HybridRenderingExample"),[s,d]=t.useState(null),[a,o]=t.useState(0),[r,m]=t.useState(null);t.useEffect(()=>{console.log("HybridRenderingExample: 获取客户端数据");const x=setTimeout(()=>{const n={timestamp:new Date().toISOString(),sessionId:Math.random().toString(36).substr(2,9),userAgent:navigator.userAgent.split(" ")[0],screenSize:`${window.screen.width}x${window.screen.height}`,timezone:Intl.DateTimeFormat().resolvedOptions().timeZone};console.log("HybridRenderingExample: 客户端数据获取完成",n),d(n)},500);return()=>clearTimeout(x)},[a]);const l=t.useCallback(()=>{console.log("HybridRenderingExample: 客户端交互触发"),o(x=>x+1)},[]),c=t.useCallback(x=>{console.log(`HybridRenderingExample: 选择用户 ${x}`),m(x===r?null:x)},[r]);return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"text-sm text-gray-500 mb-2",children:["渲染次数: ",i]}),e.jsxs("div",{className:"grid md:grid-cols-2 gap-6",children:[e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("div",{className:"w-3 h-3 bg-green-500 rounded-full"}),e.jsx("h3",{className:"font-semibold text-gray-800",children:"服务端渲染内容"})]}),e.jsx(t.Suspense,{fallback:e.jsx("div",{className:"animate-pulse space-y-3",children:Array.from({length:3},(x,n)=>e.jsx("div",{className:"h-16 bg-gray-200 rounded"},n))}),children:e.jsx("div",{className:"space-y-3",children:Array.from({length:5},(x,n)=>e.jsxs("div",{onClick:()=>c(n),className:`p-3 border rounded-lg cursor-pointer transition-colors ${r===n?"border-blue-500 bg-blue-50":"border-gray-200 hover:border-gray-300"}`,children:[e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsx("div",{className:"w-8 h-8 bg-gray-300 rounded-full"}),e.jsxs("div",{children:[e.jsxs("div",{className:"font-medium text-gray-800",children:["服务端用户 ",n+1]}),e.jsxs("div",{className:"text-sm text-gray-600",children:["user",n+1,"@server.com"]})]})]}),r===n&&e.jsx("div",{className:"mt-2 p-2 bg-white rounded text-sm",children:e.jsx("p",{className:"text-gray-600",children:"这是服务端预渲染的用户详情信息..."})})]},n))})})]}),e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("div",{className:"w-3 h-3 bg-blue-500 rounded-full"}),e.jsx("h3",{className:"font-semibold text-gray-800",children:"客户端交互内容"})]}),e.jsxs("div",{className:"space-y-3",children:[e.jsxs("button",{onClick:l,className:"w-full px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors",children:["客户端交互 (点击次数: ",a,")"]}),s?e.jsxs("div",{className:"p-4 bg-gray-50 border border-gray-200 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-gray-800 mb-2",children:"客户端信息"}),e.jsxs("div",{className:"space-y-1 text-sm text-gray-600",children:[e.jsxs("div",{children:["时间戳: ",new Date(s.timestamp).toLocaleString()]}),e.jsxs("div",{children:["会话ID: ",s.sessionId]}),e.jsxs("div",{children:["浏览器: ",s.userAgent]}),e.jsxs("div",{children:["屏幕尺寸: ",s.screenSize]}),e.jsxs("div",{children:["时区: ",s.timezone]})]})]}):e.jsx("div",{className:"p-4 bg-gray-50 border border-gray-200 rounded-lg",children:e.jsxs("div",{className:"animate-pulse",children:[e.jsx("div",{className:"h-4 bg-gray-300 rounded mb-2"}),e.jsx("div",{className:"h-3 bg-gray-300 rounded mb-1"}),e.jsx("div",{className:"h-3 bg-gray-300 rounded mb-1"}),e.jsx("div",{className:"h-3 bg-gray-300 rounded"})]})}),e.jsxs("div",{className:"p-3 bg-yellow-50 border border-yellow-200 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-yellow-800 mb-1",children:"实时状态"}),e.jsxs("div",{className:"text-sm text-yellow-700",children:[e.jsxs("div",{children:["当前时间: ",new Date().toLocaleTimeString()]}),e.jsxs("div",{children:["交互次数: ",a]}),e.jsxs("div",{children:["选中用户: ",r!==null?`用户 ${r+1}`:"无"]})]})]})]})]})]}),e.jsxs("div",{className:"p-4 bg-purple-50 border border-purple-200 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-purple-800 mb-2",children:"混合渲染优势"}),e.jsxs("ul",{className:"text-sm text-purple-700 space-y-1",children:[e.jsx("li",{children:"• 服务端组件提供快速的首屏加载和SEO优化"}),e.jsx("li",{children:"• 客户端组件处理用户交互和动态状态"}),e.jsx("li",{children:"• 两者可以无缝集成，各自发挥优势"}),e.jsx("li",{children:"• 减少客户端JavaScript包大小"})]})]})]})},C=()=>{const i=h("PerformanceComparisonExample"),[s,d]=t.useState("server"),[a,o]=t.useState(0),[r,m]=t.useState(0),l=t.useCallback(n=>{console.log(`PerformanceComparisonExample: 切换渲染模式到 ${n}`);const g=performance.now();d(n),setTimeout(()=>{const j=performance.now()-g;console.log(`PerformanceComparisonExample: ${n} 模式加载完成，耗时 ${j.toFixed(2)}ms`),o(j);const b={server:Math.random()*50+20,client:Math.random()*200+100,hybrid:Math.random()*100+50};m(b[n])},Math.random()*1e3+500)},[]),c=t.useMemo(()=>[{key:"server",label:"服务端渲染",icon:"🖥️",description:"在服务端预渲染，快速首屏加载",pros:["首屏加载快","SEO友好","减少客户端负担"],cons:["服务端压力大","交互性有限"]},{key:"client",label:"客户端渲染",icon:"💻",description:"在客户端动态渲染，交互更强",pros:["交互更强","动态更新","服务端压力小"],cons:["首屏加载慢","SEO不友好","客户端负担重"]},{key:"hybrid",label:"混合渲染",icon:"🔄",description:"结合两者优势，平衡性能和交互",pros:["平衡性能","灵活性高","最佳用户体验"],cons:["复杂度高","需要精心设计"]}],[]),x=c.find(n=>n.key===s);return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"text-sm text-gray-500 mb-2",children:["渲染次数: ",i]}),e.jsx("div",{className:"grid md:grid-cols-3 gap-4",children:c.map(n=>e.jsxs("div",{onClick:()=>l(n.key),className:`p-4 border rounded-lg cursor-pointer transition-all ${s===n.key?"border-blue-500 bg-blue-50 shadow-md":"border-gray-200 hover:border-gray-300 hover:shadow-sm"}`,children:[e.jsxs("div",{className:"flex items-center space-x-2 mb-2",children:[e.jsx("span",{className:"text-2xl",children:n.icon}),e.jsx("h3",{className:"font-semibold text-gray-800",children:n.label})]}),e.jsx("p",{className:"text-sm text-gray-600 mb-3",children:n.description}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"text-xs font-semibold text-green-700 mb-1",children:"优势:"}),e.jsx("ul",{className:"text-xs text-green-600 space-y-1",children:n.pros.map((g,u)=>e.jsxs("li",{children:["• ",g]},u))})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"text-xs font-semibold text-red-700 mb-1",children:"劣势:"}),e.jsx("ul",{className:"text-xs text-red-600 space-y-1",children:n.cons.map((g,u)=>e.jsxs("li",{children:["• ",g]},u))})]})]})]},n.key))}),e.jsxs("div",{className:"p-4 bg-white border border-gray-200 rounded-lg",children:[e.jsxs("h3",{className:"font-semibold text-gray-800 mb-4",children:["当前模式: ",x.label]}),e.jsxs("div",{className:"grid md:grid-cols-4 gap-4",children:[e.jsxs("div",{className:"text-center",children:[e.jsxs("div",{className:"text-2xl font-bold text-blue-600",children:[a.toFixed(2),"ms"]}),e.jsx("div",{className:"text-sm text-gray-600",children:"加载时间"})]}),e.jsxs("div",{className:"text-center",children:[e.jsxs("div",{className:"text-2xl font-bold text-green-600",children:[r.toFixed(1),"KB"]}),e.jsx("div",{className:"text-sm text-gray-600",children:"数据大小"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-orange-600",children:s==="server"?"95":s==="client"?"75":"88"}),e.jsx("div",{className:"text-sm text-gray-600",children:"SEO分数"})]}),e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"text-2xl font-bold text-purple-600",children:s==="server"?"70":s==="client"?"95":"85"}),e.jsx("div",{className:"text-sm text-gray-600",children:"交互性分数"})]})]}),e.jsxs("div",{className:"mt-4 p-3 bg-gray-50 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-gray-800 mb-2",children:"性能建议"}),e.jsxs("p",{className:"text-sm text-gray-600",children:[s==="server"&&"适合内容展示和SEO要求高的页面，建议配合客户端组件处理交互。",s==="client"&&"适合交互密集的应用，建议优化首屏加载和SEO。",s==="hybrid"&&"最佳实践：静态内容使用服务端渲染，动态交互使用客户端渲染。"]})]})]}),e.jsxs("div",{className:"p-4 bg-indigo-50 border border-indigo-200 rounded-lg",children:[e.jsx("h4",{className:"font-semibold text-indigo-800 mb-2",children:"性能优化要点"}),e.jsxs("ul",{className:"text-sm text-indigo-700 space-y-1",children:[e.jsx("li",{children:"• 根据内容特性选择合适的渲染模式"}),e.jsx("li",{children:"• 使用Suspense和流式渲染优化用户体验"}),e.jsx("li",{children:"• 实现适当的缓存策略减少服务端压力"}),e.jsx("li",{children:"• 监控和分析不同模式的性能表现"})]})]})]})},k=()=>{const i={title:"服务端组件 (Server Components)",description:"React服务端组件是在服务器上渲染的组件，可以直接访问服务端资源，提供更好的性能和SEO。注意：本示例为教学演示，真正的服务端组件需要Next.js等支持的框架。",overview:e.jsxs("div",{className:"space-y-4",children:[e.jsxs("div",{children:[e.jsx("h3",{className:"text-lg font-semibold mb-2",children:"核心概念"}),e.jsx("p",{className:"text-gray-700",children:"服务端组件是React的新特性，允许组件在服务器上执行和渲染，然后将结果发送到客户端。 这种方式可以减少客户端JavaScript包的大小，提高首屏加载速度，并提供更好的SEO支持。"}),e.jsx("div",{className:"mt-4 p-4 bg-yellow-50 border-l-4 border-yellow-400",children:e.jsxs("p",{className:"text-sm text-yellow-800",children:[e.jsx("strong",{children:"重要说明："}),"本示例运行在客户端，仅用于演示服务端组件的概念和API。 真正的React服务端组件需要支持的框架（如Next.js 13+ App Router、Remix等）才能在服务器上执行。 在这些框架中，服务端组件文件通常没有特殊标识，而是通过文件位置和导入方式来区分。"]})})]}),e.jsxs("div",{children:[e.jsx("h3",{className:"text-lg font-semibold mb-2",children:"主要优势"}),e.jsxs("ul",{className:"list-disc list-inside space-y-1 text-gray-700",children:[e.jsx("li",{children:"性能优化 - 在服务端执行，减少客户端JavaScript包大小"}),e.jsx("li",{children:"直接访问 - 可以直接访问服务端资源（数据库、文件系统、API）"}),e.jsx("li",{children:"SEO友好 - 提供更好的SEO和首屏加载性能"}),e.jsx("li",{children:"无缝集成 - 与客户端组件可以无缝集成"}),e.jsx("li",{children:"流式渲染 - 支持流式渲染和Suspense"})]})]}),e.jsxs("div",{children:[e.jsx("h3",{className:"text-lg font-semibold mb-2",children:"适用场景"}),e.jsxs("ul",{className:"list-disc list-inside space-y-1 text-gray-700",children:[e.jsx("li",{children:"数据展示 - 数据密集型页面和仪表板"}),e.jsx("li",{children:"内容管理 - 内容管理系统和博客"}),e.jsx("li",{children:"电商应用 - 产品列表和详情页"}),e.jsx("li",{children:"SEO页面 - 需要SEO优化的页面"}),e.jsx("li",{children:"静态内容 - 大量静态内容的展示"})]})]}),e.jsxs("div",{children:[e.jsx("h3",{className:"text-lg font-semibold mb-2",children:"注意事项"}),e.jsxs("ul",{className:"list-disc list-inside space-y-1 text-gray-700",children:[e.jsx("li",{children:"框架依赖 - 需要Next.js、Remix等支持服务端组件的框架"}),e.jsx("li",{children:"API限制 - 服务端组件不能使用客户端特有的API"}),e.jsx("li",{children:"职责划分 - 需要合理划分服务端和客户端组件的职责"}),e.jsx("li",{children:"性能考虑 - 要考虑服务端渲染对服务器性能的影响"}),e.jsx("li",{children:"缓存策略 - 需要实现适当的缓存策略"}),e.jsx("li",{children:"错误处理 - 要实现优雅的错误处理和降级方案"})]}),e.jsx("div",{className:"mt-4 p-4 bg-blue-50 border-l-4 border-blue-400",children:e.jsxs("p",{className:"text-sm text-blue-800",children:[e.jsx("strong",{children:"框架区别："}),e.jsx("br",{}),"• ",e.jsx("strong",{children:"Next.js："}),"在app目录下，默认为服务端组件，需要'use client'指令标识客户端组件",e.jsx("br",{}),"• ",e.jsx("strong",{children:"纯React："}),"所有组件都在客户端运行，无原生服务端组件支持",e.jsx("br",{}),"• ",e.jsx("strong",{children:"Remix："}),"通过loader函数在服务端获取数据，组件在客户端渲染"]})})]})]}),examples:[{title:"示例1：基础服务端组件",description:"展示服务端组件的基本用法，包括数据获取、渲染和Suspense处理",component:e.jsx(S,{}),observationPoints:["服务端组件在服务器上执行数据获取和渲染","使用Suspense处理异步数据加载状态","提供加载状态和错误处理的用户体验","支持数据刷新和标签页切换功能"],keyPoints:["服务端组件在服务器上执行，可以直接访问服务端资源","服务端组件不能使用浏览器API和事件处理器","Suspense提供优雅的异步加载和错误处理","混合渲染可以结合两种组件的优势","性能优化需要基于实际测量和监控数据"],codeExample:{title:"基础服务端组件实现",code:`// 服务端组件示例
const ServerUserList: React.FC = memo(() => {
  const renderCount = useRenderCount('ServerUserList'); // ← 重点：渲染计数
  const [users, setUsers] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  const loadUsers = useCallback(async () => {
    try {
      setLoading(true);
      setError(null);
      const data = await fetchServerData('/api/users', 800); // ← 重点：服务端数据获取
      setUsers(data.users);
    } catch (err) {
      setError('加载用户数据失败');
    } finally {
      setLoading(false);
    }
  }, []);

  useEffect(() => {
    loadUsers(); // ← 重点：组件挂载时加载数据
  }, [loadUsers]);

  if (loading) return <div>加载中...</div>;
  if (error) return <div>错误: {error}</div>;

  return (
    <Suspense fallback={<div>加载用户列表...</div>}> {/* ← 重点：Suspense处理 */}
      <div className="space-y-4">
        {users.map(user => (
          <div key={user.id} className="p-4 border rounded">
            <h4>{user.name}</h4>
            <p>{user.email}</p>
          </div>
        ))}
      </div>
    </Suspense>
  );
});`,language:"tsx",highlights:[3,9,16,25,31]}},{title:"示例2：混合渲染应用",description:"展示服务端组件与客户端组件的混合使用，实现最佳性能",component:e.jsx(w,{}),observationPoints:["静态内容使用服务端组件渲染，提高首屏加载速度","交互功能使用客户端组件，保持良好的用户体验","合理的组件分离和数据流管理","性能监控和渲染模式切换功能"],keyPoints:["混合渲染结合了服务端和客户端组件的优势","静态内容适合服务端渲染，动态交互适合客户端渲染","需要合理设计组件边界和数据传递","性能监控帮助优化渲染策略"],codeExample:{title:"混合渲染实现",code:`// 混合渲染示例
const HybridRenderingExample: React.FC = () => {
  const [renderMode, setRenderMode] = useState<'server' | 'client' | 'hybrid'>('hybrid'); // ← 重点：渲染模式状态
  const [performanceData, setPerformanceData] = useState<any>(null);

  const measurePerformance = useCallback(() => {
    const startTime = performance.now(); // ← 重点：性能测量开始
    
    setTimeout(() => {
      const endTime = performance.now();
      const renderTime = endTime - startTime;
      
      setPerformanceData({
        renderTime: renderTime.toFixed(2),
        mode: renderMode,
        timestamp: new Date().toLocaleTimeString()
      }); // ← 重点：性能数据记录
    }, 100);
  }, [renderMode]);

  useEffect(() => {
    measurePerformance(); // ← 重点：渲染模式变化时测量性能
  }, [renderMode, measurePerformance]);

  return (
    <div className="space-y-6">
      <div className="flex gap-4">
        {['server', 'client', 'hybrid'].map(mode => (
          <button
            key={mode}
            onClick={() => setRenderMode(mode as any)} // ← 重点：切换渲染模式
            className={\`px-4 py-2 rounded \${renderMode === mode ? 'bg-blue-500 text-white' : 'bg-gray-200'}\`}
          >
            {mode.toUpperCase()}
          </button>
        ))}
      </div>
      
      {renderMode === 'server' && <ServerUserList />} {/* ← 重点：服务端组件 */}
      {renderMode === 'client' && <ClientUserList />} {/* ← 重点：客户端组件 */}
      {renderMode === 'hybrid' && (
        <div>
          <ServerPostList /> {/* ← 重点：混合渲染 - 静态内容 */}
          <ClientInteraction /> {/* ← 重点：混合渲染 - 交互功能 */}
        </div>
      )}
    </div>
  );
};`,language:"tsx",highlights:[3,7,16,22,31,38,39,42,43]}},{title:"示例3：性能对比分析",description:"对比不同渲染模式的性能表现，帮助选择最佳方案",component:e.jsx(C,{}),observationPoints:["实时监控不同渲染模式的性能指标","可视化展示渲染时间和资源使用情况","提供性能优化建议和最佳实践","支持自定义测试场景和参数配置"],keyPoints:["性能测量是选择渲染模式的重要依据","不同场景下最优的渲染模式可能不同","需要综合考虑首屏加载、交互响应等指标","持续监控和优化是性能管理的关键"],codeExample:{title:"性能对比实现",code:`// 性能对比分析
const PerformanceComparisonExample: React.FC = () => {
  const [metrics, setMetrics] = useState<any[]>([]);
  const [isRunning, setIsRunning] = useState(false);

  const runPerformanceTest = useCallback(async () => {
    setIsRunning(true); // ← 重点：开始性能测试
    const testResults = [];

    for (const mode of ['server', 'client', 'hybrid']) {
      const startTime = performance.now(); // ← 重点：测量开始时间
      
      // 模拟不同渲染模式的性能
      await new Promise(resolve => {
        setTimeout(resolve, mode === 'server' ? 200 : mode === 'client' ? 150 : 100);
      });
      
      const endTime = performance.now();
      const renderTime = endTime - startTime; // ← 重点：计算渲染时间
      
      testResults.push({
        mode,
        renderTime: renderTime.toFixed(2),
        memoryUsage: (performance as any).memory?.usedJSHeapSize || 0, // ← 重点：内存使用
        timestamp: new Date().toLocaleTimeString()
      });
    }

    setMetrics(testResults); // ← 重点：更新性能指标
    setIsRunning(false);
  }, []);

  return (
    <div className="space-y-6">
      <button
        onClick={runPerformanceTest} // ← 重点：触发性能测试
        disabled={isRunning}
        className="px-6 py-2 bg-green-500 text-white rounded disabled:opacity-50"
      >
        {isRunning ? '测试中...' : '运行性能测试'}
      </button>
      
      {metrics.length > 0 && (
        <div className="grid grid-cols-3 gap-4">
          {metrics.map((metric, index) => (
            <div key={index} className="p-4 border rounded">
              <h4 className="font-semibold">{metric.mode.toUpperCase()}</h4>
              <p>渲染时间: {metric.renderTime}ms</p> {/* ← 重点：性能数据展示 */}
              <p>内存使用: {(metric.memoryUsage / 1024 / 1024).toFixed(2)}MB</p>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};`,language:"tsx",highlights:[7,11,19,24,29,36,47,48]}}],tutorial:{concepts:["服务端组件是在服务器上执行和渲染的React组件","服务端组件可以直接访问服务端资源（数据库、文件系统、API）","服务端组件与客户端组件可以无缝集成，各自发挥优势","Suspense提供优雅的异步加载和错误处理机制","混合渲染结合了服务端和客户端渲染的优势"],steps:["1. 创建服务端组件：定义在服务器上执行的组件逻辑","2. 实现数据获取：在服务端组件中直接访问数据源","3. 配置Suspense：为异步操作提供加载状态处理","4. 集成客户端组件：在需要交互的地方使用客户端组件","5. 优化性能：基于实际测量数据优化渲染策略","6. 实施缓存：配置适当的缓存策略提高性能","7. 错误处理：实现优雅的错误处理和降级方案","8. 监控分析：持续监控性能指标并进行优化"],tips:["根据内容特性选择渲染模式：静态内容用服务端，交互用客户端","使用Suspense和ErrorBoundary提供良好的用户体验","实施多层缓存策略：组件缓存、数据缓存、CDN缓存","合理划分服务端和客户端组件的职责边界","基于实际性能数据做出优化决策，避免过早优化","提供优雅的错误处理和降级方案","使用流式渲染优化首屏加载时间","持续监控和分析性能指标，及时发现问题"]},interview:{questions:[{question:"什么是React服务端组件？它与传统的服务端渲染有什么区别？",answer:"React服务端组件是在服务器上执行和渲染的组件，可以直接访问服务端资源。与传统SSR不同，服务端组件是React的原生特性，支持与客户端组件无缝集成，可以实现更细粒度的渲染控制。需要注意的是，纯React应用不支持服务端组件，需要Next.js 13+、Remix等框架支持。"},{question:"服务端组件有哪些主要优势？",answer:"主要优势包括：1) 性能优化 - 减少客户端JavaScript包大小；2) 直接访问 - 可以直接访问数据库、文件系统等服务端资源；3) SEO友好 - 提供更好的SEO和首屏加载性能；4) 无缝集成 - 与客户端组件可以无缝集成；5) 流式渲染 - 支持流式渲染和Suspense。"},{question:"如何在服务端组件和客户端组件之间进行选择？",answer:"选择原则：1) 静态内容和数据展示适合服务端组件；2) 需要用户交互和状态管理的适合客户端组件；3) 需要访问浏览器API的必须使用客户端组件；4) 基于实际性能测量数据做决策；5) 可以采用混合渲染策略，结合两者优势。"},{question:"服务端组件有哪些限制？",answer:"主要限制包括：1) 需要支持的框架（Next.js、Remix等），纯React不支持；2) 不能使用浏览器特有的API（window、document等）；3) 不能添加事件处理器或使用状态管理；4) 不能使用useEffect、useState等客户端Hook；5) 需要考虑服务端性能影响；6) 需要实现适当的缓存和错误处理策略。"},{question:"如何优化服务端组件的性能？",answer:"性能优化策略：1) 实施多层缓存（组件缓存、数据缓存、CDN缓存）；2) 使用流式渲染优化首屏加载；3) 合理划分组件职责，避免过度渲染；4) 监控性能指标，基于数据优化；5) 实现优雅的错误处理和降级方案；6) 优化数据获取逻辑，减少不必要的查询。"},{question:"如何在不同框架中识别和使用服务端组件？",answer:"不同框架的实现方式：1) Next.js 13+：在app目录下默认为服务端组件，客户端组件需要'use client'指令；2) Remix：使用loader函数在服务端获取数据；3) 纯React：不支持真正的服务端组件，所有组件都在客户端运行。服务端组件通常通过文件位置和导入方式区分，而非特殊文件扩展名。"}],keyPoints:["服务端组件需要支持的框架（Next.js、Remix等），纯React不支持","服务端组件在服务器上执行，可以直接访问服务端资源","服务端组件不能使用浏览器API和事件处理器","Next.js中通过'use client'指令区分客户端组件","Suspense提供优雅的异步加载和错误处理","混合渲染可以结合两种组件的优势","性能优化需要基于实际测量和监控数据","缓存策略是服务端组件性能的关键"]},bestPractices:{dos:["根据内容特性选择合适的渲染模式（静态内容用服务端，交互用客户端）","使用Suspense处理异步数据加载，提供优雅的加载体验","实施适当的缓存策略，提高服务端组件性能","合理划分服务端和客户端组件的职责边界","监控和测量不同渲染模式的性能表现","提供优雅的错误处理和降级方案","使用流式渲染优化首屏加载时间","在服务端组件中直接访问数据源，减少API调用"],donts:["不要在服务端组件中使用浏览器特有的API（window、document等）","不要在服务端组件中添加事件处理器或状态管理","不要盲目选择渲染模式，要基于实际需求和性能数据","不要忽略服务端组件对服务器性能的影响","不要过度优化，保持代码的简洁和可维护性","不要在没有缓存策略的情况下频繁进行数据库查询","不要忽略错误处理和用户体验","不要混淆服务端组件和传统的服务端渲染概念"],patterns:["数据获取模式：在服务端组件中直接获取数据，通过props传递给客户端组件","混合渲染模式：静态内容使用服务端组件，动态交互使用客户端组件","缓存模式：实现多层缓存策略（组件缓存、数据缓存、CDN缓存）","错误边界模式：使用ErrorBoundary和Suspense处理异步加载错误","流式渲染模式：使用Suspense实现渐进式页面加载","性能监控模式：实施全面的性能监控和分析","降级模式：为服务端组件提供客户端降级方案","组件分离模式：清晰分离服务端和客户端组件的职责"]}};return e.jsx(v,{...i})};export{k as default};
