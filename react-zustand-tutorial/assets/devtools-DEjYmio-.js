const _=(i,s)=>(r,l,d)=>{const f=(s==null?void 0:s.name)||"Zustand Store";if(!((s==null?void 0:s.enabled)??!1))return i(r,l,d);if(typeof window<"u"&&window.__REDUX_DEVTOOLS_EXTENSION__){const a=window.__REDUX_DEVTOOLS_EXTENSION__.connect({name:f});return a.init(l()),i((...o)=>{const S=l();r(...o);const y=l();let e="unknown action",u;try{const t=new Error().stack;if(t){const n=t.split(`
`);for(const c of n)if(c.includes("incrementByStep")){e="incrementByStep";break}else if(c.includes("decrementByStep")){e="decrementByStep";break}else if(c.includes("increment")){e="increment";break}else if(c.includes("decrement")){e="decrement";break}else if(c.includes("reset")){e="reset";break}else if(c.includes("setStep")){e="setStep";break}else if(c.includes("clearHistory")){e="clearHistory";break}else if(c.includes("clearLogs")){e="clearLogs";break}}}catch{}if(e==="unknown action"&&o.length>0){const t=o[0];if(typeof t=="function"){e=t.name||"anonymous function";const n=t.toString();n.includes("count + 1")?e="increment":n.includes("count - 1")?e="decrement":n.includes("count + step")?e="incrementByStep":n.includes("count - step")?e="decrementByStep":n.includes("count: 0")?e="reset":n.includes("step")?e="setStep":n.includes("history: []")?e="clearHistory":n.includes("logs: []")&&(e="clearLogs")}else if(typeof t=="object"&&t!==null){const n=Object.keys(t);n.length>0?(e=`update: ${n.join(", ")}`,u=t):e="state update"}else e=String(t)}a.send({type:e,payload:u},y,S)},l,d)}return i(r,l,d)};export{_ as d};
